{"version":3,"sources":["components/shared-components/Flex/index.js","configs/AppConfig.js","components/shared-components/ColorPicker/index.js","configs/EnvironmentConfig.js","constants/ThemeConstant.js","services/auth.service.js","redux/constants/Auth.js","redux/reducers/Auth.js","redux/constants/Theme.js","redux/reducers/Theme.js","redux/reducers/index.js","configs/FirebaseConfig.js","auth/FirebaseAuth.js","services/FirebaseService.js","redux/sagas/Auth.js","redux/sagas/index.js","redux/store/index.js","components/util-components/IntlMessage/index.js","configs/NavigationConfig.js","redux/actions/Theme.js","components/layout-components/MenuContent.js","components/layout-components/SideNav.js","components/layout-components/TopNav.js","components/layout-components/Logo.js","components/layout-components/MobileNav.js","components/layout-components/NavNotification.js","components/layout-components/NavProfile.js","components/layout-components/NavLanguage.js","components/layout-components/ThemeConfigurator.js","components/layout-components/NavPanel.js","components/layout-components/NavSearch/SearchInput.js","components/layout-components/NavSearch/index.js","components/layout-components/HeaderNav.js","components/layout-components/AppBreadcrumb.js","components/layout-components/PageHeader.js","components/layout-components/Footer.js","views/app-views/index.js","layouts/app-layout/index.js","views/auth-views/index.js","layouts/auth-layout/index.js","lang/entries/en_US.js","lang/entries/zh_CN.js","lang/entries/fr_FR.js","lang/index.js","lang/entries/ja_JP.js","hooks/useBodyClass.js","views/index.js","App.js","serviceWorker.js","index.js","redux/actions/Auth.js","utils/index.js","components/util-components/Icon/index.js","components/shared-components/Loading/index.js"],"names":["Flex","props","children","className","alignItems","justifyContent","mobileFlex","flexDirection","defaultProps","APP_NAME","API_BASE_URL","env","API_ENDPOINT_URL","APP_PREFIX_PATH","AUTH_PREFIX_PATH","THEME_CONFIG","navCollapsed","sideNavTheme","SIDE_NAV_LIGHT","locale","navType","NAV_TYPE_SIDE","topNavColor","headerNavColor","mobileNav","currentTheme","direction","DIR_LTR","ColorPicker","colorChange","color","visible","setVisible","useState","pickerColor","setPickerColor","boxColor","setBoxColor","useEffect","onPickerDropdown","style","backgroundColor","onClick","onChange","value","rgb","rgba","r","g","b","a","ROW_GUTTER","SIDE_NAV_WIDTH","SIDE_NAV_COLLAPSED_WIDTH","SIDE_NAV_DARK","NAV_TYPE_TOP","DIR_RTL","API_URL","register","username","email","password","axios","post","login","then","response","data","accessToken","localStorage","setItem","JSON","stringify","logout","removeItem","getCurrentUser","parse","getItem","SIGNIN","AUTHENTICATED","SIGNOUT","SIGNOUT_SUCCESS","SIGNUP","SIGNUP_SUCCESS","SHOW_AUTH_MESSAGE","HIDE_AUTH_MESSAGE","SHOW_LOADING","AUTH_TOKEN","SIGNIN_WITH_GOOGLE","SIGNIN_WITH_GOOGLE_AUTHENTICATED","SIGNIN_WITH_FACEBOOK","SIGNIN_WITH_FACEBOOK_AUTHENTICATED","initState","loading","message","showMessage","redirect","token","auth","state","action","type","TOGGLE_COLLAPSED_NAV","CHANGE_LOCALE","SIDE_NAV_STYLE_CHANGE","NAV_TYPE_CHANGE","TOP_NAV_COLOR_CHANGE","HEADER_NAV_COLOR_CHANGE","TOGGLE_MOBILE_NAV","SWITCH_THEME","DIRECTION_CHANGE","initTheme","theme","reducers","combineReducers","Theme","Auth","FirebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","firebaseConfig","firestore","googleAuthProvider","currentUser","GoogleAuthProvider","facebookAuthProvider","FacebookAuthProvider","FirebaseService","TwitterAuthProvider","GithubAuthProvider","async","signInWithEmailAndPassword","user","catch","err","signInEmailRequest","signOutRequest","signOut","signInGoogleRequest","signInWithPopup","signInFacebookRequest","signUpEmailRequest","createUserWithEmailAndPassword","signInWithFBEmail","takeEvery","payload","call","put","showAuthMessage","uid","authenticated","signOutUser","undefined","signOutSuccess","signUpWithFBEmail","signUpSuccess","error","signInWithFBGoogle","signInWithGoogleAuthenticated","signInWithFacebook","signInWithFacebookAuthenticated","rootSaga","all","fork","getState","sagaMiddleware","createSagaMiddleware","middlewares","store","preloadedState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","run","configureStore","injectIntl","withRef","PlusCircleOutlined","FileTextOutlined","SafetyOutlined","StopOutlined","navigationConfig","key","path","title","icon","DashboardOutlined","breadcrumb","submenu","StockOutlined","UsergroupAddOutlined","LaptopOutlined","AppstoreOutlined","HomeFilled","toggleCollapsedNav","onMobileNavToggle","SubMenu","Menu","useBreakpoint","Grid","setLocale","isLocaleOn","localeKey","id","toString","setDefaultOpen","keyList","keyString","arr","split","index","length","elm","push","SideNavContent","routeInfo","hideGroupTitle","localization","isMobile","utils","getBreakPoint","includes","closeMobileNav","mode","height","borderRight","defaultSelectedKeys","defaultOpenKeys","map","menu","ItemGroup","subMenuFirst","Icon","subMenuSecond","Item","to","TopNavContent","popupClassName","connect","Sider","Layout","width","collapsed","autoHide","getColorContrast","getLogoWidthGutter","isNavTop","mobileLogo","getLogo","logoType","getLogoDisplay","src","alt","onClose","placement","closable","bodyStyle","padding","ArrowLeftOutlined","getIcon","MailOutlined","WarningOutlined","CheckCircleOutlined","NavNotification","setData","notificationData","notificationList","size","list","itemLayout","dataSource","renderItem","item","img","name","desc","time","href","overlay","onVisibleChange","flag","trigger","count","BellOutlined","menuItem","EditOutlined","username__","useSelector","profileImg","profileMenu","MARGINTOP","el","i","e","LogoutOutlined","SelectedLanguage","language","lang","filter","langId","getLanguageDetail","langName","maxWidth","DownOutlined","onLocaleChange","configDisplay","languageOption","CheckOutlined","preventDefault","GlobalOutlined","colorOptions","ListOption","selector","disabled","vertical","mapDispatchToProps","onNavTypeChange","onNavStyleChange","onTopNavColorChange","onHeaderNavColorChange","onSwitchTheme","onDirectionChange","isCollapse","switcher","themes","useThemeSwitcher","hex","rgbaToHex","Group","onNavTypeClick","target","Button","checked","isChecked","changedTheme","NavPanel","Component","showDrawer","this","setState","render","SettingOutlined","optionList","getOptionList","navigationTree","optionTree","navItem","getCategoryIcon","category","AntDesignOutlined","SearchInput","active","close","setValue","options","setOptions","inputRef","useRef","current","focus","ref","dropdownClassName","onSelect","onSearch","searchText","label","filterOption","inputValue","option","toUpperCase","indexOf","placeholder","prefix","SearchOutlined","CloseOutlined","Header","searchActive","setSearchActive","onSearchClose","navMode","MenuUnfoldOutlined","MenuFoldOutlined","cursor","breadcrumbData","forEach","assignBreadcrumb","obj","BreadcrumbRoute","withRouter","location","pathSnippets","pathname","buildBreadcrumb","_","url","slice","join","AppBreadcrumb","PageHeader","display","Footer","Date","getFullYear","AppViews","fallback","Loading","cover","component","lazy","from","React","memo","Content","AppLayout","currentRouteInfo","getRouteInfo","screens","isNavSide","getLayoutGutter","status","paddingLeft","paddingRight","AuthLayout","AuthViews","EnLang","antd","antdEnUS","messages","enMsg","ZhLang","antdZhCn","zhMsg","FrLang","antdFrFR","frMsg","AppLocale","en","enLang","zh","zhLang","fr","frLang","ja","antdJaJP","jaMsg","addBodyClass","document","body","classList","add","removeBodyClass","remove","RouteInterceptor","isAuthenticated","rest","currentAppLocale","Array","exact","dark","light","App","themeMap","defaultTheme","insertionPoint","Views","Boolean","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","signIn","console","log","signUp","signInWithGoogle","hideAuthMessage","showLoading","Utils","initials","shift","pop","navTree","route","p","hasOwnProperty","cutHex","h","charAt","substring","parseInt","hexToG","hexToB","percent","R","G","B","trim","str","replace","inParts","parseFloat","toFixed","outParts","Math","round","part","number","positive","negative","toLowerCase","input","breakpoints","createElement","fontSize","spin","align","indicator"],"mappings":"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","file":"static/js/main.f1b0a8a6.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Flex = props => {\r\n\tconst { children, className, alignItems, justifyContent, mobileFlex, flexDirection } = props\r\n\tconst getFlexResponsive = () => mobileFlex ? 'd-flex' : 'd-md-flex'\r\n\treturn (\r\n\t\t<div className={`${getFlexResponsive()} ${className} ${flexDirection?('flex-' + flexDirection): ''} ${alignItems?('align-items-' + alignItems):''} ${justifyContent?('justify-content-' + justifyContent):''}` }>\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nFlex.propTypes = {\r\n\tclassName: PropTypes.string,\r\n\talignItems: PropTypes.string,\r\n\tflexDirection: PropTypes.string,\r\n\tjustifyContent: PropTypes.string,\r\n\tmobileFlex: PropTypes.bool\r\n}\r\n\r\nFlex.defaultProps = {\r\n\tmobileFlex: true,\r\n\tflexDirection: 'row',\r\n\tclassName: ''\r\n};\r\n\r\n\r\nexport default Flex\r\n","import { SIDE_NAV_LIGHT, NAV_TYPE_SIDE, DIR_LTR } from 'constants/ThemeConstant';\r\nimport { env } from './EnvironmentConfig'\r\n\r\nexport const APP_NAME = 'MATU';\r\nexport const API_BASE_URL = env.API_ENDPOINT_URL\r\nexport const APP_PREFIX_PATH = '/app';\r\nexport const AUTH_PREFIX_PATH = '/auth';\r\n\r\nexport const THEME_CONFIG = {\r\n\tnavCollapsed: false,\r\n\tsideNavTheme: SIDE_NAV_LIGHT,\r\n\tlocale: 'fr',\r\n\tnavType: NAV_TYPE_SIDE,\r\n\ttopNavColor: '#3e82f7',\r\n\theaderNavColor: '',\r\n\tmobileNav: false,\r\n\tcurrentTheme: 'light',\r\n\tdirection: DIR_LTR\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { SketchPicker } from 'react-color';\r\n\r\nconst ColorPicker = props => {\r\n\r\n\tconst { colorChange, color='' } = props\r\n\r\n\tconst [visible, setVisible] = useState(false);\r\n\tconst [pickerColor, setPickerColor] = useState(color)\r\n\tconst [boxColor, setBoxColor] = useState(color)\r\n\r\n\tuseEffect(() => {\r\n\t\tsetBoxColor(color);\r\n\t\tsetPickerColor(color)\r\n\t}, [color]);\r\n\r\n\tconst onPickerDropdown = () => {\r\n\t\tsetVisible(!visible)\r\n\t}\r\n\r\n\tconst onColorChange = (value) => {\r\n\t\tconst {rgb} = value\r\n\t\tconst rgba = `rgb(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`\r\n\t\tsetBoxColor(rgba)\r\n\t\tsetPickerColor(rgb)\r\n\t\tcolorChange(value)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"color-picker\">\r\n\t\t\t<div className=\"color-picker-dropdown\">\r\n\t\t\t\t<div className=\"color\" style={{backgroundColor: boxColor ? boxColor : '#ffffff'}} onClick={onPickerDropdown} />\r\n\t\t\t</div>\r\n\t\t\t{\r\n\t\t\t\tvisible && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div className=\"color-picker-backdrop\" onClick={onPickerDropdown}/>\r\n\t\t\t\t\t\t<SketchPicker color={pickerColor} onChange={onColorChange}/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nColorPicker.propTypes = {\r\n\tcolor: PropTypes.string,\r\n\tcolorChange: PropTypes.func\r\n}\r\n\r\n\r\nexport default ColorPicker;\r\n","const dev = {\r\n  API_ENDPOINT_URL: 'https://localhost:8080/api/auth/'\r\n};\r\n\r\nconst prod = {\r\n  API_ENDPOINT_URL: 'https://api.prod.com'\r\n};\r\n\r\nconst test = {\r\n  API_ENDPOINT_URL: 'https://api.test.com'\r\n};\r\n\r\nconst getEnv = () => {\r\n\tswitch (process.env.NODE_ENV) {\r\n\t\tcase 'development':\r\n\t\t\treturn dev\r\n\t\tcase 'production':\r\n\t\t\treturn prod\r\n\t\tcase 'test':\r\n\t\t\treturn test\r\n\t\tdefault:\r\n\t\t\tbreak;\r\n\t}\r\n}\r\n\r\nexport const env = getEnv()\r\n","export const ROW_GUTTER = 16;\r\nexport const SIDE_NAV_WIDTH = 190;\r\nexport const SIDE_NAV_COLLAPSED_WIDTH = 80;\r\nexport const SIDE_NAV_LIGHT = 'SIDE_NAV_LIGHT';\r\nexport const SIDE_NAV_DARK = 'SIDE_NAV_DARK';\r\nexport const NAV_TYPE_SIDE = 'SIDE'\r\nexport const NAV_TYPE_TOP = 'TOP'\r\nexport const DIR_LTR = 'ltr'\r\nexport const DIR_RTL = 'rtl'\r\n","import axios from \"axios\";\n\nconst API_URL = \"http://localhost:2022/api/auth/\";\n\nconst register = (username, email, password) => {\n  return axios.post(API_URL + \"signup\", {\n    username,\n    email,\n    password,\n  });\n};\n\nconst login = (username, password) => {\n  return axios\n    .post(API_URL + \"signin\", {\n      username,\n      password,\n    })\n    .then((response) => {\n      if (response.data.accessToken) {\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\n      }\n\n      return response.data;\n    });\n};\n\nconst getCurrentUser = () => {\n  return JSON.parse(localStorage.getItem(\"user\"));\n};\nconst logout = () => {\n  localStorage.removeItem(\"user\");\n};\n\nexport default {\n  register,\n  login,\n  logout,\n  getCurrentUser,\n};\n","export const SIGNIN = 'SIGNIN'; \r\nexport const AUTHENTICATED = 'AUTHENTICATED';\r\n// export const USERNAME = 'USERNAME';\r\nexport const SIGNOUT = 'SIGNOUT';\r\nexport const SIGNOUT_SUCCESS = 'SIGNOUT_SUCCESS'\r\nexport const SIGNUP = 'SIGNUP';\r\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS'\r\nexport const SHOW_AUTH_MESSAGE = 'SHOW_AUTH_MESSAGE'\r\nexport const HIDE_AUTH_MESSAGE = 'HIDE_AUTH_MESSAGE'\r\nexport const SHOW_LOADING = 'SHOW_LOADING'\r\nexport const AUTH_TOKEN = 'auth_token'\r\nexport const SIGNIN_WITH_GOOGLE = 'SIGNIN_WITH_GOOGLE'\r\nexport const SIGNIN_WITH_GOOGLE_AUTHENTICATED = 'SIGNIN_WITH_GOOGLE_AUTHENTICATED'\r\nexport const SIGNIN_WITH_FACEBOOK = 'SIGNIN_WITH_FACEBOOK'\r\nexport const SIGNIN_WITH_FACEBOOK_AUTHENTICATED = 'SIGNIN_WITH_FACEBOOK_AUTHENTICATED'","import {\r\n\tAUTH_TOKEN,\r\n\tAUTHENTICATED,\r\n\tUSERNAME,\r\n\tSHOW_AUTH_MESSAGE,\r\n\tHIDE_AUTH_MESSAGE,\r\n\tSIGNOUT_SUCCESS,\r\n\tSIGNUP_SUCCESS,\r\n\tSHOW_LOADING,\r\n\tSIGNIN_WITH_GOOGLE_AUTHENTICATED,\r\n  SIGNIN_WITH_FACEBOOK_AUTHENTICATED\r\n} from '../constants/Auth';\r\n\r\nimport AuthService from \"services/auth.service\";\r\n\r\nconst initState = {\r\n  loading: false,\r\n  message: '',\r\n  showMessage: false,\r\n  redirect: '',\r\n  token: localStorage.getItem(AUTH_TOKEN),\r\n  username: '',\r\n}\r\n\r\nconst auth = (state = initState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase AUTHENTICATED:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tredirect: '/',\r\n\t\t\t\ttoken: action.token,\r\n\t\t\t\tusername: action.username\r\n\t\t\t}\r\n\t\tcase SHOW_AUTH_MESSAGE: \r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmessage: action.message,\r\n\t\t\t\tshowMessage: true,\r\n\t\t\t\tloading: false\r\n\t\t\t}\r\n\t\tcase HIDE_AUTH_MESSAGE: \r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmessage: '',\r\n\t\t\t\tshowMessage: false,\r\n\t\t\t}\r\n\t\tcase SIGNOUT_SUCCESS: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttoken: null,\r\n\t\t\t\tredirect: '/',\r\n\t\t\t\tloading: false\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SIGNUP_SUCCESS: {\r\n\t\t\treturn {\r\n\t\t\t  ...state,\r\n\t\t\t  loading: false,\r\n\t\t\t  token: action.token\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SHOW_LOADING: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: true\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SIGNIN_WITH_GOOGLE_AUTHENTICATED: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\ttoken: action.token\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SIGNIN_WITH_FACEBOOK_AUTHENTICATED: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\ttoken: action.token\r\n\t\t\t}\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport default auth","export const TOGGLE_COLLAPSED_NAV = 'TOGGLE_COLLAPSED_NAV';\r\nexport const CHANGE_LOCALE = 'CHANGE_LOCALE';\r\nexport const SIDE_NAV_STYLE_CHANGE = 'SIDE_NAV_STYLE_CHANGE';\r\nexport const NAV_TYPE_CHANGE = 'NAV_TYPE_CHANGE';\r\nexport const TOP_NAV_COLOR_CHANGE = 'TOP_NAV_COLOR_CHANGE';\r\nexport const HEADER_NAV_COLOR_CHANGE = 'HEADER_NAV_COLOR_CHANGE';\r\nexport const TOGGLE_MOBILE_NAV = 'TOGGLE_MOBILE_NAV';\r\nexport const SWITCH_THEME = 'SWITCH_THEME';\r\nexport const DIRECTION_CHANGE = 'DIRECTION_CHANGE';","import {\r\n  TOGGLE_COLLAPSED_NAV,\r\n  CHANGE_LOCALE,\r\n  SIDE_NAV_STYLE_CHANGE,\r\n  NAV_TYPE_CHANGE,\r\n  TOP_NAV_COLOR_CHANGE,\r\n  HEADER_NAV_COLOR_CHANGE,\r\n  TOGGLE_MOBILE_NAV,\r\n  SWITCH_THEME,\r\n  DIRECTION_CHANGE\r\n} from '../constants/Theme';\r\nimport { THEME_CONFIG } from 'configs/AppConfig'\r\n\r\nconst initTheme = {\r\n  ...THEME_CONFIG\r\n};\r\n\r\nconst theme = (state = initTheme, action) => {\r\n  switch (action.type) {\r\n    case TOGGLE_COLLAPSED_NAV:\r\n      return {\r\n        ...state,\r\n        navCollapsed: action.navCollapsed\r\n      };\r\n    case SIDE_NAV_STYLE_CHANGE:\r\n      return {\r\n        ...state,\r\n        sideNavTheme: action.sideNavTheme\r\n      };\r\n    case CHANGE_LOCALE:\r\n      return {\r\n        ...state,\r\n        locale: action.locale\r\n      };\r\n    case NAV_TYPE_CHANGE:\r\n      return {\r\n        ...state,\r\n        navType: action.navType\r\n      };\r\n    case TOP_NAV_COLOR_CHANGE:\r\n      return {\r\n        ...state,\r\n        topNavColor: action.topNavColor\r\n      };\r\n    case HEADER_NAV_COLOR_CHANGE:\r\n      return {\r\n        ...state,\r\n        headerNavColor: action.headerNavColor\r\n      };\r\n    case TOGGLE_MOBILE_NAV:\r\n      return {\r\n        ...state,\r\n        mobileNav: action.mobileNav\r\n      };\r\n    case SWITCH_THEME:\r\n      return {\r\n        ...state,\r\n        currentTheme: action.currentTheme\r\n      }\r\n    case DIRECTION_CHANGE:\r\n      return {\r\n        ...state,\r\n        direction: action.direction\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default theme","import { combineReducers } from 'redux';\r\nimport Auth from './Auth';\r\nimport Theme from './Theme';\r\n\r\nconst reducers = combineReducers({\r\n    theme: Theme,\r\n    auth: Auth\r\n});\r\n\r\nexport default reducers;","const FirebaseConfig = {\r\n  apiKey: 'AIzaSyAOWoRQGoegkmwnCca7B2GG5GUG_ZP1lcM',\r\n  authDomain: 'emilus.firebaseapp.com',\r\n  databaseURL: 'https://emilus.firebaseio.com',\r\n  projectId: 'emilus',\r\n  storageBucket: 'emilus.appspot.com',\r\n  messagingSenderId: '807555350717',\r\n  appId: '1:807555350717:web:145ba7c21af47203a2f7d4',\r\n  measurementId: 'G-8KE7HJB252'\r\n};\r\n\r\nexport default FirebaseConfig\r\n\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport firebaseConfig from 'configs/FirebaseConfig';\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n// firebase utils\r\nconst db = firebase.firestore()\r\nconst auth = firebase.auth();\r\nconst currentUser = auth.currentUser\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\nconst facebookAuthProvider = new firebase.auth.FacebookAuthProvider();\r\nconst twitterAuthProvider = new firebase.auth.TwitterAuthProvider();\r\nconst githubAuthProvider = new firebase.auth.GithubAuthProvider();\r\n\r\nexport {\r\n\tdb,\r\n\tauth,\r\n\tcurrentUser,\r\n\tgoogleAuthProvider,\r\n\tfacebookAuthProvider,\r\n\ttwitterAuthProvider,\r\n\tgithubAuthProvider\r\n};","import { auth, googleAuthProvider, facebookAuthProvider } from 'auth/FirebaseAuth';\r\n\r\nconst FirebaseService = {}\r\n\r\nFirebaseService.signInEmailRequest = async (email, password) =>\r\n\tawait auth.signInWithEmailAndPassword(email, password).then(user => user).catch(err => err);\r\n\r\nFirebaseService.signInEmailRequest = async (email, password) =>\r\n  await auth.signInWithEmailAndPassword(email, password).then(user => user).catch(err => err);\r\n\t\t\r\nFirebaseService.signOutRequest = async () =>\r\n\tawait auth.signOut().then(user => user).catch(err => err);\r\n\r\nFirebaseService.signInGoogleRequest = async () =>\r\n  await auth.signInWithPopup(googleAuthProvider).then(user => user).catch(err => err);\r\n\r\nFirebaseService.signInFacebookRequest = async () =>\r\n  await auth.signInWithPopup(facebookAuthProvider).then(user => user).catch(err => err);\r\n\r\nFirebaseService.signUpEmailRequest = async (email, password) =>\r\n\tawait auth.createUserWithEmailAndPassword(email, password).then(user => user).catch(err => err);\t\r\n\t\r\nexport default FirebaseService","import { all, takeEvery, put, fork, call } from 'redux-saga/effects';\r\nimport {\r\n\tAUTH_TOKEN,\r\n\tSIGNIN,\r\n\tSIGNOUT,\r\n\tSIGNUP,\r\n\tSIGNIN_WITH_GOOGLE,\r\n\tSIGNIN_WITH_FACEBOOK\r\n} from '../constants/Auth';\r\nimport {\r\n\tshowAuthMessage,\r\n\tauthenticated,\r\n\tsignOutSuccess,\r\n\tsignUpSuccess,\r\n\tsignInWithGoogleAuthenticated,\r\n\tsignInWithFacebookAuthenticated\r\n} from \"../actions/Auth\";\r\n\r\nimport FirebaseService from 'services/FirebaseService'\r\n\r\nexport function* signInWithFBEmail() {\r\n  yield takeEvery(SIGNIN, function* ({payload}) {\r\n\t\tconst {email, password} = payload;\r\n\t\ttry {\r\n\t\t\tconst user = yield call(FirebaseService.signInEmailRequest, email, password);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n\t\t\t\tyield put(authenticated(user.user.uid));\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tyield put(showAuthMessage(err));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport function* signOut() {\r\n  yield takeEvery(SIGNOUT, function* () {\r\n\t\ttry {\r\n\t\t\tconst signOutUser = yield call(FirebaseService.signOutRequest);\r\n\t\t\tif (signOutUser === undefined) {\r\n\t\t\t\tlocalStorage.removeItem(AUTH_TOKEN);\r\n\t\t\t\tyield put(signOutSuccess(signOutUser));\r\n\t\t\t} else {\r\n\t\t\t\tyield put(showAuthMessage(signOutUser.message));\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tyield put(showAuthMessage(err));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport function* signUpWithFBEmail() {\r\n  yield takeEvery(SIGNUP, function* ({payload}) {\r\n\t\tconst {email, password} = payload;\r\n\t\ttry {\r\n\t\t\tconst user = yield call(FirebaseService.signUpEmailRequest, email, password);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n\t\t\t\tyield put(signUpSuccess(user.user.uid));\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tyield put(showAuthMessage(error));\r\n\t\t}\r\n\t}\r\n\t);\r\n}\r\n\r\nexport function* signInWithFBGoogle() {\r\n  yield takeEvery(SIGNIN_WITH_GOOGLE, function* () {\r\n\t\ttry {\r\n\t\t\tconst user = yield call(FirebaseService.signInGoogleRequest);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n\t\t\t\tyield put(signInWithGoogleAuthenticated(user.user.uid));\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tyield put(showAuthMessage(error));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport function* signInWithFacebook() {\r\n  yield takeEvery(SIGNIN_WITH_FACEBOOK, function* () {\r\n\t\ttry {\r\n\t\t\tconst user = yield call(FirebaseService.signInFacebookRequest);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n\t\t\t\tyield put(signInWithFacebookAuthenticated(user.user.uid));\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tyield put(showAuthMessage(error));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n\t\tfork(signInWithFBEmail),\r\n\t\tfork(signOut),\r\n\t\tfork(signUpWithFBEmail),\r\n\t\tfork(signInWithFBGoogle),\r\n\t\tfork(signInWithFacebook)\r\n  ]);\r\n}\r\n","import { all } from 'redux-saga/effects';\r\nimport Auth from './Auth';\r\n\r\nexport default function* rootSaga(getState) {\r\n  yield all([\r\n    Auth(),\r\n  ]);\r\n}\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport reducers from \"../reducers\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport rootSaga from \"../sagas/index\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst middlewares = [sagaMiddleware];\r\n\r\nfunction configureStore(preloadedState) {\r\n \r\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n  const store = createStore(reducers, preloadedState, composeEnhancers(\r\n    applyMiddleware(...middlewares)\r\n  ));\r\n\r\n  sagaMiddleware.run(rootSaga);\r\n\r\n  if (module.hot) {\r\n    module.hot.accept(\"../reducers/index\", () => {\r\n      const nextRootReducer = require(\"../reducers/index\");\r\n      store.replaceReducer(nextRootReducer);\r\n    });\r\n  }\r\n\r\n  return store;\r\n}\r\n\r\nconst store = configureStore();\r\n\r\nexport default store;\r\n\r\n","import React from \"react\";\r\nimport {FormattedMessage, injectIntl} from \"react-intl\";\r\n\r\nconst IntlMessage = props => <FormattedMessage {...props} />;\r\nexport default injectIntl(IntlMessage, {\r\n  withRef: false\r\n});\r\n","import { \r\n  DashboardOutlined, \r\n  AppstoreOutlined,\r\n  FileTextOutlined,\r\n  PieChartOutlined,\r\n  EnvironmentOutlined,\r\n  AntDesignOutlined,\r\n  SafetyOutlined,\r\n  StopOutlined,\r\n  StockOutlined ,\r\n  HomeFilled ,\r\n  MessageOutlined,\r\n  CalendarOutlined,\r\n  UsergroupAddOutlined ,\r\n  InfoCircleOutlined,\r\n  CompassOutlined,\r\n  LayoutOutlined,\r\n  DesktopOutlined,\r\n  FileDoneOutlined,\r\n  CommentOutlined,\r\n  RobotOutlined,\r\n  PlusCircleOutlined,\r\n  FundOutlined,\r\n  LaptopOutlined ,\r\n  BookOutlined,\r\n  FileUnknownOutlined,\r\n  ProfileOutlined,\r\n} from '@ant-design/icons';\r\nimport { APP_PREFIX_PATH, AUTH_PREFIX_PATH } from 'configs/AppConfig'\r\n\r\nconst extraNavTree = [\r\n  {\r\n    key: 'extra',\r\n    path: `${APP_PREFIX_PATH}/pages`,\r\n    title: 'sidenav.pages',\r\n    icon: PlusCircleOutlined,\r\n    breadcrumb: true,\r\n    submenu: [\r\n      {\r\n        key: 'extra-pages',\r\n        path: `${APP_PREFIX_PATH}/pages`,\r\n        title: 'sidenav.pages',\r\n        icon: FileTextOutlined,\r\n        breadcrumb: true,\r\n        submenu: [\r\n          {\r\n            key: 'extra-pages-profile',\r\n            path: `${APP_PREFIX_PATH}/pages/profile`,\r\n            title: 'sidenav.pages.profile',\r\n            icon: '',\r\n            breadcrumb: false,\r\n            submenu: []\r\n          },\r\n          {\r\n            key: 'extra-pages-list',\r\n            path: `${APP_PREFIX_PATH}/pages/user-list`,\r\n            title: 'sidenav.pages.userlist',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: []\r\n          },\r\n          {\r\n            key: 'extra-pages-invoice',\r\n            path: `${APP_PREFIX_PATH}/pages/invoice`,\r\n            title: 'sidenav.pages.invoice',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: []\r\n          },\r\n          {\r\n            key: 'extra-pages-pricing',\r\n            path: `${APP_PREFIX_PATH}/pages/pricing`,\r\n            title: 'sidenav.pages.pricing',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: []\r\n          },\r\n          {\r\n            key: 'extra-pages-faq',\r\n            path: `${APP_PREFIX_PATH}/pages/faq`,\r\n            title: 'sidenav.pages.faq',\r\n            icon: '',\r\n            breadcrumb: false,\r\n            submenu: []\r\n          },\r\n          {\r\n            key: 'extra-pages-setting',\r\n            path: `${APP_PREFIX_PATH}/pages/setting`,\r\n            title: 'sidenav.pages.setting',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: []\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        key: 'extra-auth',\r\n        path: `${AUTH_PREFIX_PATH}`,\r\n        title: 'sidenav.authentication',\r\n        icon: SafetyOutlined,\r\n        breadcrumb: true,\r\n        submenu: [\r\n          {\r\n            key: 'extra-auth-login-1',\r\n            path: `${AUTH_PREFIX_PATH}/login-1`,\r\n            title: 'sidenav.authentication.login.1',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: []\r\n          },\r\n          {\r\n            key: 'extra-auth-login-2',\r\n            path: `${AUTH_PREFIX_PATH}/login-2`,\r\n            title: 'sidenav.authentication.login.2',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: []\r\n          },\r\n          {\r\n            key: 'extra-auth-register-1',\r\n            path: `${AUTH_PREFIX_PATH}/register-1`,\r\n            title: 'sidenav.authentication.register.1',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: []\r\n          },\r\n          {\r\n            key: 'extra-auth-register-2',\r\n            path: `${AUTH_PREFIX_PATH}/register-2`,\r\n            title: 'sidenav.authentication.register.2',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: []\r\n          },\r\n          {\r\n            key: 'extra-auth-forgot-password',\r\n            path: `${AUTH_PREFIX_PATH}/forgot-password`,\r\n            title: 'sidenav.authentication.forgetPassword',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: []\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        key: 'extra-errors',\r\n        path: `${AUTH_PREFIX_PATH}/error-1`,\r\n        title: 'sidenav.errors',\r\n        icon: StopOutlined,\r\n        breadcrumb: true,\r\n        submenu: [\r\n          {\r\n            key: 'extra-errors-error-1',\r\n            path: `${AUTH_PREFIX_PATH}/error-1`,\r\n            title: 'sidenav.errors.error.1',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: []\r\n          },\r\n          {\r\n            key: 'extra-errors-error-2',\r\n            path: `${AUTH_PREFIX_PATH}/error-2`,\r\n            title: 'sidenav.errors.error.2',\r\n            icon: '',\r\n            breadcrumb: true,\r\n            submenu: []\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n]\r\n\r\nconst dashBoardNavTree = [{\r\n  key: 'dashboards',\r\n  path: `${APP_PREFIX_PATH}/dashboards`,\r\n  title: 'sidenav.dashboard',\r\n  icon: DashboardOutlined,\r\n  breadcrumb: false,\r\n  submenu: [\r\n    {\r\n      key: 'dashboards-default',\r\n      path: `${APP_PREFIX_PATH}/dashboards/default`,\r\n      title: 'sidenav.dashboard.default',\r\n      icon: StockOutlined ,\r\n      breadcrumb: false,\r\n      submenu: []\r\n    },\r\n    {\r\n      key: 'dashboards-analytic',\r\n      path: `${APP_PREFIX_PATH}/dashboards/analytic`,\r\n      title: 'sidenav.dashboard.analytic',\r\n      icon: UsergroupAddOutlined ,\r\n      breadcrumb: false,\r\n      submenu: []\r\n    },\r\n    {\r\n      key: 'dashboards-sales',\r\n      path: `${APP_PREFIX_PATH}/dashboards/sales`,\r\n      title: 'sidenav.dashboard.sales',\r\n      icon: LaptopOutlined ,\r\n      breadcrumb: false,\r\n      submenu: []\r\n    }\r\n  ]\r\n}]\r\n\r\nconst parc_info_NavTree = [{\r\n  key: 'parc_info',\r\n  path: `${APP_PREFIX_PATH}/parc_info`,\r\n  title: 'sidenav.parc_info',\r\n  icon: AppstoreOutlined,\r\n  breadcrumb: false,\r\n  submenu: [  \r\n    {\r\n      key: 'parc_info-sites',\r\n      path: `${APP_PREFIX_PATH}/parc_info/sites`,\r\n      title: 'sidenav.parc_info.sites',\r\n      icon: HomeFilled,\r\n      breadcrumb: true,\r\n      submenu: [\r\n        {\r\n          key: 'parc_info-sites-list',\r\n          path: `${APP_PREFIX_PATH}/apps/ecommerce/orders`,\r\n          title: 'sidenav.parc_info.sites.list',\r\n          icon: '',\r\n          breadcrumb: false,\r\n          submenu: []\r\n        },\r\n        {\r\n          key: 'parc_info-sites-add',\r\n          path: `${APP_PREFIX_PATH}/apps/ecommerce/add-product`,\r\n          title: 'sidenav.parc_info.sites.add',\r\n          icon: '',\r\n          breadcrumb: false,\r\n          submenu: []\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      key: 'parc_info-materiales',\r\n      path: `${APP_PREFIX_PATH}/parc_info/materiales`,\r\n      title: 'sidenav.parc_info.materiales',\r\n      icon: LaptopOutlined ,\r\n      breadcrumb: true,\r\n      submenu: [\r\n        {\r\n          key: 'parc_info-materiales-list',\r\n          path: `${APP_PREFIX_PATH}/apps/ecommerce/product-list`,\r\n          title: 'sidenav.parc_info.materiales.list',\r\n          icon: '',\r\n          breadcrumb: false,\r\n          submenu: []\r\n        },\r\n        {\r\n          key: 'parc_info-materiales-add',\r\n          path: `${APP_PREFIX_PATH}/parc_info/materiales/add`,\r\n          title: 'sidenav.parc_info.materiales.add',\r\n          icon: '',\r\n          breadcrumb: false,\r\n          submenu: []\r\n        }\r\n      ]\r\n    }, \r\n    {\r\n      key: 'parc_info-users',\r\n      path: `${APP_PREFIX_PATH}/parc_info/users`,\r\n      title: 'sidenav.parc_info.users',\r\n      icon: UsergroupAddOutlined  ,\r\n      breadcrumb: true,\r\n      submenu: [\r\n        {\r\n          key: 'parc_info-users-list',\r\n          path: `${APP_PREFIX_PATH}/apps/ecommerce/orders`,\r\n          title: 'sidenav.parc_info.users.list',\r\n          icon: '',\r\n          breadcrumb: false,\r\n          submenu: []\r\n        },\r\n        {\r\n          key: 'parc_info-users-add',\r\n          path: `${APP_PREFIX_PATH}/parc_info/users/add`,\r\n          title: 'sidenav.parc_info.users.add',\r\n          icon: '',\r\n          breadcrumb: false,\r\n          submenu: []\r\n        }\r\n      ]\r\n    },     \r\n  ]\r\n}]\r\n\r\n// const componentsNavTree = [\r\n//   {\r\n//     key: 'components',\r\n//     path: `${APP_PREFIX_PATH}/components`,\r\n//     title: 'sidenav.components',\r\n//     icon: AntDesignOutlined,\r\n//     breadcrumb: true,\r\n//     submenu: [\r\n//       {\r\n//         key: 'components-general',\r\n//         path: `${APP_PREFIX_PATH}/components/general`,\r\n//         title: 'sidenav.components.general',\r\n//         icon: InfoCircleOutlined,\r\n//         breadcrumb: true,\r\n//         submenu: [\r\n//           {\r\n//             key: 'components-general-button',\r\n//             path: `${APP_PREFIX_PATH}/components/general/button`,\r\n//             title: 'sidenav.components.general.button',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: []\r\n//           },\r\n//           {\r\n//             key: 'components-general-icon',\r\n//             path: `${APP_PREFIX_PATH}/components/general/icon`,\r\n//             title: 'sidenav.components.general.icon',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: []\r\n//           },\r\n//           {\r\n//             key: 'components-general-typography',\r\n//             path: `${APP_PREFIX_PATH}/components/general/typography`,\r\n//             title: 'sidenav.components.general.typography',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: []\r\n//           }\r\n//         ]\r\n//       },\r\n//       {\r\n//         key: 'components-layout',\r\n//         path: `${APP_PREFIX_PATH}/components/layout`,\r\n//         title: 'sidenav.components.layout',\r\n//         icon: LayoutOutlined,\r\n//         breadcrumb: true,\r\n//         submenu: [\r\n//           {\r\n//             key: 'components-layout-grid',\r\n//             path: `${APP_PREFIX_PATH}/components/layout/grid`,\r\n//             title: 'sidenav.components.layout.grid',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: []\r\n//           },\r\n//           {\r\n//             key: 'components-layout-layout',\r\n//             path: `${APP_PREFIX_PATH}/components/layout/layout`,\r\n//             title: 'sidenav.components.layout.layout',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: []\r\n//           }\r\n//         ]\r\n//       },\r\n//       {\r\n//         key: 'components-navigation',\r\n//         path: `${APP_PREFIX_PATH}/components/navigation`,\r\n//         title: 'sidenav.components.navigation',\r\n//         icon: CompassOutlined,\r\n//         breadcrumb: true,\r\n//         submenu: [\r\n//           {\r\n//             key: 'components-navigation-affix',\r\n//             path: `${APP_PREFIX_PATH}/components/navigation/affix`,\r\n//             title: 'sidenav.components.navigation.affix',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: []\r\n//           },\r\n//           {\r\n//             key: 'components-navigation-breadcrumb',\r\n//             path: `${APP_PREFIX_PATH}/components/navigation/breadcrumb`,\r\n//             title: 'sidenav.components.navigation.breadcrumb',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: []\r\n//           },\r\n//           {\r\n//             key: 'components-navigation-dropdown',\r\n//             path: `${APP_PREFIX_PATH}/components/navigation/dropdown`,\r\n//             title: 'sidenav.components.navigation.dropdown',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: []\r\n//           },\r\n//           {\r\n//             key: 'components-navigation-menu',\r\n//             path: `${APP_PREFIX_PATH}/components/navigation/menu`,\r\n//             title: 'sidenav.components.navigation.menu',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: []\r\n//           },\r\n//           {\r\n//             key: 'components-navigation-pagination',\r\n//             path: `${APP_PREFIX_PATH}/components/navigation/pagination`,\r\n//             title: 'sidenav.components.navigation.pagination',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: []\r\n//           },\r\n//           {\r\n//             key: 'components-navigation-page-header',\r\n//             path: `${APP_PREFIX_PATH}/components/navigation/page-header`,\r\n//             title: 'sidenav.components.navigation.pageHeader',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: []\r\n//           },\r\n//           {\r\n//             key: 'components-navigation-steps',\r\n//             path: `${APP_PREFIX_PATH}/components/navigation/steps`,\r\n//             title: 'sidenav.components.navigation.steps',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: []\r\n//           }\r\n//         ]\r\n//       },\r\n//       {\r\n//         key: 'components-data-entry',\r\n//         path: `${APP_PREFIX_PATH}/components/data-entry`,\r\n//         title: 'sidenav.components.dataEntry',\r\n//         icon: FileDoneOutlined,\r\n//         breadcrumb: true,\r\n//         submenu: [\r\n//           {\r\n//             key: 'components-data-entry-auto-complete',\r\n//             path: `${APP_PREFIX_PATH}/components/data-entry/auto-complete`,\r\n//             title: 'sidenav.components.dataEntry.autoComplete',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: []\r\n//           },\r\n//           {\r\n//             key: 'components-data-entry-checkbox',\r\n//             path: `${APP_PREFIX_PATH}/components/data-entry/checkbox`,\r\n//             title: 'sidenav.components.dataEntry.checkbox',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: []\r\n//           },\r\n//           {\r\n//             key: 'components-data-entry-cascader',\r\n//             path: `${APP_PREFIX_PATH}/components/data-entry/cascader`,\r\n//             title: 'sidenav.components.dataEntry.cascader',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: []\r\n//           },\r\n//           {\r\n//             key: 'components-data-entry-date-picker',\r\n//             path: `${APP_PREFIX_PATH}/components/data-entry/date-picker`,\r\n//             title: 'sidenav.components.dataEntry.datePicker',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: []\r\n//           },\r\n//           {\r\n//             key: 'components-data-entry-form',\r\n//             path: `${APP_PREFIX_PATH}/components/data-entry/form`,\r\n//             title: 'sidenav.components.dataEntry.form',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: []\r\n//           },\r\n//           {\r\n//             key: 'components-data-entry-input-number',\r\n//             path: `${APP_PREFIX_PATH}/components/data-entry/input-number`,\r\n//             title: 'sidenav.components.dataEntry.inputNumber',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: []\r\n//           },\r\n//           {\r\n//             key: 'components-data-entry-input',\r\n//             path: `${APP_PREFIX_PATH}/components/data-entry/input`,\r\n//             title: 'sidenav.components.dataEntry.input',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: []\r\n//           },\r\n//           {\r\n//             key: 'components-data-entry-mentions',\r\n//             path: `${APP_PREFIX_PATH}/components/data-entry/mentions`,\r\n//             title: 'sidenav.components.dataEntry.mentions',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: []\r\n//           },\r\n//           {\r\n//             key: 'components-data-entry-rate',\r\n//             path: `${APP_PREFIX_PATH}/components/data-entry/rate`,\r\n//             title: 'sidenav.components.dataEntry.rate',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: []\r\n//           },\r\n//           {\r\n//             key: 'components-data-entry-radio',\r\n//             path: `${APP_PREFIX_PATH}/components/data-entry/radio`,\r\n//             title: 'sidenav.components.dataEntry.radio',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: []\r\n//           },\r\n//           {\r\n//             key: 'components-data-entry-switch',\r\n//             path: `${APP_PREFIX_PATH}/components/data-entry/switch`,\r\n//             title: 'sidenav.components.dataEntry.switch',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: []\r\n//           },\r\n//           {\r\n//             key: 'components-data-entry-slider',\r\n//             path: `${APP_PREFIX_PATH}/components/data-entry/slider`,\r\n//             title: 'sidenav.components.dataEntry.slider',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: []\r\n//           },\r\n//           {\r\n//             key: 'components-data-entry-select',\r\n//             path: `${APP_PREFIX_PATH}/components/data-entry/select`,\r\n//             title: 'sidenav.components.dataEntry.select',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: []\r\n//           },\r\n//           {\r\n//             key: 'components-data-entry-tree-select',\r\n//             path: `${APP_PREFIX_PATH}/components/data-entry/tree-select`,\r\n//             title: 'sidenav.components.dataEntry.treeSelect',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: []\r\n//           },\r\n//           {\r\n//             key: 'components-data-entry-transfer',\r\n//             path: `${APP_PREFIX_PATH}/components/data-entry/transfer`,\r\n//             title: 'sidenav.components.dataEntry.transfer',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: []\r\n//           },\r\n//           {\r\n//             key: 'components-data-entry-time-picker',\r\n//             path: `${APP_PREFIX_PATH}/components/data-entry/time-picker`,\r\n//             title: 'sidenav.components.dataEntry.timePicker',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: []\r\n//           },\r\n//           {\r\n//             key: 'components-data-entry-upload',\r\n//             path: `${APP_PREFIX_PATH}/components/data-entry/upload`,\r\n//             title: 'sidenav.components.dataEntry.upload',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: []\r\n//           },\r\n//         ]\r\n//       },\r\n//       {\r\n//         key: 'components-data-display',\r\n//         path: `${APP_PREFIX_PATH}/components/data-display`,\r\n//         title: 'sidenav.components.dataDisplay',\r\n//         icon: DesktopOutlined,\r\n//         breadcrumb: true,\r\n//         submenu: [\r\n//           {\r\n//             key: 'components-data-display-avatar',\r\n//             path: `${APP_PREFIX_PATH}/components/data-display/avatar`,\r\n//             title: 'sidenav.components.dataDisplay.avatar',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: []\r\n//           },\r\n//           {\r\n//             key: 'components-data-display-badge',\r\n//             path: `${APP_PREFIX_PATH}/components/data-display/badge`,\r\n//             title: 'sidenav.components.dataDisplay.badge',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: []\r\n//           },\r\n//           {\r\n//             key: 'components-data-display-comment',\r\n//             path: `${APP_PREFIX_PATH}/components/data-display/comment`,\r\n//             title: 'sidenav.components.dataDisplay.comment',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: []\r\n//           },\r\n//           {\r\n//             key: 'components-data-display-collapse',\r\n//             path: `${APP_PREFIX_PATH}/components/data-display/collapse`,\r\n//             title: 'sidenav.components.dataDisplay.collapse',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: []\r\n//           },\r\n//           {\r\n//             key: 'components-data-display-carousel',\r\n//             path: `${APP_PREFIX_PATH}/components/data-display/carousel`,\r\n//             title: 'sidenav.components.dataDisplay.carousel',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: []\r\n//           },\r\n//           {\r\n//             key: 'components-data-display-card',\r\n//             path: `${APP_PREFIX_PATH}/components/data-display/card`,\r\n//             title: 'sidenav.components.dataDisplay.card',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: []\r\n//           },\r\n//           {\r\n//             key: 'components-data-display-calendar',\r\n//             path: `${APP_PREFIX_PATH}/components/data-display/calendar`,\r\n//             title: 'sidenav.components.dataDisplay.calendar',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: []\r\n//           },\r\n//           {\r\n//             key: 'components-data-display-descriptions',\r\n//             path: `${APP_PREFIX_PATH}/components/data-display/descriptions`,\r\n//             title: 'sidenav.components.dataDisplay.descriptions',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: []\r\n//           },\r\n//           {\r\n//             key: 'components-data-display-empty',\r\n//             path: `${APP_PREFIX_PATH}/components/data-display/empty`,\r\n//             title: 'sidenav.components.dataDisplay.empty',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: []\r\n//           },\r\n//           {\r\n//             key: 'components-data-display-list',\r\n//             path: `${APP_PREFIX_PATH}/components/data-display/list`,\r\n//             title: 'sidenav.components.dataDisplay.list',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: []\r\n//           },\r\n//           {\r\n//             key: 'components-data-display-popover',\r\n//             path: `${APP_PREFIX_PATH}/components/data-display/popover`,\r\n//             title: 'sidenav.components.dataDisplay.popover',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: []\r\n//           },\r\n//           {\r\n//             key: 'components-data-display-statistic',\r\n//             path: `${APP_PREFIX_PATH}/components/data-display/statistic`,\r\n//             title: 'sidenav.components.dataDisplay.statistic',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: []\r\n//           },\r\n//           {\r\n//             key: 'components-data-display-tree',\r\n//             path: `${APP_PREFIX_PATH}/components/data-display/tree`,\r\n//             title: 'sidenav.components.dataDisplay.tree',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: []\r\n//           },\r\n//           {\r\n//             key: 'components-data-display-tooltip',\r\n//             path: `${APP_PREFIX_PATH}/components/data-display/tooltip`,\r\n//             title: 'sidenav.components.dataDisplay.tooltip',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: []\r\n//           },\r\n//           {\r\n//             key: 'components-data-display-timeline',\r\n//             path: `${APP_PREFIX_PATH}/components/data-display/timeline`,\r\n//             title: 'sidenav.components.dataDisplay.timeline',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: []\r\n//           },\r\n//           {\r\n//             key: 'components-data-display-tag',\r\n//             path: `${APP_PREFIX_PATH}/components/data-display/tag`,\r\n//             title: 'sidenav.components.dataDisplay.tag',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: []\r\n//           },\r\n//           {\r\n//             key: 'components-data-display-tabs',\r\n//             path: `${APP_PREFIX_PATH}/components/data-display/tabs`,\r\n//             title: 'sidenav.components.dataDisplay.tabs',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: []\r\n//           },\r\n//           {\r\n//             key: 'components-data-display-table',\r\n//             path: `${APP_PREFIX_PATH}/components/data-display/table`,\r\n//             title: 'sidenav.components.dataDisplay.table',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: []\r\n//           },\r\n//         ]\r\n//       },\r\n//       {\r\n//         key: 'components-feedback',\r\n//         path: `${APP_PREFIX_PATH}/components/feedback`,\r\n//         title: 'sidenav.components.feedback',\r\n//         icon: CommentOutlined,\r\n//         breadcrumb: true,\r\n//         submenu: [\r\n//           {\r\n//             key: 'components-feedback-alert',\r\n//             path: `${APP_PREFIX_PATH}/components/feedback/alert`,\r\n//             title: 'sidenav.components.feedback.alert',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: []\r\n//           },\r\n//           {\r\n//             key: 'components-feedback-drawer',\r\n//             path: `${APP_PREFIX_PATH}/components/feedback/drawer`,\r\n//             title: 'sidenav.components.feedback.drawer',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: []\r\n//           },\r\n//           {\r\n//             key: 'components-feedback-modal',\r\n//             path: `${APP_PREFIX_PATH}/components/feedback/modal`,\r\n//             title: 'sidenav.components.feedback.modal',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: []\r\n//           },\r\n//           {\r\n//             key: 'components-feedback-message',\r\n//             path: `${APP_PREFIX_PATH}/components/feedback/message`,\r\n//             title: 'sidenav.components.feedback.message',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: []\r\n//           },\r\n//           {\r\n//             key: 'components-feedback-notification',\r\n//             path: `${APP_PREFIX_PATH}/components/feedback/notification`,\r\n//             title: 'sidenav.components.feedback.notification',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: []\r\n//           },\r\n//           {\r\n//             key: 'components-feedback-progress',\r\n//             path: `${APP_PREFIX_PATH}/components/feedback/progress`,\r\n//             title: 'sidenav.components.feedback.progress',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: []\r\n//           },\r\n//           {\r\n//             key: 'components-feedback-popconfirm',\r\n//             path: `${APP_PREFIX_PATH}/components/feedback/popconfirm`,\r\n//             title: 'sidenav.components.feedback.popconfirm',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: []\r\n//           },\r\n//           {\r\n//             key: 'components-feedback-result',\r\n//             path: `${APP_PREFIX_PATH}/components/feedback/result`,\r\n//             title: 'sidenav.components.feedback.result',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: []\r\n//           },\r\n//           {\r\n//             key: 'components-feedback-spin',\r\n//             path: `${APP_PREFIX_PATH}/components/feedback/spin`,\r\n//             title: 'sidenav.components.feedback.spin',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: []\r\n//           },\r\n//           {\r\n//             key: 'components-feedback-skeleton',\r\n//             path: `${APP_PREFIX_PATH}/components/feedback/skeleton`,\r\n//             title: 'sidenav.components.feedback.skeleton',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: []\r\n//           }\r\n//         ]\r\n//       },\r\n//       {\r\n//         key: 'components-other',\r\n//         path: `${APP_PREFIX_PATH}/components/other`,\r\n//         title: 'sidenav.components.other',\r\n//         icon: RobotOutlined,\r\n//         breadcrumb: true,\r\n//         submenu: [\r\n//           {\r\n//             key: 'components-other-anchor',\r\n//             path: `${APP_PREFIX_PATH}/components/other/anchor`,\r\n//             title: 'sidenav.components.other.anchor',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: []\r\n//           },\r\n//           {\r\n//             key: 'components-other-backtop',\r\n//             path: `${APP_PREFIX_PATH}/components/other/backtop`,\r\n//             title: 'sidenav.components.other.backtop',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: []\r\n//           },\r\n//           {\r\n//             key: 'components-other-config-provider',\r\n//             path: `${APP_PREFIX_PATH}/components/other/config-provider`,\r\n//             title: 'sidenav.components.other.configProvider',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: []\r\n//           },\r\n//           {\r\n//             key: 'components-other-divider',\r\n//             path: `${APP_PREFIX_PATH}/components/other/divider`,\r\n//             title: 'sidenav.components.other.divider',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: []\r\n//           }\r\n//         ]\r\n//       },\r\n//       {\r\n//         key: 'components-charts',\r\n//         path: `${APP_PREFIX_PATH}/components/charts`,\r\n//         title: 'sidenav.charts',\r\n//         icon: PieChartOutlined,\r\n//         breadcrumb: true,\r\n//         submenu: [\r\n//           {\r\n//             key: 'components-charts-apex',\r\n//             path: `${APP_PREFIX_PATH}/components/charts/apex-charts`,\r\n//             title: 'sidenav.charts.apex',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: []\r\n//           },\r\n//           {\r\n//             key: 'components-charts-chartjs',\r\n//             path: `${APP_PREFIX_PATH}/components/charts/chartjs`,\r\n//             title: 'sidenav.charts.chartjs',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: []\r\n//           }\r\n//         ]\r\n//       },\r\n//       {\r\n//         key: 'components-maps',\r\n//         path: `${APP_PREFIX_PATH}/components/maps`,\r\n//         title: 'sidenav.maps',\r\n//         icon: EnvironmentOutlined,\r\n//         breadcrumb: true,\r\n//         submenu: [\r\n//           {\r\n//             key: 'components-maps-google',\r\n//             path: `${APP_PREFIX_PATH}/components/maps/google-map`,\r\n//             title: 'sidenav.maps.google',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: []\r\n//           },\r\n//           {\r\n//             key: 'components-maps-simple',\r\n//             path: `${APP_PREFIX_PATH}/components/maps/simple-map`,\r\n//             title: 'sidenav.maps.simple',\r\n//             icon: '',\r\n//             breadcrumb: true,\r\n//             submenu: []\r\n//           }\r\n//         ]\r\n//       }\r\n//     ]\r\n//   }\r\n// ]\r\n\r\n// const docsNavTree = [{\r\n//   key: 'docs',\r\n//   path: `${APP_PREFIX_PATH}/docs`,\r\n//   title: 'sidenav.docs',\r\n//   icon: BookOutlined,\r\n//   breadcrumb: false,\r\n//   submenu: [\r\n//     {\r\n//       key: 'docs-documentation',\r\n//       path: `${APP_PREFIX_PATH}/docs/documentation`,\r\n//       title: 'sidenav.docs.documentation',\r\n//       icon: FileUnknownOutlined,\r\n//       breadcrumb: false,\r\n//       submenu: []\r\n//     },\r\n//     {\r\n//       key: 'docs-changelog',\r\n//       path: `${APP_PREFIX_PATH}/docs/documentation/changelog`,\r\n//       title: 'sidenav.docs.changelog',\r\n//       icon: ProfileOutlined,\r\n//       breadcrumb: false,\r\n//       submenu: []\r\n//     }\r\n//   ]\r\n// }]\r\n\r\nconst navigationConfig = [\r\n  ...dashBoardNavTree,\r\n  ...parc_info_NavTree,\r\n // ...componentsNavTree,\r\n // ...extraNavTree,\r\n // ...docsNavTree\r\n]\r\n\r\nexport default navigationConfig;\r\n","import {\r\n  TOGGLE_COLLAPSED_NAV,\r\n  SIDE_NAV_STYLE_CHANGE,\r\n  CHANGE_LOCALE,\r\n  NAV_TYPE_CHANGE,\r\n  TOP_NAV_COLOR_CHANGE,\r\n  HEADER_NAV_COLOR_CHANGE,\r\n  TOGGLE_MOBILE_NAV,\r\n  SWITCH_THEME,\r\n  DIRECTION_CHANGE\r\n} from '../constants/Theme';\r\n\r\nexport function toggleCollapsedNav(navCollapsed) {\r\n  return {\r\n    type: TOGGLE_COLLAPSED_NAV,\r\n    navCollapsed\r\n  };\r\n}\r\n\r\nexport function onNavStyleChange(sideNavTheme) {\r\n  return {\r\n    type: SIDE_NAV_STYLE_CHANGE,\r\n    sideNavTheme\r\n  };\r\n}\r\n\r\nexport function onLocaleChange(locale) {\r\n  return {\r\n    type: CHANGE_LOCALE,\r\n    locale\r\n  };\r\n}\r\n\r\nexport function onNavTypeChange(navType) {\r\n  return {\r\n    type: NAV_TYPE_CHANGE,\r\n    navType\r\n  };\r\n}\r\n\r\nexport function onTopNavColorChange(topNavColor) {\r\n  return {\r\n    type: TOP_NAV_COLOR_CHANGE,\r\n    topNavColor\r\n  };\r\n}\r\n\r\nexport function onHeaderNavColorChange(headerNavColor) {\r\n  return {\r\n    type: HEADER_NAV_COLOR_CHANGE,\r\n    headerNavColor\r\n  };\r\n}\r\n\r\nexport function onMobileNavToggle(mobileNav) {\r\n  return {\r\n    type: TOGGLE_MOBILE_NAV,\r\n    mobileNav\r\n  };\r\n}\r\n\r\nexport function onSwitchTheme(currentTheme) {\r\n  return {\r\n    type: SWITCH_THEME,\r\n    currentTheme\r\n  };\r\n}\r\n\r\nexport function onDirectionChange(direction) {\r\n  return {\r\n    type: DIRECTION_CHANGE,\r\n    direction\r\n  };\r\n}","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Menu, Grid } from \"antd\";\r\nimport IntlMessage from \"../util-components/IntlMessage\";\r\nimport Icon from \"../util-components/Icon\";\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport { connect } from \"react-redux\";\r\nimport { SIDE_NAV_LIGHT, NAV_TYPE_SIDE } from \"constants/ThemeConstant\";\r\nimport utils from 'utils'\r\nimport { onMobileNavToggle } from \"redux/actions/Theme\";\r\n\r\nconst { SubMenu } = Menu;\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst setLocale = (isLocaleOn, localeKey) =>\r\n  isLocaleOn ? <IntlMessage id={localeKey} /> : localeKey.toString();\r\n\r\nconst setDefaultOpen = (key) => {\r\n  let keyList = [];\r\n  let keyString = \"\";\r\n  if (key) {\r\n    const arr = key.split(\"-\");\r\n    for (let index = 0; index < arr.length; index++) {\r\n      const elm = arr[index];\r\n      index === 0 ? (keyString = elm) : (keyString = `${keyString}-${elm}`);\r\n      keyList.push(keyString);\r\n    }\r\n  }\r\n  return keyList;\r\n};\r\n\r\nconst SideNavContent = (props) => {\r\n\tconst { sideNavTheme, routeInfo, hideGroupTitle, localization, onMobileNavToggle } = props;\r\n\tconst isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg')\r\n\tconst closeMobileNav = () => {\r\n\t\tif (isMobile) {\r\n\t\t\tonMobileNavToggle(false)\r\n\t\t}\r\n\t}\r\n  return (\r\n    <Menu\r\n      theme={sideNavTheme === SIDE_NAV_LIGHT ? \"light\" : \"dark\"}\r\n      mode=\"inline\"\r\n      style={{ height: \"100%\", borderRight: 0 }}\r\n      defaultSelectedKeys={[routeInfo?.key]}\r\n      defaultOpenKeys={setDefaultOpen(routeInfo?.key)}\r\n      className={hideGroupTitle ? \"hide-group-title\" : \"\"}\r\n    >\r\n      {navigationConfig.map((menu) =>\r\n        menu.submenu.length > 0 ? (\r\n          <Menu.ItemGroup\r\n            key={menu.key}\r\n            title={setLocale(localization, menu.title)}\r\n          >\r\n            {menu.submenu.map((subMenuFirst) =>\r\n              subMenuFirst.submenu.length > 0 ? (\r\n                <SubMenu\r\n                  icon={\r\n                    subMenuFirst.icon ? (\r\n                      <Icon type={subMenuFirst?.icon} />\r\n                    ) : null\r\n                  }\r\n                  key={subMenuFirst.key}\r\n                  title={setLocale(localization, subMenuFirst.title)}\r\n                >\r\n                  {subMenuFirst.submenu.map((subMenuSecond) => (\r\n                    <Menu.Item key={subMenuSecond.key}>\r\n                      {subMenuSecond.icon ? (\r\n                        <Icon type={subMenuSecond?.icon} />\r\n                      ) : null}\r\n                      <span>\r\n                        {setLocale(localization, subMenuSecond.title)}\r\n                      </span>\r\n                      <Link onClick={() => closeMobileNav()} to={subMenuSecond.path} />\r\n                    </Menu.Item>\r\n                  ))}\r\n                </SubMenu>\r\n              ) : (\r\n                <Menu.Item key={subMenuFirst.key}>\r\n                  {subMenuFirst.icon ? <Icon type={subMenuFirst.icon} /> : null}\r\n                  <span>{setLocale(localization, subMenuFirst.title)}</span>\r\n                  <Link onClick={() => closeMobileNav()} to={subMenuFirst.path} />\r\n                </Menu.Item>\r\n              )\r\n            )}\r\n          </Menu.ItemGroup>\r\n        ) : (\r\n          <Menu.Item key={menu.key}>\r\n            {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n            <span>{setLocale(localization, menu?.title)}</span>\r\n            {menu.path ? <Link onClick={() => closeMobileNav()} to={menu.path} /> : null}\r\n          </Menu.Item>\r\n        )\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nconst TopNavContent = (props) => {\r\n  const { topNavColor, localization } = props;\r\n  return (\r\n    <Menu mode=\"horizontal\" style={{ backgroundColor: topNavColor }}>\r\n      {navigationConfig.map((menu) =>\r\n        menu.submenu.length > 0 ? (\r\n          <SubMenu\r\n            key={menu.key}\r\n            popupClassName=\"top-nav-menu\"\r\n            title={\r\n              <span>\r\n                {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n                <span>{setLocale(localization, menu.title)}</span>\r\n              </span>\r\n            }\r\n          >\r\n            {menu.submenu.map((subMenuFirst) =>\r\n              subMenuFirst.submenu.length > 0 ? (\r\n                <SubMenu\r\n                  key={subMenuFirst.key}\r\n                  icon={\r\n                    subMenuFirst.icon ? (\r\n                      <Icon type={subMenuFirst?.icon} />\r\n                    ) : null\r\n                  }\r\n                  title={setLocale(localization, subMenuFirst.title)}\r\n                >\r\n                  {subMenuFirst.submenu.map((subMenuSecond) => (\r\n                    <Menu.Item key={subMenuSecond.key}>\r\n                      <span>\r\n                        {setLocale(localization, subMenuSecond.title)}\r\n                      </span>\r\n                      <Link to={subMenuSecond.path} />\r\n                    </Menu.Item>\r\n                  ))}\r\n                </SubMenu>\r\n              ) : (\r\n                <Menu.Item key={subMenuFirst.key}>\r\n                  {subMenuFirst.icon ? (\r\n                    <Icon type={subMenuFirst?.icon} />\r\n                  ) : null}\r\n                  <span>{setLocale(localization, subMenuFirst.title)}</span>\r\n                  <Link to={subMenuFirst.path} />\r\n                </Menu.Item>\r\n              )\r\n            )}\r\n          </SubMenu>\r\n        ) : (\r\n          <Menu.Item key={menu.key}>\r\n            {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n            <span>{setLocale(localization, menu?.title)}</span>\r\n            {menu.path ? <Link to={menu.path} /> : null}\r\n          </Menu.Item>\r\n        )\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nconst MenuContent = (props) => {\r\n  return props.type === NAV_TYPE_SIDE ? (\r\n    <SideNavContent {...props} />\r\n  ) : (\r\n    <TopNavContent {...props} />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { sideNavTheme, topNavColor } = theme;\r\n  return { sideNavTheme, topNavColor };\r\n};\r\n\r\nexport default connect(mapStateToProps, { onMobileNavToggle })(MenuContent);\r\n","import React from \"react\";\r\nimport { Layout } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport { SIDE_NAV_WIDTH, SIDE_NAV_DARK, NAV_TYPE_SIDE } from 'constants/ThemeConstant';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport MenuContent from './MenuContent'\r\n\r\nconst { Sider } = Layout;\r\n\r\nexport const SideNav = ({navCollapsed, sideNavTheme, routeInfo, hideGroupTitle, localization = true }) => {\r\n  const props = { sideNavTheme, routeInfo , hideGroupTitle, localization}\r\n  return (\r\n    <Sider \r\n      className={`side-nav ${sideNavTheme === SIDE_NAV_DARK? 'side-nav-dark' : ''}`} \r\n      width={SIDE_NAV_WIDTH} \r\n      collapsed={navCollapsed}\r\n    >\r\n      <Scrollbars autoHide>\r\n        <MenuContent \r\n          type={NAV_TYPE_SIDE} \r\n          {...props}\r\n        />\r\n      </Scrollbars>\r\n    </Sider>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, sideNavTheme } =  theme;\r\n  return { navCollapsed, sideNavTheme }\r\n};\r\n\r\nexport default connect(mapStateToProps)(SideNav);\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { NAV_TYPE_TOP } from 'constants/ThemeConstant';\r\nimport utils from 'utils'\r\nimport MenuContent from './MenuContent'\r\n\r\nexport const TopNav = ({topNavColor, localization = true}) => {\r\n\tconst props = { topNavColor, localization }\r\n\treturn (\r\n\t\t<div className={`top-nav ${utils.getColorContrast(topNavColor)}`} style={{backgroundColor: topNavColor}}>\r\n\t\t\t<div className=\"top-nav-wrapper\">\r\n\t\t\t\t<MenuContent\r\n\t\t\t\t\ttype={NAV_TYPE_TOP} \r\n\t\t\t\t\t{...props}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { topNavColor } =  theme;\r\n  return { topNavColor }\r\n};\r\n\r\nexport default connect(mapStateToProps)(TopNav);\r\n","import React from 'react'\r\nimport { SIDE_NAV_WIDTH, SIDE_NAV_COLLAPSED_WIDTH, NAV_TYPE_TOP } from 'constants/ThemeConstant';\r\nimport { APP_NAME } from 'configs/AppConfig';\r\nimport { connect } from \"react-redux\";\r\nimport utils from 'utils';\r\nimport { Grid } from 'antd';\r\n\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst getLogoWidthGutter = (props, isMobile) => {\r\n  const { navCollapsed, navType } = props;\r\n  const isNavTop = navType === NAV_TYPE_TOP ? true : false\r\n  if(isMobile && !props.mobileLogo) {\r\n    return 0\r\n  }\r\n  if(isNavTop) {\r\n    return 'auto'\r\n  }\r\n  if(navCollapsed) {\r\n    return `${SIDE_NAV_COLLAPSED_WIDTH}px`\r\n  } else {\r\n    return `${SIDE_NAV_WIDTH}px`\r\n  }\r\n}\r\n\r\nconst getLogo = (props) => {\r\n  const { navCollapsed, logoType } = props;\r\n  if(logoType === 'light') {\r\n    if(navCollapsed) {\r\n      return '/img/logo_mini.jpg'\r\n    }\r\n    return '/img/logo_matu2.png'\r\n  }\r\n\r\n  if (navCollapsed) {\r\n    return '/img/logo_mini.jpg'\r\n  }\r\n  return '/img/logo_matu2.png'\r\n}\r\n\r\nconst getLogoDisplay = (isMobile, mobileLogo) => {\r\n  if(isMobile && !mobileLogo) {\r\n    return 'd-none'\r\n  } else {\r\n    return 'logo'\r\n  }\r\n}\r\n\r\nexport const Logo = (props) => {\r\n  const isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg')\r\n  return (\r\n    <div\r\n      className={getLogoDisplay(isMobile, props.mobileLogo)} \r\n      style={{width: `${getLogoWidthGutter(props, isMobile)}`}}>\r\n      <img src={getLogo(props)} alt={`${APP_NAME} logo`} \r\n       style={{width: getLogo(props) === '/img/logo_mini.jpg' ? 50 : 150  }}\r\n      />\r\n     \r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, navType } =  theme;\r\n  return { navCollapsed, navType }\r\n};\r\n\r\nexport default connect(mapStateToProps)(Logo);\r\n","import React from \"react\";\r\nimport { Drawer } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport { NAV_TYPE_SIDE } from \"constants/ThemeConstant\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport MenuContent from \"./MenuContent\";\r\nimport { onMobileNavToggle } from \"redux/actions/Theme\";\r\nimport Logo from \"./Logo\";\r\nimport Flex from \"components/shared-components/Flex\";\r\nimport { ArrowLeftOutlined } from \"@ant-design/icons\";\r\n\r\nexport const MobileNav = ({\r\n  sideNavTheme,\r\n  mobileNav,\r\n  onMobileNavToggle,\r\n  routeInfo,\r\n  hideGroupTitle,\r\n  localization = true,\r\n}) => {\r\n  const props = { sideNavTheme, routeInfo, hideGroupTitle, localization };\r\n\r\n  const onClose = () => {\r\n    onMobileNavToggle(false);\r\n  };\r\n\r\n  return (\r\n    <Drawer\r\n      placement=\"left\"\r\n      closable={false}\r\n      onClose={onClose}\r\n      visible={mobileNav}\r\n      bodyStyle={{ padding: 5 }}\r\n    >\r\n      <Flex flexDirection=\"column\" className=\"h-100\">\r\n        <Flex justifyContent=\"between\" alignItems=\"center\">\r\n          <Logo mobileLogo={true} />\r\n          <div className=\"nav-close\" onClick={() => onClose()}>\r\n            <ArrowLeftOutlined />\r\n          </div>\r\n        </Flex>\r\n        <div className=\"mobile-nav-menu\">\r\n          <Scrollbars autoHide>\r\n            <MenuContent type={NAV_TYPE_SIDE} {...props} />\r\n          </Scrollbars>\r\n        </div>\r\n      </Flex>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, sideNavTheme, mobileNav } = theme;\r\n  return { navCollapsed, sideNavTheme, mobileNav };\r\n};\r\n\r\nexport default connect(mapStateToProps, { onMobileNavToggle })(MobileNav);\r\n","import React, { useState } from 'react';\r\nimport { Menu, Dropdown, Badge, Avatar, List, Button } from 'antd';\r\nimport { \r\n  MailOutlined, \r\n  BellOutlined, \r\n  WarningOutlined,\r\n  CheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport notificationData from \"assets/data/notification.data.json\";\r\nimport Flex from 'components/shared-components/Flex'\r\n\r\nconst getIcon =  icon => {\r\n  switch (icon) {\r\n    case 'mail':\r\n      return <MailOutlined />;\r\n    case 'alert':\r\n      return <WarningOutlined />;\r\n    case 'check':\r\n      return <CheckCircleOutlined />\r\n    default:\r\n      return <MailOutlined />;\r\n  }\r\n}\r\n\r\nconst getNotificationBody = list => {\r\n  return list.length > 0 ?\r\n  <List\r\n    size=\"small\"\r\n    itemLayout=\"horizontal\"\r\n    dataSource={list}\r\n    renderItem={item => (\r\n      <List.Item className=\"list-clickable\">\r\n        <Flex alignItems=\"center\">\r\n          <div className=\"pr-3\">\r\n            {item.img? <Avatar src={`/img/avatars/${item.img}`} /> : <Avatar className={`ant-avatar-${item.type}`} icon={getIcon(item.icon)} />}\r\n          </div>\r\n          <div className=\"mr-3\">\r\n            <span className=\"font-weight-bold text-dark\">{item.name} </span>\r\n            <span className=\"text-gray-light\">{item.desc}</span>\r\n          </div>\r\n          <small className=\"ml-auto\">{item.time}</small>\r\n        </Flex>\r\n      </List.Item>\r\n    )}\r\n  />\r\n  :\r\n  <div className=\"empty-notification\">\r\n    <img src=\"https://gw.alipayobjects.com/zos/rmsportal/sAuJeJzSKbUmHfBQRzmZ.svg\" alt=\"empty\" />\r\n    <p className=\"mt-3\">You have viewed all notifications</p>\r\n  </div>;\r\n}\r\n\r\nexport const NavNotification = () => {\r\n\r\n  const [visible, setVisible] = useState(false);\r\n  const [data, setData] = useState(notificationData)\r\n\r\n  const handleVisibleChange = (flag) => {\r\n    setVisible(flag);\r\n  }\r\n\r\n  const notificationList = (\r\n    <div className=\"nav-dropdown nav-notification\">\r\n      <div className=\"nav-notification-header d-flex justify-content-between align-items-center\">\r\n        <h4 className=\"mb-0\">Notification</h4>\r\n        <Button className=\"text-primary\" type=\"text\" onClick={() => setData([])} size=\"small\">Clear </Button>\r\n      </div>\r\n      <div className=\"nav-notification-body\">\r\n        {getNotificationBody(data)}\r\n      </div>\r\n      {\r\n        data.length > 0 ? \r\n        <div className=\"nav-notification-footer\">\r\n          <a className=\"d-block\" href=\"#/\">View all</a>\r\n        </div>\r\n        :\r\n        null\r\n      }\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <Dropdown \r\n      placement=\"bottomRight\"\r\n      overlay={notificationList}\r\n      onVisibleChange={handleVisibleChange}\r\n      visible={visible}\r\n      trigger={['click']}\r\n    >\r\n      <Menu mode=\"horizontal\">\r\n        <Menu.Item key=\"notification\">\r\n          <Badge count={data.length}>\r\n            <BellOutlined className=\"nav-icon mx-auto\" type=\"bell\" />\r\n          </Badge>\r\n        </Menu.Item>\r\n      </Menu>\r\n    </Dropdown>\r\n  )\r\n}\r\n\r\n\r\nexport default NavNotification;\r\n","import React from \"react\";\r\nimport { Menu, Dropdown, Avatar } from \"antd\";\r\nimport { connect } from 'react-redux'\r\nimport { \r\n  EditOutlined, \r\n  SettingOutlined, \r\n  ShopOutlined, \r\n  QuestionCircleOutlined, \r\n  LogoutOutlined \r\n} from '@ant-design/icons';\r\nimport Icon from 'components/util-components/Icon';\r\nimport { signOut } from 'redux/actions/Auth';\r\nimport {useSelector} from 'react-redux'\r\n\r\n\r\nconst menuItem = [\r\n\t{\r\n\t\ttitle: \"Modifier le Profile\",\r\n\t\ticon: EditOutlined ,\r\n\t\tpath: \"/\"\r\n    },\r\n    \r\n  //   {\r\n\t// \ttitle: \"Account Setting\",\r\n\t// \ticon: SettingOutlined,\r\n\t// \tpath: \"/\"\r\n  //   },\r\n  //   {\r\n\t// \ttitle: \"Billing\",\r\n\t// \ticon: ShopOutlined ,\r\n\t// \tpath: \"/\"\r\n\t// },\r\n  //   {\r\n\t// \ttitle: \"Help Center\",\r\n\t// \ticon: QuestionCircleOutlined,\r\n\t// \tpath: \"/\"\r\n\t// }\r\n]\r\n\r\nexport const NavProfile = ({signOut}) => {\r\n  const username__ = useSelector (state => state.auth)\r\n  const profileImg = \"/img/avatars/user_matu.png\";\r\n  const profileMenu = (\r\n    <div className=\"nav-profile nav-dropdown\" style={{MARGINTOP: -4}}>\r\n      <div className=\"nav-profile-header\" >\r\n        <div className=\"d-flex\">\r\n          <Avatar size={25} src={profileImg} />\r\n          <div className=\"pl-3\">\r\n            <h4 className=\"mb-0\">{username__.username}</h4>\r\n            <span className=\"text-muted\">Utilisateur Matu</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"nav-profile-body\">\r\n        <Menu>\r\n          {menuItem.map((el, i) => {\r\n            return (\r\n              <Menu.Item key={i}>\r\n                <a href={el.path}>\r\n                  <Icon className=\"mr-3\" type={el.icon} />\r\n                  <span className=\"font-weight-normal\">{el.title}</span>\r\n                </a>\r\n              </Menu.Item>\r\n            );\r\n          })}\r\n          <Menu.Item key={menuItem.length + 1} onClick={e => signOut()}>\r\n            <span>\r\n              <LogoutOutlined className=\"mr-3\"/>\r\n              <span className=\"font-weight-normal\">se déconnecter</span>\r\n            </span>\r\n          </Menu.Item>\r\n        </Menu>\r\n      </div>\r\n    </div>\r\n  );\r\n  return (\r\n    <Dropdown placement=\"bottomRight\" overlay={profileMenu} trigger={[\"click\"]}>\r\n      <Menu className=\"d-flex align-item-center\" mode=\"horizontal\">\r\n        <Menu.Item key=\"profile\">\r\n          <Avatar src={profileImg} size={25}  />\r\n        </Menu.Item>\r\n      </Menu>\r\n    </Dropdown>\r\n  );\r\n}\r\n\r\nexport default connect(null, {signOut})(NavProfile)\r\n","import React from \"react\";\r\nimport { CheckOutlined, GlobalOutlined, DownOutlined  } from '@ant-design/icons';\r\nimport { Menu, Dropdown } from \"antd\";\r\nimport lang from \"assets/data/language.data.json\";\r\nimport { connect } from \"react-redux\";\r\nimport { onLocaleChange } from 'redux/actions/Theme'\r\n\r\nfunction getLanguageDetail (locale) {\r\n\tconst data = lang.filter(elm => (elm.langId === locale))\r\n\treturn data[0]\r\n}\r\n\r\nconst SelectedLanguage = ({ locale }) => {\r\n\tconst language = getLanguageDetail(locale)\r\n\tconst {langName, icon} = language\r\n\treturn (\r\n\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t<img style={{maxWidth: '20px'}} src={`/img/flags/${icon}.png`} alt={langName}/>\r\n\t\t\t<span className=\"font-weight-semibold ml-2\">{langName} <DownOutlined className=\"font-size-xs\"/></span>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport const NavLanguage = ({ locale, configDisplay, onLocaleChange }) => {\r\n\tconst languageOption = (\r\n\t\t<Menu>\r\n\t\t\t{\r\n\t\t\t\tlang.map((elm, i) => {return (\r\n\t\t\t\t\t<Menu.Item \r\n\t\t\t\t\t\tkey={elm.langName} \r\n\t\t\t\t\t\tclassName={locale === elm.langId? 'ant-dropdown-menu-item-active': ''} \r\n\t\t\t\t\t\tonClick={() => onLocaleChange(elm.langId)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<span className=\"d-flex justify-content-between align-items-center\">\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<img style={{maxWidth: '20px'}} src={`/img/flags/${elm.icon}.png`} alt={elm.langName}/>\r\n\t\t\t\t\t\t\t\t<span className=\"font-weight-normal ml-2\">{elm.langName}</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{locale === elm.langId? <CheckOutlined className=\"text-success\" /> : null}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t)})\r\n\t\t\t}\r\n\t\t</Menu>\r\n\t)\r\n\treturn (\r\n\t\t<Dropdown placement=\"bottomRight\" overlay={languageOption} trigger={[\"click\"]}>\r\n\t\t\t{\r\n\t\t\t\tconfigDisplay ?\r\n\t\t\t\t(\r\n\t\t\t\t\t<a href=\"#/\" className=\"text-gray\" onClick={e => e.preventDefault()}>\r\n\t\t\t\t\t\t<SelectedLanguage locale={locale}/>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t)\r\n\t\t\t\t:\r\n\t\t\t\t(\r\n\t\t\t\t\t<Menu mode=\"horizontal\">\r\n\t\t\t\t\t\t<Menu.Item key=\"language\">\r\n\t\t\t\t\t\t\t<a href=\"#/\" onClick={e => e.preventDefault()}>\r\n\t\t\t\t\t\t\t\t<GlobalOutlined className=\"nav-icon mr-0\" />\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t</Menu>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t</Dropdown>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { locale } =  theme;\r\n  return { locale }\r\n};\r\n\r\nexport default connect(mapStateToProps, {onLocaleChange})(NavLanguage);\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Radio, Switch, Button, message } from 'antd';\r\nimport { \r\n\ttoggleCollapsedNav, \r\n\tonNavTypeChange,\r\n\tonNavStyleChange,\r\n\tonTopNavColorChange,\r\n\tonHeaderNavColorChange,\r\n\tonSwitchTheme,\r\n\tonDirectionChange\r\n} from 'redux/actions/Theme';\r\nimport { CopyOutlined } from '@ant-design/icons';\r\nimport ColorPicker from 'components/shared-components/ColorPicker';\r\nimport CopyToClipboard from 'react-copy-to-clipboard';\r\nimport NavLanguage from './NavLanguage';\r\nimport { \r\n\tSIDE_NAV_LIGHT,\r\n\tNAV_TYPE_SIDE,\r\n\tNAV_TYPE_TOP,\r\n\tSIDE_NAV_DARK,\r\n\tDIR_RTL,\r\n\tDIR_LTR\r\n} from 'constants/ThemeConstant';\r\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\r\nimport utils from 'utils/index';\r\n\r\nconst colorOptions = [\r\n\t'#3e82f7',\r\n\t'#24a772',\r\n\t'#de4436',\r\n\t'#924aca',\r\n\t'#193550'\r\n]\r\n\r\nconst ListOption = ({name, selector, disabled, vertical}) => (\r\n\t<div className={`my-4 ${vertical? '' : 'd-flex align-items-center justify-content-between'}`}>\r\n\t\t<div className={`${disabled ? 'opacity-0-3' : ''} ${vertical? 'mb-3' : ''}`}>{name}</div>\r\n\t\t<div>{selector}</div>\r\n\t</div>\r\n)\r\n\r\nexport const ThemeConfigurator = ({ \r\n\tnavType, \r\n\tsideNavTheme, \r\n\tnavCollapsed,\r\n\ttopNavColor,\r\n\theaderNavColor,\r\n\tlocale,\r\n\tcurrentTheme,\r\n\ttoggleCollapsedNav, \r\n\tonNavTypeChange, \r\n\tonNavStyleChange,\r\n\tonTopNavColorChange,\r\n\tonHeaderNavColorChange,\r\n\tonSwitchTheme,\r\n\tdirection,\r\n\tonDirectionChange\r\n}) => {\r\n\tconst isNavTop = navType === NAV_TYPE_TOP? true : false\r\n\tconst isCollapse = navCollapsed \r\n\r\n\tconst { switcher, themes } = useThemeSwitcher();\r\n\r\n\tconst toggleTheme = (isChecked) => {\r\n\t\tonHeaderNavColorChange('')\r\n\t\tconst changedTheme = isChecked ? 'dark' : 'light'\r\n\t\tonSwitchTheme(changedTheme)\r\n    switcher({ theme: themes[changedTheme] });\r\n  };\r\n\r\n\tconst ontopNavColorClick = (value) => {\r\n\t\tonHeaderNavColorChange('')\r\n\t\tconst { rgb } = value\r\n\t\tconst rgba = `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`\r\n\t\tconst hex = utils.rgbaToHex(rgba)\r\n\t\tonTopNavColorChange(hex)\r\n\t}\r\n\tconst onHeaderNavColorClick = (value) => {\r\n\t\tconst { rgb } = value\r\n\t\tconst rgba = `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`\r\n\t\tconst hex = utils.rgbaToHex(rgba)\r\n\t\tonHeaderNavColorChange(hex)\r\n\t}\r\n\r\n\tconst onNavTypeClick = (value) => {\r\n\t\tonHeaderNavColorChange('')\r\n\t\tif(value === NAV_TYPE_TOP) {\r\n\t\t\tonTopNavColorChange(colorOptions[0])\r\n\t\t\ttoggleCollapsedNav(false)\r\n\t\t}\r\n\t\tonNavTypeChange(value)\r\n\t}\r\n\r\n\tconst genCopySettingJson = (configState) => JSON.stringify(configState, null, 2);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"mb-5\">\r\n\t\t\t\t<h4 className=\"mb-3 font-weight-bold\">Navigation</h4>\r\n\t\t\t\t{\r\n\t\t\t\t\tisNavTop ?\r\n\t\t\t\t\t<ListOption \r\n\t\t\t\t\t\tname=\"Top Nav Color \"\r\n\t\t\t\t\t\tvertical\r\n\t\t\t\t\t\tselector={\r\n\t\t\t\t\t\t\t<ColorPicker color={topNavColor} colorChange={ontopNavColorClick}/>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t:\r\n\t\t\t\t\t<ListOption \r\n\t\t\t\t\t\tname=\"Changer la Couleur de l'Entête \"\r\n\t\t\t\t\t\tvertical\r\n\t\t\t\t\t\tselector={\r\n\t\t\t\t\t\t\t<ColorPicker color={headerNavColor} colorChange={onHeaderNavColorClick}/>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"changer le type de menu \"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Radio.Group \r\n\t\t\t\t\t\t\tsize=\"small\" \r\n\t\t\t\t\t\t\tonChange={e => onNavTypeClick(e.target.value)} \r\n\t\t\t\t\t\t\tvalue={navType}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Radio.Button value={NAV_TYPE_SIDE}>Gauche</Radio.Button>\r\n\t\t\t\t\t\t\t<Radio.Button value={NAV_TYPE_TOP}>Haut</Radio.Button>\r\n\t\t\t\t\t\t</Radio.Group>\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Changer la couleur de Side \"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Radio.Group\r\n\t\t\t\t\t\t\tdisabled={isNavTop}\r\n\t\t\t\t\t\t\tsize=\"small\" \r\n\t\t\t\t\t\t\tonChange={e => onNavStyleChange(e.target.value)} \r\n\t\t\t\t\t\t\tvalue={sideNavTheme}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Radio.Button value={SIDE_NAV_LIGHT}>Blanche</Radio.Button>\r\n\t\t\t\t\t\t\t<Radio.Button value={SIDE_NAV_DARK}>Noire</Radio.Button>\r\n\t\t\t\t\t\t</Radio.Group>\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdisabled={isNavTop}\r\n\t\t\t\t/>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Réduire le side bar \"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Switch \r\n\t\t\t\t\t\t\tdisabled={isNavTop} \r\n\t\t\t\t\t\t\tchecked={isCollapse} \r\n\t\t\t\t\t\t\tonChange={() => toggleCollapsedNav(!navCollapsed)} \r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdisabled={isNavTop}\r\n\t\t\t\t/>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Changer le théme \"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Switch checked={currentTheme === 'dark'} onChange={toggleTheme} />\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Direction \"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Radio.Group\r\n\t\t\t\t\t\t\tsize=\"small\" \r\n\t\t\t\t\t\t\tonChange={e => onDirectionChange(e.target.value)} \r\n\t\t\t\t\t\t\tvalue={direction}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Radio.Button value={DIR_LTR}>LTR</Radio.Button>\r\n\t\t\t\t\t\t\t<Radio.Button value={DIR_RTL}>RTL</Radio.Button>\r\n\t\t\t\t\t\t</Radio.Group>\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navType, sideNavTheme, navCollapsed, topNavColor, headerNavColor, locale, currentTheme, direction } =  theme;\r\n  return { navType, sideNavTheme, navCollapsed, topNavColor, headerNavColor, locale, currentTheme, direction }\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n\ttoggleCollapsedNav,\r\n\tonNavTypeChange,\r\n\tonNavStyleChange,\r\n\tonTopNavColorChange,\r\n\tonHeaderNavColorChange,\r\n\tonSwitchTheme,\r\n\tonDirectionChange\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ThemeConfigurator)\r\n","import React, { Component } from 'react';\r\nimport { SettingOutlined } from '@ant-design/icons';\r\nimport { Drawer, Menu } from 'antd';\r\nimport ThemeConfigurator from './ThemeConfigurator';\r\nimport { connect } from \"react-redux\";\r\nimport { DIR_RTL } from 'constants/ThemeConstant';\r\n\r\nexport class NavPanel extends Component {\r\n\tstate = { visible: false };\r\n\r\n  showDrawer = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  onClose = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n\t};\r\n\t\r\n\trender() {\r\n\t\treturn (\r\n      <>\r\n        <Menu mode=\"horizontal\">\r\n          <Menu.Item key=\"panel\" onClick={this.showDrawer}>\r\n            <a href={void(0)}><SettingOutlined className=\"nav-icon mr-0\" /></a>\r\n          </Menu.Item>\r\n        </Menu>\r\n        <Drawer\r\n          title=\"Configuation du Theme\"\r\n          placement={this.props.direction === DIR_RTL ? 'left' : 'right'} \r\n          width={350}\r\n          onClose={this.onClose}\r\n          visible={this.state.visible}\r\n        >\r\n          <ThemeConfigurator/>\r\n        </Drawer>\r\n      </>\r\n    );\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { locale } =  theme;\r\n  return { locale }\r\n};\r\n\r\nexport default connect(mapStateToProps)(NavPanel);","import React, { useState, useRef } from 'react';\r\nimport { \r\n\tDashboardOutlined,\r\n\tAppstoreOutlined,\r\n\tAntDesignOutlined,\r\n\tFileTextOutlined,\r\n\tSearchOutlined\r\n} from '@ant-design/icons';\r\nimport { Link } from \"react-router-dom\";\r\nimport { AutoComplete, Input } from 'antd';\r\nimport IntlMessage from 'components/util-components/IntlMessage';\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\n\r\nfunction getOptionList (navigationTree, optionTree) {\r\n\toptionTree = optionTree ? optionTree : [];\r\n\tfor ( const navItem of navigationTree ) {\r\n\t\tif(navItem.submenu.length === 0) {\r\n\t\t\toptionTree.push(navItem)\r\n\t\t}\r\n\t\tif(navItem.submenu.length > 0) {\r\n\t\t\tgetOptionList(navItem.submenu, optionTree);\r\n\t\t}\r\n\t}\r\n\treturn optionTree \r\n}\r\n\r\nconst optionList = getOptionList(navigationConfig)\r\n\r\nconst getCategoryIcon = category => {\r\n\tswitch (category) {\r\n\t\tcase 'dashboards':\r\n\t\t\treturn <DashboardOutlined className=\"text-success\"/>;\r\n\t\tcase 'apps':\r\n\t\t\treturn <AppstoreOutlined className=\"text-danger\"/>;\r\n\t\tcase 'components':\r\n\t\t\treturn <AntDesignOutlined className=\"text-primary\"/>;\r\n\t\tcase 'extra':\r\n\t\t\treturn <FileTextOutlined className=\"text-warning\"/>;\r\n\t\tdefault:\r\n\t\t\treturn null;\r\n\t}\r\n}\r\n\r\nconst searchResult = () => optionList.map((item) => {\r\n\tconst category = item.key.split('-')[0]\r\n\treturn {\r\n\t\tvalue: item.path,\r\n\t\tlabel: (\r\n\t\t\t<Link to={item.path}>\r\n\t\t\t\t<div className=\"search-list-item\">\r\n\t\t\t\t\t<div className=\"icon\">\r\n\t\t\t\t\t\t{getCategoryIcon(category)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div className=\"font-weight-semibold\"><IntlMessage id={item.title} /></div>\r\n\t\t\t\t\t\t<div className=\"font-size-sm text-muted\">{category} </div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Link>\r\n\t\t),\r\n\t};\r\n});\r\n\r\nconst SearchInput = props => {\r\n\tconst { active, close, isMobile, mode } = props\r\n\tconst [value, setValue] = useState('');\r\n\tconst [options, setOptions] = useState([])\r\n\tconst inputRef = useRef(null);\r\n\r\n\tconst onSelect = () => {\r\n\t\tsetValue('')\r\n\t\tsetOptions([])\r\n\t\tif(close) {\r\n\t\t\tclose()\r\n\t\t}\r\n  };\r\n\r\n\tconst onSearch = searchText => {\r\n\t\tsetValue(searchText)\r\n\t\tsetOptions(!searchText ? [] : searchResult(searchText))\r\n\t};\r\n\t\r\n\tconst autofocus = () => {\r\n\t\tinputRef.current.focus();\r\n\t}\r\n\r\n\tif(active) {\r\n\t\tautofocus()\r\n\t}\r\n\r\n\treturn (\r\n\t\t<AutoComplete\r\n\t\t\tref={inputRef} \r\n\t\t\tclassName={`nav-search-input ${isMobile? 'is-mobile' : ''} ${mode === 'light' ? 'light' : ''}`}\r\n\t\t\tdropdownClassName=\"nav-search-dropdown\"\r\n\t\t\toptions={options}\r\n\t\t\tonSelect={onSelect}\r\n\t\t\tonSearch={onSearch}\r\n\t\t\tvalue={value}\r\n\t\t\tfilterOption={(inputValue, option) => \r\n\t\t\t\toption.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t<Input placeholder=\"Search...\"  prefix={<SearchOutlined className=\"mr-0\" />} />\r\n\t\t</AutoComplete>\r\n\t)\r\n}\r\n\r\nexport default SearchInput\r\n","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n\tCloseOutlined,\r\n} from '@ant-design/icons';\r\nimport utils from 'utils'\r\nimport SearchInput from './SearchInput';\r\n\r\nexport const NavSearch = (props) => {\r\n\tconst { active, close, headerNavColor } = props\r\n\tconst mode = utils.getColorContrast(headerNavColor)\r\n\r\n\treturn (\r\n\t\t<div className={`nav-search ${active ? 'nav-search-active' : ''} ${mode}`} style={{backgroundColor: headerNavColor}}>\r\n\t\t\t<div className=\"d-flex align-items-center w-100\">\r\n\t\t\t\t<SearchInput close={close} active={active}/>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"nav-close\" onClick={close}>\r\n\t\t\t\t<CloseOutlined />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { headerNavColor } =  theme;\r\n  return { headerNavColor }\r\n};\r\n\r\nexport default connect(mapStateToProps, {})(NavSearch)","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Layout } from \"antd\";\r\nimport { MenuFoldOutlined, MenuUnfoldOutlined, SearchOutlined } from '@ant-design/icons';\r\nimport Logo from './Logo';\r\nimport NavNotification from './NavNotification';\r\nimport NavProfile from './NavProfile';\r\nimport NavLanguage from './NavLanguage';\r\nimport NavPanel from './NavPanel';\r\nimport NavSearch  from './NavSearch';\r\nimport SearchInput from './NavSearch/SearchInput.js'\r\nimport { toggleCollapsedNav, onMobileNavToggle } from 'redux/actions/Theme';\r\nimport { NAV_TYPE_TOP, SIDE_NAV_COLLAPSED_WIDTH, SIDE_NAV_WIDTH } from 'constants/ThemeConstant';\r\nimport utils from 'utils'\r\n\r\nconst { Header } = Layout;\r\n\r\nexport const HeaderNav = props => {\r\n  const { navCollapsed, mobileNav, navType, headerNavColor, toggleCollapsedNav, onMobileNavToggle, isMobile, currentTheme, direction } = props;\r\n  const [searchActive, setSearchActive] = useState(false)\r\n\r\n  const onSearchActive = () => {\r\n    setSearchActive(true)\r\n  }\r\n\r\n  const onSearchClose = () => {\r\n    setSearchActive(false)\r\n  }\r\n\r\n  const onToggle = () => {\r\n    if(!isMobile) {\r\n      toggleCollapsedNav(!navCollapsed)\r\n    } else {\r\n      onMobileNavToggle(!mobileNav)\r\n    }\r\n  }\r\n\r\n  const isNavTop = navType === NAV_TYPE_TOP ? true : false\r\n  const mode = ()=> {\r\n    if(!headerNavColor) {\r\n      return utils.getColorContrast(currentTheme === 'dark' ? '#00000' : '#ffffff' )\r\n    }\r\n    return utils.getColorContrast(headerNavColor)\r\n  }\r\n  const navMode = mode()\r\n  const getNavWidth = () => {\r\n    if(isNavTop || isMobile) {\r\n      return '0px'\r\n    }\r\n    if(navCollapsed) {\r\n      return `${SIDE_NAV_COLLAPSED_WIDTH}px`\r\n    } else {\r\n      return `${SIDE_NAV_WIDTH}px`\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(!isMobile) {\r\n      onSearchClose()\r\n    }\r\n  })\r\n  \r\n  return (\r\n    <Header className={`app-header ${navMode}`} style={{backgroundColor: headerNavColor}}>\r\n      <div className={`app-header-wrapper ${isNavTop ? 'layout-top-nav' : ''}`}>\r\n        <Logo logoType={navMode}/>\r\n        <div className=\"nav\" style={{width: `calc(100% - ${getNavWidth()})`}}>\r\n          <div className=\"nav-left\">\r\n            <ul className=\"ant-menu ant-menu-root ant-menu-horizontal\">          \r\n              {\r\n                isNavTop && !isMobile ?\r\n                null\r\n                :\r\n                <li className=\"ant-menu-item ant-menu-item-only-child\" onClick={() => {onToggle()}}>\r\n                  {navCollapsed || isMobile ? <MenuUnfoldOutlined className=\"nav-icon\" /> : <MenuFoldOutlined className=\"nav-icon\" />}\r\n                </li>\r\n              }\r\n              {\r\n                isMobile ?\r\n                <li className=\"ant-menu-item ant-menu-item-only-child\" onClick={() => {onSearchActive()}}>\r\n                  <SearchOutlined />\r\n                </li>\r\n                :\r\n                <li className=\"ant-menu-item ant-menu-item-only-child\" style={{cursor: 'auto'}}>\r\n                  <SearchInput mode={mode} isMobile={isMobile} />\r\n                </li>\r\n              }\r\n            </ul>\r\n          </div>\r\n          <div className=\"nav-right\">\r\n            <NavNotification />\r\n           \r\n            <NavProfile />\r\n            <NavPanel direction={direction} />\r\n          </div>\r\n          <NavSearch active={searchActive} close={onSearchClose}/>\r\n        </div>\r\n      </div>\r\n    </Header>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, navType, headerNavColor, mobileNav, currentTheme, direction } =  theme;\r\n  return { navCollapsed, navType, headerNavColor, mobileNav, currentTheme, direction }\r\n};\r\n\r\nexport default connect(mapStateToProps, {toggleCollapsedNav, onMobileNavToggle})(HeaderNav);","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Breadcrumb } from 'antd';\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport IntlMessage from 'components/util-components/IntlMessage';\r\n\r\nlet breadcrumbData = { \r\n\t'/app' : <IntlMessage id=\"home\" />\r\n};\r\n\r\nnavigationConfig.forEach((elm, i) => {\r\n\tconst assignBreadcrumb = (obj) => breadcrumbData[obj.path] = <IntlMessage id={obj.title} />;\r\n\tassignBreadcrumb(elm);\r\n\tif (elm.submenu) {\r\n\t\telm.submenu.forEach( elm => {\r\n\t\t\tassignBreadcrumb(elm)\r\n\t\t\tif(elm.submenu) {\r\n\t\t\t\telm.submenu.forEach( elm => {\r\n\t\t\t\t\tassignBreadcrumb(elm)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n})\r\n\r\nconst BreadcrumbRoute = withRouter(props => {\r\n\tconst { location } = props;\r\n\tconst pathSnippets = location.pathname.split('/').filter(i => i);\r\n\tconst buildBreadcrumb = pathSnippets.map((_, index) => {\r\n    const url = `/${pathSnippets.slice(0, index + 1).join('/')}`;\r\n    return (\r\n      <Breadcrumb.Item key={url}>\r\n        <Link to={url}>{breadcrumbData[url]}</Link>\r\n      </Breadcrumb.Item>\r\n    );\r\n\t});\r\n  \r\n  return (\r\n\t\t<Breadcrumb>\r\n\t\t\t{buildBreadcrumb}\r\n\t\t</Breadcrumb>\r\n  );\r\n});\r\n\r\nexport class AppBreadcrumb extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<BreadcrumbRoute />\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default AppBreadcrumb\r\n","import React from 'react'\r\nimport AppBreadcrumb from 'components/layout-components/AppBreadcrumb';\r\nimport IntlMessage from '../util-components/IntlMessage';\r\n\r\nexport const PageHeader = ({ title, display }) => {\r\n\treturn (\r\n\t\tdisplay ? (\r\n\t\t\t<div className=\"app-page-header\">\r\n\t\t\t\t<h3 className=\"mb-0 mr-3 font-weight-semibold\">\r\n\t\t\t\t\t<IntlMessage id={title? title : 'home'}/>\r\n\t\t\t\t</h3>\r\n\t\t\t\t<AppBreadcrumb />\r\n\t\t\t</div>\r\n\t\t)\r\n\t\t: null\r\n\t)\r\n}\r\n\r\nexport default PageHeader","import React from 'react'\r\nimport { APP_NAME } from 'configs/AppConfig';\r\n\r\nexport default function Footer() {\r\n\treturn (\r\n\t\t<footer className=\"footer\">\r\n\t\t\t<span>Copyright  &copy;  {`${new Date().getFullYear()}`} <span className=\"font-weight-semibold\">{`${APP_NAME}`}</span> All rights reserved.</span>\r\n\t\t\t<div>\r\n\t\t\t\t<a className=\"text-gray\" href=\"/#\" onClick={e => e.preventDefault()}>Term & Conditions</a>\r\n\t\t\t\t<span className=\"mx-2 text-muted\"> | </span>\r\n\t\t\t\t<a className=\"text-gray\" href=\"/#\" onClick={e => e.preventDefault()}>Privacy & Policy</a>\r\n\t\t\t</div>\r\n\t\t</footer>\r\n\t)\r\n}\r\n\r\n","import React, { lazy, Suspense } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Loading from 'components/shared-components/Loading';\r\nimport { APP_PREFIX_PATH } from 'configs/AppConfig'\r\n\r\nexport const AppViews = () => {\r\n  return (\r\n    <Suspense fallback={<Loading cover=\"content\"/>}>\r\n      <Switch>\r\n        <Route path={`${APP_PREFIX_PATH}/dashboards`} component={lazy(() => import(`./dashboards`))} />\r\n        <Route path={`${APP_PREFIX_PATH}/apps`} component={lazy(() => import(`./apps`))} />\r\n        <Route path={`${APP_PREFIX_PATH}/components`} component={lazy(() => import(`./components`))} />\r\n        <Route path={`${APP_PREFIX_PATH}/pages`} component={lazy(() => import(`./pages`))} />\r\n        <Route path={`${APP_PREFIX_PATH}/maps`} component={lazy(() => import(`./maps`))} />\r\n        <Route path={`${APP_PREFIX_PATH}/charts`} component={lazy(() => import(`./charts`))} />\r\n        <Route path={`${APP_PREFIX_PATH}/docs`} component={lazy(() => import(`./docs`))} />\r\n        <Redirect from={`${APP_PREFIX_PATH}`} to={`${APP_PREFIX_PATH}/dashboards`} />\r\n      </Switch>\r\n    </Suspense>\r\n  )\r\n}\r\n\r\nexport default React.memo(AppViews);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport SideNav from 'components/layout-components/SideNav';\r\nimport TopNav from 'components/layout-components/TopNav';\r\nimport Loading from 'components/shared-components/Loading';\r\nimport MobileNav from 'components/layout-components/MobileNav'\r\nimport HeaderNav from 'components/layout-components/HeaderNav';\r\nimport PageHeader from 'components/layout-components/PageHeader';\r\nimport Footer from 'components/layout-components/Footer';\r\nimport AppViews from 'views/app-views';\r\nimport {\r\n  Layout,\r\n  Grid,\r\n} from \"antd\";\r\n\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport { \r\n  SIDE_NAV_WIDTH, \r\n  SIDE_NAV_COLLAPSED_WIDTH,\r\n  NAV_TYPE_SIDE,\r\n  NAV_TYPE_TOP,\r\n  DIR_RTL,\r\n  DIR_LTR\r\n} from 'constants/ThemeConstant';\r\nimport utils from 'utils';\r\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\r\n\r\nconst { Content } = Layout;\r\nconst { useBreakpoint } = Grid;\r\n\r\nexport const AppLayout = ({ navCollapsed, navType, location, direction }) => {\r\n  const currentRouteInfo = utils.getRouteInfo(navigationConfig, location.pathname)\r\n  const screens = utils.getBreakPoint(useBreakpoint());\r\n  const isMobile = screens.length === 0 ? false : !screens.includes('lg')\r\n  const isNavSide = navType === NAV_TYPE_SIDE\r\n  const isNavTop = navType === NAV_TYPE_TOP\r\n  const getLayoutGutter = () => {\r\n    if(isNavTop || isMobile) {\r\n      return 0\r\n    }\r\n    return navCollapsed ? SIDE_NAV_COLLAPSED_WIDTH : SIDE_NAV_WIDTH\r\n  }\r\n\r\n  const { status } = useThemeSwitcher();\r\n\r\n  if (status === 'loading') {\r\n    return <Loading cover=\"page\" />;\r\n  }\r\n\r\n  const getLayoutDirectionGutter = () => {\r\n    if(direction === DIR_LTR) {\r\n      return {paddingLeft: getLayoutGutter()}\r\n    }  \r\n    if(direction === DIR_RTL) {\r\n      return {paddingRight: getLayoutGutter()}\r\n    }\r\n    return {paddingLeft: getLayoutGutter()}\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <HeaderNav isMobile={isMobile}/>\r\n      {(isNavTop && !isMobile) ? <TopNav routeInfo={currentRouteInfo}/> : null}\r\n      <Layout className=\"app-container\">\r\n        {(isNavSide && !isMobile) ? <SideNav routeInfo={currentRouteInfo}/> : null }\r\n        <Layout className=\"app-layout\" style={getLayoutDirectionGutter()}>\r\n          <div className={`app-content ${isNavTop ? 'layout-top-nav' : ''}`}>\r\n            <PageHeader display={currentRouteInfo?.breadcrumb} title={currentRouteInfo?.title} />\r\n            <Content>\r\n              <AppViews />\r\n            </Content>\r\n          </div>\r\n          <Footer />\r\n        </Layout>\r\n      </Layout>\r\n      {isMobile && <MobileNav />}\r\n    </Layout>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, navType, locale } =  theme;\r\n  return { navCollapsed, navType, locale }\r\n};\r\n\r\nexport default connect(mapStateToProps)(React.memo(AppLayout));","import React, { lazy, Suspense } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Loading from 'components/shared-components/Loading';\r\nimport { AUTH_PREFIX_PATH } from 'configs/AppConfig'\r\n\r\nexport const AppViews = () => {\r\n  return (\r\n    <Suspense fallback={<Loading cover=\"page\"/>}>\r\n      <Switch>\r\n        <Route path={`${AUTH_PREFIX_PATH}/login`} component={lazy(() => import(`./authentication/login`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/login-1`} component={lazy(() => import(`./authentication/login-1`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/login-2`} component={lazy(() => import(`./authentication/login-2`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/register-1`} component={lazy(() => import(`./authentication/register-1`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/register-2`} component={lazy(() => import(`./authentication/register-2`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/forgot-password`} component={lazy(() => import(`./authentication/forgot-password`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/error-1`} component={lazy(() => import(`./errors/error-page-1`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/error-2`} component={lazy(() => import(`./errors/error-page-2`))} />\r\n        <Redirect from={`${AUTH_PREFIX_PATH}`} to={`${AUTH_PREFIX_PATH}/login`} />\r\n      </Switch>\r\n    </Suspense>\r\n  )\r\n}\r\n\r\nexport default AppViews;\r\n\r\n","import React from 'react'\r\nimport { Switch, Route, } from \"react-router-dom\";\r\nimport AuthViews from 'views/auth-views';\r\nimport Loading from 'components/shared-components/Loading';\r\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\r\n\r\nexport const AuthLayout = () => {\r\n\tconst { status } = useThemeSwitcher();\r\n\r\n  if (status === 'loading') {\r\n    return <Loading cover=\"page\" />;\r\n  }\r\n\r\n\treturn (\r\n\t\t<div className=\"auth-container\">\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route path=\"\" component={AuthViews} />\r\n\t\t\t</Switch>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\nexport default AuthLayout\r\n","import antdEnUS from 'antd/es/locale/en_US';\r\nimport enMsg from \"../locales/en_US.json\";\r\n\r\nconst EnLang = {\r\n  antd: antdEnUS,\r\n  locale: 'en-US',\r\n  messages: {\r\n    ...enMsg\r\n  },\r\n};\r\nexport default EnLang;\r\n","import antdZhCn from 'antd/es/locale/zh_CN';\r\nimport zhMsg from \"../locales/zh_CN.json\";\r\n\r\nconst ZhLang = {\r\n  antd: antdZhCn,\r\n  locale: 'zh',\r\n  messages: {\r\n    ...zhMsg\r\n  },\r\n};\r\nexport default ZhLang;\r\n","import antdFrFR from 'antd/es/locale/fr_FR';\r\nimport frMsg from \"../locales/fr_FR.json\";\r\n\r\nconst FrLang = {\r\n  antd: antdFrFR,\r\n  locale: 'fr-FR',\r\n  messages: {\r\n    ...frMsg\r\n  },\r\n};\r\nexport default FrLang;\r\n","import enLang from './entries/en_US';\r\nimport zhLang from './entries/zh_CN';\r\nimport frLang from './entries/fr_FR';\r\nimport jaLang from './entries/ja_JP'\r\n\r\nconst AppLocale = {\r\n    en: enLang,\r\n    zh: zhLang,\r\n    fr: frLang,\r\n    ja: jaLang\r\n};\r\n\r\nexport default AppLocale;","import antdJaJP from 'antd/es/locale/ja_JP';\r\nimport jaMsg from \"../locales/ja_JP.json\";\r\n\r\nconst JaLang = {\r\n  antd: antdJaJP,\r\n  locale: 'ja-JP',\r\n  messages: {\r\n    ...jaMsg\r\n  },\r\n};\r\nexport default JaLang;\r\n","import {useEffect} from 'react';\r\n\r\nconst addBodyClass = className => document.body.classList.add(className);\r\nconst removeBodyClass = className => document.body.classList.remove(className);\r\n\r\nexport default function useBodyClass(className) {\r\n    useEffect(\r\n\t\t\t() => {\r\n\t\t\t\t// Set up\r\n\t\t\t\tclassName instanceof Array ? className.map(addBodyClass) : addBodyClass(className);\r\n\r\n\t\t\t\t// Clean up\r\n\t\t\t\treturn () => {\r\n\t\t\t\t\t\tclassName instanceof Array ? className.map(removeBodyClass) : removeBodyClass(className);\r\n\t\t\t\t};\r\n\t\t\t},\r\n\t\t\t[className]\r\n    );\r\n}","import React from \"react\";\r\nimport { Route, Switch, Redirect, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport AppLayout from \"layouts/app-layout\";\r\nimport AuthLayout from 'layouts/auth-layout';\r\nimport AppLocale from \"lang\";\r\nimport { IntlProvider } from \"react-intl\";\r\nimport { ConfigProvider } from 'antd';\r\nimport { APP_PREFIX_PATH, AUTH_PREFIX_PATH } from 'configs/AppConfig'\r\nimport useBodyClass from 'hooks/useBodyClass';\r\n\r\nfunction RouteInterceptor({ children, isAuthenticated, ...rest }) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n        isAuthenticated ? (\r\n          children\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              \r\n              pathname: AUTH_PREFIX_PATH,\r\n              state: { from: location }\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport const Views = (props) => {\r\n  const { locale, token, location, direction } = props;\r\n  const currentAppLocale = AppLocale[locale];\r\n  useBodyClass(`dir-${direction}`);\r\n  return (\r\n    <IntlProvider\r\n      locale={currentAppLocale.locale}\r\n      messages={currentAppLocale.messages}>\r\n      <ConfigProvider locale={currentAppLocale.antd} direction={direction}>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Redirect to={APP_PREFIX_PATH} />\r\n          </Route>\r\n          <Route path={AUTH_PREFIX_PATH}>\r\n            <AuthLayout direction={direction} />\r\n          </Route>\r\n          <RouteInterceptor path={APP_PREFIX_PATH} isAuthenticated={token}>\r\n            <AppLayout direction={direction} location={location}/>\r\n          </RouteInterceptor>\r\n        </Switch>\r\n      </ConfigProvider>\r\n    </IntlProvider>\r\n  )\r\n}\r\n\r\n\r\nconst mapStateToProps = ({ theme, auth }) => {\r\n  const { locale, direction } =  theme;\r\n  const { token } = auth;\r\n  return { locale, direction, token }\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps)(Views));","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport Views from './views';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { ThemeSwitcherProvider } from \"react-css-theme-switcher\";\r\nimport { THEME_CONFIG } from './configs/AppConfig';\r\n\r\nconst themes = {\r\n  dark: `${process.env.PUBLIC_URL}/css/dark-theme.css`,\r\n  light: `${process.env.PUBLIC_URL}/css/light-theme.css`,\r\n};\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Provider store={store}>\r\n        <ThemeSwitcherProvider themeMap={themes} defaultTheme={THEME_CONFIG.currentTheme} insertionPoint=\"styles-insertion-point\">\r\n          <Router>\r\n            <Switch>\r\n              <Route path=\"/\" component={Views}/>\r\n            </Switch>\r\n          </Router>\r\n        </ThemeSwitcherProvider>\r\n      </Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './index.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import {\r\n  SIGNIN,\r\n  AUTHENTICATED,\r\n  USERNAME,\r\n  SIGNOUT,\r\n  SIGNOUT_SUCCESS,\r\n  SHOW_AUTH_MESSAGE,\r\n  HIDE_AUTH_MESSAGE,\r\n  SIGNUP,\r\n  SIGNUP_SUCCESS,\r\n  SHOW_LOADING,\r\n  SIGNIN_WITH_GOOGLE,\r\n  SIGNIN_WITH_GOOGLE_AUTHENTICATED,\r\n  SIGNIN_WITH_FACEBOOK,\r\n  SIGNIN_WITH_FACEBOOK_AUTHENTICATED\r\n} from '../constants/Auth';\r\n\r\nexport const signIn = (user) => {\r\n  return {\r\n    type: SIGNIN,\r\n    payload: user\r\n  }\r\n};\r\n\r\nexport const authenticated = (token,username) => {\r\n  return {\r\n    type: AUTHENTICATED,\r\n    token,\r\n    username\r\n  }\r\n};\r\n\r\n// export const username = (username) => {\r\n//   return {\r\n//     type: USERNAME,\r\n//     username\r\n//   }\r\n// };\r\n\r\nexport const signOut = () => {\r\n  console.log(\"SIGNOUT ACTION \")\r\n  return {\r\n    type: SIGNOUT\r\n  };\r\n};\r\n\r\nexport const signOutSuccess = () => {\r\n  console.log(\"SIGNOUT_SUCCESS\")\r\n  return {\r\n    type: SIGNOUT_SUCCESS,\r\n  }\r\n};\r\n\r\nexport const signUp = (user) => {\r\n  return {\r\n    type: SIGNUP,\r\n    payload: user\r\n  };\r\n};\r\n\r\nexport const signUpSuccess = (token) => {\r\n  return {\r\n    type: SIGNUP_SUCCESS,\r\n    token\r\n  };\r\n};\r\n\r\nexport const signInWithGoogle = () => {\r\n  return {\r\n    type: SIGNIN_WITH_GOOGLE\r\n  };\r\n};\r\n\r\nexport const signInWithGoogleAuthenticated = (token) => {\r\n  return {\r\n    type: SIGNIN_WITH_GOOGLE_AUTHENTICATED,\r\n    token\r\n  };\r\n};\r\n\r\nexport const signInWithFacebook = () => {\r\n  return {\r\n    type: SIGNIN_WITH_FACEBOOK\r\n  };\r\n};\r\n\r\nexport const signInWithFacebookAuthenticated = (token) => {\r\n  return {\r\n    type: SIGNIN_WITH_FACEBOOK_AUTHENTICATED,\r\n    token\r\n  };\r\n};\r\n\r\nexport const showAuthMessage = (message) => {\r\n  return {\r\n    type: SHOW_AUTH_MESSAGE,\r\n    message\r\n  };\r\n};\r\n\r\nexport const hideAuthMessage = () => {\r\n  return {\r\n    type: HIDE_AUTH_MESSAGE,\r\n  };\r\n};\r\n\r\nexport const showLoading = () => {\r\n  return {\r\n    type: SHOW_LOADING,\r\n  };\r\n};\r\n","class Utils {\r\n\r\n\t/**\r\n\t * Get first character from first & last sentences of a username\r\n\t * @param {String} name - Username\r\n\t * @return {String} 2 characters string\r\n\t */\r\n\tstatic getNameInitial(name) {\r\n\t\tlet initials = name.match(/\\b\\w/g) || [];\r\n\t\treturn ((initials.shift() || '') + (initials.pop() || '')).toUpperCase();\r\n\t}\r\n\r\n\t/**\r\n\t * Get current path related object from Navigation Tree\r\n\t * @param {Array} navTree - Navigation Tree from directory 'configs/NavigationConfig'\r\n\t * @param {String} path - Location path you looking for e.g '/app/dashboards/analytic'\r\n\t * @return {Object} object that contained the path string\r\n\t */\r\n\tstatic getRouteInfo(navTree, path) {\r\n\t\tif( navTree.path === path ){\r\n\t\t  return navTree;\r\n\t\t}\r\n\t\tlet route; \r\n\t\tfor (let p in navTree) {\r\n\t\t  if( navTree.hasOwnProperty(p) && typeof navTree[p] === 'object' ) {\r\n\t\t\t\troute = this.getRouteInfo(navTree[p], path);\r\n\t\t\t\tif(route){\r\n\t\t\t\t\treturn route;\r\n\t\t\t\t}\r\n\t\t  }\r\n\t\t}\r\n\t\treturn route;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Get accessible color contrast\r\n\t * @param {String} hex - Hex color code e.g '#3e82f7'\r\n\t * @return {String} 'dark' or 'light'\r\n\t */\r\n\tstatic getColorContrast(hex){\r\n\t\tif(!hex) {\r\n\t\t\treturn 'dark'\r\n\t\t}\r\n\t\tconst threshold = 130;\r\n\t\tconst hRed = hexToR(hex);\r\n\t\tconst hGreen = hexToG(hex);\r\n\t\tconst hBlue = hexToB(hex);\r\n\t\tfunction hexToR(h) {return parseInt((cutHex(h)).substring(0,2),16)}\r\n\t\tfunction hexToG(h) {return parseInt((cutHex(h)).substring(2,4),16)}\r\n\t\tfunction hexToB(h) {return parseInt((cutHex(h)).substring(4,6),16)}\r\n\t\tfunction cutHex(h) {return (h.charAt(0) === '#') ? h.substring(1,7):h}\r\n\t\tconst cBrightness = ((hRed * 299) + (hGreen * 587) + (hBlue * 114)) / 1000;\r\n\t\tif (cBrightness > threshold){\r\n\t\t\treturn 'dark'\r\n\t\t} else { \r\n\t\t\treturn 'light'\r\n\t\t}\t\r\n\t}\r\n\r\n\t/**\r\n\t * Darken or lighten a hex color \r\n\t * @param {String} color - Hex color code e.g '#3e82f7'\r\n\t * @param {Number} percent - Percentage -100 to 100, positive for lighten, negative for darken\r\n\t * @return {String} Darken or lighten color \r\n\t */\r\n\tstatic shadeColor(color, percent) {\r\n\t\tlet R = parseInt(color.substring(1,3),16);\r\n\t\tlet G = parseInt(color.substring(3,5),16);\r\n\t\tlet B = parseInt(color.substring(5,7),16);\r\n\t\tR = parseInt(R * (100 + percent) / 100);\r\n\t\tG = parseInt(G * (100 + percent) / 100);\r\n\t\tB = parseInt(B * (100 + percent) / 100);\r\n\t\tR = (R<255)?R:255;  \r\n\t\tG = (G<255)?G:255;  \r\n\t\tB = (B<255)?B:255;  \r\n\t\tconst RR = ((R.toString(16).length === 1) ? `0${R.toString(16)}` : R.toString(16));\r\n\t\tconst GG = ((G.toString(16).length === 1) ? `0${G.toString(16)}` : G.toString(16));\r\n\t\tconst BB = ((B.toString(16).length === 1) ? `0${B.toString(16)}` : B.toString(16));\r\n\t\treturn `#${RR}${GG}${BB}`; \r\n\t}\r\n\r\n\t/**\r\n\t * Convert RGBA to HEX \r\n\t * @param {String} rgba - RGBA color code e.g 'rgba(197, 200, 198, .2)')'\r\n\t * @return {String} HEX color \r\n\t */\r\n\tstatic rgbaToHex(rgba) {\r\n\t\tconst trim = str => (str.replace(/^\\s+|\\s+$/gm,''))\r\n\t\tconst inParts = rgba.substring(rgba.indexOf(\"(\")).split(\",\"),\r\n\t\t\tr = parseInt(trim(inParts[0].substring(1)), 10),\r\n\t\t\tg = parseInt(trim(inParts[1]), 10),\r\n\t\t\tb = parseInt(trim(inParts[2]), 10),\r\n\t\t\ta = parseFloat(trim(inParts[3].substring(0, inParts[3].length - 1))).toFixed(2);\r\n\t\t\tconst outParts = [\r\n\t\t\tr.toString(16),\r\n\t\t\tg.toString(16),\r\n\t\t\tb.toString(16),\r\n\t\t\tMath.round(a * 255).toString(16).substring(0, 2)\r\n\t\t];\r\n\r\n\t\toutParts.forEach(function (part, i) {\r\n\t\t\tif (part.length === 1) {\r\n\t\t\t\toutParts[i] = '0' + part;\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn (`#${outParts.join('')}`);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns either a positive or negative \r\n\t * @param {Number} number - number value\r\n\t * @param {any} positive - value that return when positive\r\n\t * @param {any} negative - value that return when negative\r\n\t * @return {any} positive or negative value based on param\r\n\t */\r\n\tstatic getSignNum(number, positive, negative) {\r\n\t\tif (number > 0) {\r\n\t\t\treturn positive\r\n\t\t}\r\n\t\tif (number < 0) {\r\n\t\t\treturn negative\r\n\t\t}\r\n\t\treturn null\r\n\t}\r\n\r\n\t/**\r\n\t * Returns either ascending or descending value\r\n\t * @param {Object} a - antd Table sorter param a\r\n\t * @param {Object} b - antd Table sorter param b\r\n\t * @param {String} key - object key for compare\r\n\t * @return {any} a value minus b value\r\n\t */\r\n\tstatic antdTableSorter(a, b, key) {\r\n\t\tif(typeof a[key] === 'number' && typeof b[key] === 'number') {\r\n\t\t\treturn a[key] - b[key]\r\n\t\t}\r\n\r\n\t\tif(typeof a[key] === 'string' && typeof b[key] === 'string') {\r\n\t\t\ta = a[key].toLowerCase();\r\n\t\t\tb = b[key].toLowerCase();\r\n\t\t\treturn a > b ? -1 : b > a ? 1 : 0;\r\n\t\t}\r\n\t\treturn\r\n\t}\r\n\r\n\t/**\r\n\t * Filter array of object \r\n\t * @param {Array} list - array of objects that need to filter\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - value that excluded from filter\r\n\t * @return {Array} a value minus b value\r\n\t */\r\n\tstatic filterArray(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif(list) {\r\n\t\t\tdata = list.filter(item => item[key] === value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Remove object from array by value\r\n\t * @param {Array} list - array of objects\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - target value\r\n\t * @return {Array} Array that removed target object\r\n\t */\r\n\tstatic deleteArrayRow(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif(list) {\r\n\t\t\tdata = list.filter(item => item[key] !== value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Wild card search on all property of the object\r\n\t * @param {Number | String} input - any value to search\r\n\t * @param {Array} list - array for search\r\n\t * @return {Array} array of object contained keyword\r\n\t */\r\n\tstatic wildCardSearch(list, input) {\r\n\t\tconst searchText = (item) => {\r\n\t\t\tfor (let key in item) {\r\n\t\t\t\tif (item[key] == null) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (item[key].toString().toUpperCase().indexOf(input.toString().toUpperCase()) !== -1) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\tlist = list.filter(value => searchText(value));\r\n\t\treturn list;\r\n\t}\r\n\r\n\t/**\r\n\t * Get Breakpoint\r\n\t * @param {Object} screens - Grid.useBreakpoint() from antd\r\n\t * @return {Array} array of breakpoint size\r\n\t */\r\n\tstatic getBreakPoint(screens) {\r\n\t\tlet breakpoints = []\r\n\t\tfor (const key in screens) {\r\n\t\t\tif (screens.hasOwnProperty(key)) {\r\n\t\t\t\tconst element = screens[key];\r\n\t\t\t\tif (element) {\r\n\t\t\t\t\tbreakpoints.push(key)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn breakpoints\r\n\t}\r\n}\r\n\r\nexport default Utils;","import React, { Component } from 'react'\r\n\r\nexport class Icon extends Component {\r\n\trender() {\r\n\t\tconst { type, className  } = this.props;\r\n\t\treturn (\r\n\t\t\t<>{React.createElement(type, { className: className })}</>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Icon\r\n","import React from 'react';\r\nimport { Spin } from 'antd';\r\nimport PropTypes from 'prop-types'\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n\r\nconst Icon = <LoadingOutlined style={{ fontSize: 35 }} spin />\r\n\r\nconst Loading = (props) => {\r\n\tconst { align, cover } = props\r\n\treturn (\r\n\t\t<div className={`loading text-${align} cover-${cover}`}>\r\n\t\t\t<Spin indicator={Icon} />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nLoading.propTypes = {\r\n\tsize: PropTypes.string,\r\n\tcover: PropTypes.string\r\n}\r\n\r\nLoading.defaultProps = {\r\n\talign: 'center',\r\n\tcover: 'inline'\r\n};\r\n\r\nexport default Loading"],"sourceRoot":""}