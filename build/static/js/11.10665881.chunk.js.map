{"version":3,"sources":["../node_modules/@ant-design/icons/es/components/Icon.js","../node_modules/clsx/dist/clsx.m.js","../node_modules/history/esm/history.js","../../src/utils/propValidator.ts","../../src/utils/constant.ts","../../src/utils/cssTransition.tsx","../../src/utils/collapseToast.ts","../../src/core/eventManager.ts","../../src/hooks/useKeeper.ts","../../src/hooks/toastContainerReducer.ts","../../src/hooks/useToastContainer.ts","../../src/hooks/useToast.ts","../../src/components/CloseButton.tsx","../../src/components/ProgressBar.tsx","../../src/components/Icons.tsx","../../src/components/Toast.tsx","../../src/components/Transitions.tsx","../../src/components/ToastContainer.tsx","../../src/core/toast.tsx"],"names":["_excluded","Icon","React","props","ref","className","Component","component","viewBox","spin","rotate","tabIndex","onClick","children","restProps","_objectWithoutProperties","warning","Boolean","useInsertStyles","_React$useContext$pre","Context","prefixCls","classString","classNames","svgClassString","_defineProperty","concat","svgStyle","msTransform","transform","undefined","innerSvgProps","_objectSpread","svgBaseProps","style","iconTabIndex","role","count","only","type","displayName","toVal","mix","k","y","str","Array","isArray","length","tmp","x","i","arguments","addLeadingSlash","path","charAt","stripBasename","prefix","toLowerCase","indexOf","hasBasename","substr","stripTrailingSlash","slice","createPath","location","pathname","search","hash","createLocation","state","key","currentLocation","hashIndex","searchIndex","parsePath","_extends","decodeURI","e","URIError","resolvePathname","createTransitionManager","prompt","listeners","setPrompt","nextPrompt","confirmTransitionTo","action","getUserConfirmation","callback","result","appendListener","fn","isActive","listener","apply","push","filter","item","notifyListeners","_len","args","_key","forEach","canUseDOM","window","document","createElement","getConfirmation","message","confirm","PopStateEvent","HashChangeEvent","getHistoryState","history","createBrowserHistory","invariant","globalHistory","canUseHistory","ua","navigator","userAgent","supportsHistory","needsHashChangeListener","_props","_props$forceRefresh","forceRefresh","_props$getUserConfirm","_props$keyLength","keyLength","basename","getDOMLocation","historyState","_ref","_window$location","createKey","Math","random","toString","transitionManager","setState","nextState","handlePopState","event","isExtraneousPopstateEvent","handlePop","handleHashChange","forceNextPop","ok","fromLocation","toLocation","toIndex","allKeys","fromIndex","delta","go","revertPop","initialLocation","createHref","n","listenerCount","checkDOMListeners","addEventListener","removeEventListener","isBlocked","href","pushState","prevIndex","nextKeys","replace","replaceState","goBack","goForward","block","unblock","listen","unlisten","isNum","v","isNaN","isBool","isStr","isFn","parseClassName","isToastIdValid","toastId","canUseDom","canBeRendered","content","isValidElement","POSITION","TOP_LEFT","TOP_RIGHT","TOP_CENTER","BOTTOM_LEFT","BOTTOM_RIGHT","BOTTOM_CENTER","TYPE","INFO","SUCCESS","WARNING","ERROR","DEFAULT","cssTransition","enter","exit","appendPosition","collapse","collapseDuration","position","preventExitTransition","done","nodeRef","isIn","enterClassName","exitClassName","baseClassName","useRef","animationStep","node","duration","scrollHeight","requestAnimationFrame","setTimeout","collapseToast","useLayoutEffect","onEnter","useEffect","onExited","onExit","eventManager","list","emitQueue","on","this","set","off","cb","get","cancelEmit","timers","emit","timer","useKeeper","arg","refresh","reducer","id","useToastContainer","forceUpdate","useReducer","toast","dispatch","containerRef","toastCount","queue","collection","instance","toastKey","displayedToast","containerId","isToastActive","getToast","appendToast","delay","staleId","options","updateId","isNotValid","data","closeToast","removeToast","isNotAnUpdate","toastAutoClose","containerAutoClose","toastProps","isLoading","theme","icon","closeButton","rtl","transition","bodyClassName","bodyStyle","pauseOnHover","pauseOnFocusLoss","draggable","draggablePercent","draggableDirection","closeOnClick","progressClassName","progressStyle","autoClose","hideProgressBar","progress","deleteToast","queueLen","freeSlot","dequeueToast","toDequeue","removeFromCollection","toastContent","cloneElement","getToastToRender","toastToRender","toastList","Object","p","getX","getY","useToast","useState","isRunning","setIsRunning","setPreventExitTransition","toastRef","drag","start","removalDistance","canCloseOnClick","canDrag","boundingRect","syncProps","top","bottom","left","right","pauseToast","playToast","bindFocusEvents","eventHandlers","onMouseDown","onTouchStart","onMouseUp","onTouchEnd","onDragTransitionEnd","CloseButton","ariaLabel","fillRule","d","ProgressBar","hide","userStyle","controlledProgress","animationDuration","animationPlayState","opacity","defaultClassName","cx","animationEvent","Svg","rest","width","height","fill","Icons","info","success","error","spinner","Toast","Transition","cssClasses","isProgressControlled","maybeIcon","iconProps","renderCloseButton","Bounce","ToastContainer","containerStyle","pointerEvents","getClassName","newestOnTop","containers","lazy","generateToastId","getToastId","dispatchToast","containerDomNode","render","mergeOptions","createToastByType","pending","resetParams","resolver","baseParams","params","input","promise","err","container","oldOptions","oldContent","nextOptions","config","containerConfig","latestInstance","containerInstance"],"mappings":"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","file":"static/js/11.10665881.chunk.js","sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"className\", \"component\", \"viewBox\", \"spin\", \"rotate\", \"tabIndex\", \"onClick\", \"children\"];\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport Context from './Context';\nimport { svgBaseProps, warning, useInsertStyles } from '../utils';\nvar Icon = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var className = props.className,\n      Component = props.component,\n      viewBox = props.viewBox,\n      spin = props.spin,\n      rotate = props.rotate,\n      tabIndex = props.tabIndex,\n      onClick = props.onClick,\n      children = props.children,\n      restProps = _objectWithoutProperties(props, _excluded);\n\n  warning(Boolean(Component || children), 'Should have `component` prop or `children`.');\n  useInsertStyles();\n\n  var _React$useContext = React.useContext(Context),\n      _React$useContext$pre = _React$useContext.prefixCls,\n      prefixCls = _React$useContext$pre === void 0 ? 'anticon' : _React$useContext$pre;\n\n  var classString = classNames(prefixCls, className);\n  var svgClassString = classNames(_defineProperty({}, \"\".concat(prefixCls, \"-spin\"), !!spin));\n  var svgStyle = rotate ? {\n    msTransform: \"rotate(\".concat(rotate, \"deg)\"),\n    transform: \"rotate(\".concat(rotate, \"deg)\")\n  } : undefined;\n\n  var innerSvgProps = _objectSpread(_objectSpread({}, svgBaseProps), {}, {\n    className: svgClassString,\n    style: svgStyle,\n    viewBox: viewBox\n  });\n\n  if (!viewBox) {\n    delete innerSvgProps.viewBox;\n  } // component > children\n\n\n  var renderInnerNode = function renderInnerNode() {\n    if (Component) {\n      return /*#__PURE__*/React.createElement(Component, _objectSpread({}, innerSvgProps), children);\n    }\n\n    if (children) {\n      warning(Boolean(viewBox) || React.Children.count(children) === 1 && /*#__PURE__*/React.isValidElement(children) && React.Children.only(children).type === 'use', 'Make sure that you provide correct `viewBox`' + ' prop (default `0 0 1024 1024`) to the icon.');\n      return /*#__PURE__*/React.createElement(\"svg\", _objectSpread(_objectSpread({}, innerSvgProps), {}, {\n        viewBox: viewBox\n      }), children);\n    }\n\n    return null;\n  };\n\n  var iconTabIndex = tabIndex;\n\n  if (iconTabIndex === undefined && onClick) {\n    iconTabIndex = -1;\n  }\n\n  return /*#__PURE__*/React.createElement(\"span\", _objectSpread(_objectSpread({\n    role: \"img\"\n  }, restProps), {}, {\n    ref: ref,\n    tabIndex: iconTabIndex,\n    onClick: onClick,\n    className: classString\n  }), renderInnerNode());\n});\nIcon.displayName = 'AntdIcon';\nexport default Icon;","function toVal(mix) {\n\tvar k, y, str='';\n\n\tif (typeof mix === 'string' || typeof mix === 'number') {\n\t\tstr += mix;\n\t} else if (typeof mix === 'object') {\n\t\tif (Array.isArray(mix)) {\n\t\t\tfor (k=0; k < mix.length; k++) {\n\t\t\t\tif (mix[k]) {\n\t\t\t\t\tif (y = toVal(mix[k])) {\n\t\t\t\t\t\tstr && (str += ' ');\n\t\t\t\t\t\tstr += y;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor (k in mix) {\n\t\t\t\tif (mix[k]) {\n\t\t\t\t\tstr && (str += ' ');\n\t\t\t\t\tstr += k;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn str;\n}\n\nexport default function () {\n\tvar i=0, tmp, x, str='';\n\twhile (i < arguments.length) {\n\t\tif (tmp = arguments[i++]) {\n\t\t\tif (x = toVal(tmp)) {\n\t\t\t\tstr && (str += ' ');\n\t\t\t\tstr += x\n\t\t\t}\n\t\t}\n\t}\n\treturn str;\n}\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport resolvePathname from 'resolve-pathname';\nimport valueEqual from 'value-equal';\nimport warning from 'tiny-warning';\nimport invariant from 'tiny-invariant';\n\nfunction addLeadingSlash(path) {\n  return path.charAt(0) === '/' ? path : '/' + path;\n}\nfunction stripLeadingSlash(path) {\n  return path.charAt(0) === '/' ? path.substr(1) : path;\n}\nfunction hasBasename(path, prefix) {\n  return path.toLowerCase().indexOf(prefix.toLowerCase()) === 0 && '/?#'.indexOf(path.charAt(prefix.length)) !== -1;\n}\nfunction stripBasename(path, prefix) {\n  return hasBasename(path, prefix) ? path.substr(prefix.length) : path;\n}\nfunction stripTrailingSlash(path) {\n  return path.charAt(path.length - 1) === '/' ? path.slice(0, -1) : path;\n}\nfunction parsePath(path) {\n  var pathname = path || '/';\n  var search = '';\n  var hash = '';\n  var hashIndex = pathname.indexOf('#');\n\n  if (hashIndex !== -1) {\n    hash = pathname.substr(hashIndex);\n    pathname = pathname.substr(0, hashIndex);\n  }\n\n  var searchIndex = pathname.indexOf('?');\n\n  if (searchIndex !== -1) {\n    search = pathname.substr(searchIndex);\n    pathname = pathname.substr(0, searchIndex);\n  }\n\n  return {\n    pathname: pathname,\n    search: search === '?' ? '' : search,\n    hash: hash === '#' ? '' : hash\n  };\n}\nfunction createPath(location) {\n  var pathname = location.pathname,\n      search = location.search,\n      hash = location.hash;\n  var path = pathname || '/';\n  if (search && search !== '?') path += search.charAt(0) === '?' ? search : \"?\" + search;\n  if (hash && hash !== '#') path += hash.charAt(0) === '#' ? hash : \"#\" + hash;\n  return path;\n}\n\nfunction createLocation(path, state, key, currentLocation) {\n  var location;\n\n  if (typeof path === 'string') {\n    // Two-arg form: push(path, state)\n    location = parsePath(path);\n    location.state = state;\n  } else {\n    // One-arg form: push(location)\n    location = _extends({}, path);\n    if (location.pathname === undefined) location.pathname = '';\n\n    if (location.search) {\n      if (location.search.charAt(0) !== '?') location.search = '?' + location.search;\n    } else {\n      location.search = '';\n    }\n\n    if (location.hash) {\n      if (location.hash.charAt(0) !== '#') location.hash = '#' + location.hash;\n    } else {\n      location.hash = '';\n    }\n\n    if (state !== undefined && location.state === undefined) location.state = state;\n  }\n\n  try {\n    location.pathname = decodeURI(location.pathname);\n  } catch (e) {\n    if (e instanceof URIError) {\n      throw new URIError('Pathname \"' + location.pathname + '\" could not be decoded. ' + 'This is likely caused by an invalid percent-encoding.');\n    } else {\n      throw e;\n    }\n  }\n\n  if (key) location.key = key;\n\n  if (currentLocation) {\n    // Resolve incomplete/relative pathname relative to current location.\n    if (!location.pathname) {\n      location.pathname = currentLocation.pathname;\n    } else if (location.pathname.charAt(0) !== '/') {\n      location.pathname = resolvePathname(location.pathname, currentLocation.pathname);\n    }\n  } else {\n    // When there is no prior location and pathname is empty, set it to /\n    if (!location.pathname) {\n      location.pathname = '/';\n    }\n  }\n\n  return location;\n}\nfunction locationsAreEqual(a, b) {\n  return a.pathname === b.pathname && a.search === b.search && a.hash === b.hash && a.key === b.key && valueEqual(a.state, b.state);\n}\n\nfunction createTransitionManager() {\n  var prompt = null;\n\n  function setPrompt(nextPrompt) {\n    process.env.NODE_ENV !== \"production\" ? warning(prompt == null, 'A history supports only one prompt at a time') : void 0;\n    prompt = nextPrompt;\n    return function () {\n      if (prompt === nextPrompt) prompt = null;\n    };\n  }\n\n  function confirmTransitionTo(location, action, getUserConfirmation, callback) {\n    // TODO: If another transition starts while we're still confirming\n    // the previous one, we may end up in a weird state. Figure out the\n    // best way to handle this.\n    if (prompt != null) {\n      var result = typeof prompt === 'function' ? prompt(location, action) : prompt;\n\n      if (typeof result === 'string') {\n        if (typeof getUserConfirmation === 'function') {\n          getUserConfirmation(result, callback);\n        } else {\n          process.env.NODE_ENV !== \"production\" ? warning(false, 'A history needs a getUserConfirmation function in order to use a prompt message') : void 0;\n          callback(true);\n        }\n      } else {\n        // Return false from a transition hook to cancel the transition.\n        callback(result !== false);\n      }\n    } else {\n      callback(true);\n    }\n  }\n\n  var listeners = [];\n\n  function appendListener(fn) {\n    var isActive = true;\n\n    function listener() {\n      if (isActive) fn.apply(void 0, arguments);\n    }\n\n    listeners.push(listener);\n    return function () {\n      isActive = false;\n      listeners = listeners.filter(function (item) {\n        return item !== listener;\n      });\n    };\n  }\n\n  function notifyListeners() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    listeners.forEach(function (listener) {\n      return listener.apply(void 0, args);\n    });\n  }\n\n  return {\n    setPrompt: setPrompt,\n    confirmTransitionTo: confirmTransitionTo,\n    appendListener: appendListener,\n    notifyListeners: notifyListeners\n  };\n}\n\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\nfunction getConfirmation(message, callback) {\n  callback(window.confirm(message)); // eslint-disable-line no-alert\n}\n/**\n * Returns true if the HTML5 history API is supported. Taken from Modernizr.\n *\n * https://github.com/Modernizr/Modernizr/blob/master/LICENSE\n * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js\n * changed to avoid false negatives for Windows Phones: https://github.com/reactjs/react-router/issues/586\n */\n\nfunction supportsHistory() {\n  var ua = window.navigator.userAgent;\n  if ((ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) && ua.indexOf('Mobile Safari') !== -1 && ua.indexOf('Chrome') === -1 && ua.indexOf('Windows Phone') === -1) return false;\n  return window.history && 'pushState' in window.history;\n}\n/**\n * Returns true if browser fires popstate on hash change.\n * IE10 and IE11 do not.\n */\n\nfunction supportsPopStateOnHashChange() {\n  return window.navigator.userAgent.indexOf('Trident') === -1;\n}\n/**\n * Returns false if using go(n) with hash history causes a full page reload.\n */\n\nfunction supportsGoWithoutReloadUsingHash() {\n  return window.navigator.userAgent.indexOf('Firefox') === -1;\n}\n/**\n * Returns true if a given popstate event is an extraneous WebKit event.\n * Accounts for the fact that Chrome on iOS fires real popstate events\n * containing undefined state when pressing the back button.\n */\n\nfunction isExtraneousPopstateEvent(event) {\n  return event.state === undefined && navigator.userAgent.indexOf('CriOS') === -1;\n}\n\nvar PopStateEvent = 'popstate';\nvar HashChangeEvent = 'hashchange';\n\nfunction getHistoryState() {\n  try {\n    return window.history.state || {};\n  } catch (e) {\n    // IE 11 sometimes throws when accessing window.history.state\n    // See https://github.com/ReactTraining/history/pull/289\n    return {};\n  }\n}\n/**\n * Creates a history object that uses the HTML5 history API including\n * pushState, replaceState, and the popstate event.\n */\n\n\nfunction createBrowserHistory(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  !canUseDOM ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Browser history needs a DOM') : invariant(false) : void 0;\n  var globalHistory = window.history;\n  var canUseHistory = supportsHistory();\n  var needsHashChangeListener = !supportsPopStateOnHashChange();\n  var _props = props,\n      _props$forceRefresh = _props.forceRefresh,\n      forceRefresh = _props$forceRefresh === void 0 ? false : _props$forceRefresh,\n      _props$getUserConfirm = _props.getUserConfirmation,\n      getUserConfirmation = _props$getUserConfirm === void 0 ? getConfirmation : _props$getUserConfirm,\n      _props$keyLength = _props.keyLength,\n      keyLength = _props$keyLength === void 0 ? 6 : _props$keyLength;\n  var basename = props.basename ? stripTrailingSlash(addLeadingSlash(props.basename)) : '';\n\n  function getDOMLocation(historyState) {\n    var _ref = historyState || {},\n        key = _ref.key,\n        state = _ref.state;\n\n    var _window$location = window.location,\n        pathname = _window$location.pathname,\n        search = _window$location.search,\n        hash = _window$location.hash;\n    var path = pathname + search + hash;\n    process.env.NODE_ENV !== \"production\" ? warning(!basename || hasBasename(path, basename), 'You are attempting to use a basename on a page whose URL path does not begin ' + 'with the basename. Expected path \"' + path + '\" to begin with \"' + basename + '\".') : void 0;\n    if (basename) path = stripBasename(path, basename);\n    return createLocation(path, state, key);\n  }\n\n  function createKey() {\n    return Math.random().toString(36).substr(2, keyLength);\n  }\n\n  var transitionManager = createTransitionManager();\n\n  function setState(nextState) {\n    _extends(history, nextState);\n\n    history.length = globalHistory.length;\n    transitionManager.notifyListeners(history.location, history.action);\n  }\n\n  function handlePopState(event) {\n    // Ignore extraneous popstate events in WebKit.\n    if (isExtraneousPopstateEvent(event)) return;\n    handlePop(getDOMLocation(event.state));\n  }\n\n  function handleHashChange() {\n    handlePop(getDOMLocation(getHistoryState()));\n  }\n\n  var forceNextPop = false;\n\n  function handlePop(location) {\n    if (forceNextPop) {\n      forceNextPop = false;\n      setState();\n    } else {\n      var action = 'POP';\n      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n        if (ok) {\n          setState({\n            action: action,\n            location: location\n          });\n        } else {\n          revertPop(location);\n        }\n      });\n    }\n  }\n\n  function revertPop(fromLocation) {\n    var toLocation = history.location; // TODO: We could probably make this more reliable by\n    // keeping a list of keys we've seen in sessionStorage.\n    // Instead, we just default to 0 for keys we don't know.\n\n    var toIndex = allKeys.indexOf(toLocation.key);\n    if (toIndex === -1) toIndex = 0;\n    var fromIndex = allKeys.indexOf(fromLocation.key);\n    if (fromIndex === -1) fromIndex = 0;\n    var delta = toIndex - fromIndex;\n\n    if (delta) {\n      forceNextPop = true;\n      go(delta);\n    }\n  }\n\n  var initialLocation = getDOMLocation(getHistoryState());\n  var allKeys = [initialLocation.key]; // Public interface\n\n  function createHref(location) {\n    return basename + createPath(location);\n  }\n\n  function push(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to push when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;\n    var action = 'PUSH';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var href = createHref(location);\n      var key = location.key,\n          state = location.state;\n\n      if (canUseHistory) {\n        globalHistory.pushState({\n          key: key,\n          state: state\n        }, null, href);\n\n        if (forceRefresh) {\n          window.location.href = href;\n        } else {\n          var prevIndex = allKeys.indexOf(history.location.key);\n          var nextKeys = allKeys.slice(0, prevIndex + 1);\n          nextKeys.push(location.key);\n          allKeys = nextKeys;\n          setState({\n            action: action,\n            location: location\n          });\n        }\n      } else {\n        process.env.NODE_ENV !== \"production\" ? warning(state === undefined, 'Browser history cannot push state in browsers that do not support HTML5 history') : void 0;\n        window.location.href = href;\n      }\n    });\n  }\n\n  function replace(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to replace when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;\n    var action = 'REPLACE';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var href = createHref(location);\n      var key = location.key,\n          state = location.state;\n\n      if (canUseHistory) {\n        globalHistory.replaceState({\n          key: key,\n          state: state\n        }, null, href);\n\n        if (forceRefresh) {\n          window.location.replace(href);\n        } else {\n          var prevIndex = allKeys.indexOf(history.location.key);\n          if (prevIndex !== -1) allKeys[prevIndex] = location.key;\n          setState({\n            action: action,\n            location: location\n          });\n        }\n      } else {\n        process.env.NODE_ENV !== \"production\" ? warning(state === undefined, 'Browser history cannot replace state in browsers that do not support HTML5 history') : void 0;\n        window.location.replace(href);\n      }\n    });\n  }\n\n  function go(n) {\n    globalHistory.go(n);\n  }\n\n  function goBack() {\n    go(-1);\n  }\n\n  function goForward() {\n    go(1);\n  }\n\n  var listenerCount = 0;\n\n  function checkDOMListeners(delta) {\n    listenerCount += delta;\n\n    if (listenerCount === 1 && delta === 1) {\n      window.addEventListener(PopStateEvent, handlePopState);\n      if (needsHashChangeListener) window.addEventListener(HashChangeEvent, handleHashChange);\n    } else if (listenerCount === 0) {\n      window.removeEventListener(PopStateEvent, handlePopState);\n      if (needsHashChangeListener) window.removeEventListener(HashChangeEvent, handleHashChange);\n    }\n  }\n\n  var isBlocked = false;\n\n  function block(prompt) {\n    if (prompt === void 0) {\n      prompt = false;\n    }\n\n    var unblock = transitionManager.setPrompt(prompt);\n\n    if (!isBlocked) {\n      checkDOMListeners(1);\n      isBlocked = true;\n    }\n\n    return function () {\n      if (isBlocked) {\n        isBlocked = false;\n        checkDOMListeners(-1);\n      }\n\n      return unblock();\n    };\n  }\n\n  function listen(listener) {\n    var unlisten = transitionManager.appendListener(listener);\n    checkDOMListeners(1);\n    return function () {\n      checkDOMListeners(-1);\n      unlisten();\n    };\n  }\n\n  var history = {\n    length: globalHistory.length,\n    action: 'POP',\n    location: initialLocation,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    block: block,\n    listen: listen\n  };\n  return history;\n}\n\nvar HashChangeEvent$1 = 'hashchange';\nvar HashPathCoders = {\n  hashbang: {\n    encodePath: function encodePath(path) {\n      return path.charAt(0) === '!' ? path : '!/' + stripLeadingSlash(path);\n    },\n    decodePath: function decodePath(path) {\n      return path.charAt(0) === '!' ? path.substr(1) : path;\n    }\n  },\n  noslash: {\n    encodePath: stripLeadingSlash,\n    decodePath: addLeadingSlash\n  },\n  slash: {\n    encodePath: addLeadingSlash,\n    decodePath: addLeadingSlash\n  }\n};\n\nfunction stripHash(url) {\n  var hashIndex = url.indexOf('#');\n  return hashIndex === -1 ? url : url.slice(0, hashIndex);\n}\n\nfunction getHashPath() {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  var href = window.location.href;\n  var hashIndex = href.indexOf('#');\n  return hashIndex === -1 ? '' : href.substring(hashIndex + 1);\n}\n\nfunction pushHashPath(path) {\n  window.location.hash = path;\n}\n\nfunction replaceHashPath(path) {\n  window.location.replace(stripHash(window.location.href) + '#' + path);\n}\n\nfunction createHashHistory(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  !canUseDOM ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Hash history needs a DOM') : invariant(false) : void 0;\n  var globalHistory = window.history;\n  var canGoWithoutReload = supportsGoWithoutReloadUsingHash();\n  var _props = props,\n      _props$getUserConfirm = _props.getUserConfirmation,\n      getUserConfirmation = _props$getUserConfirm === void 0 ? getConfirmation : _props$getUserConfirm,\n      _props$hashType = _props.hashType,\n      hashType = _props$hashType === void 0 ? 'slash' : _props$hashType;\n  var basename = props.basename ? stripTrailingSlash(addLeadingSlash(props.basename)) : '';\n  var _HashPathCoders$hashT = HashPathCoders[hashType],\n      encodePath = _HashPathCoders$hashT.encodePath,\n      decodePath = _HashPathCoders$hashT.decodePath;\n\n  function getDOMLocation() {\n    var path = decodePath(getHashPath());\n    process.env.NODE_ENV !== \"production\" ? warning(!basename || hasBasename(path, basename), 'You are attempting to use a basename on a page whose URL path does not begin ' + 'with the basename. Expected path \"' + path + '\" to begin with \"' + basename + '\".') : void 0;\n    if (basename) path = stripBasename(path, basename);\n    return createLocation(path);\n  }\n\n  var transitionManager = createTransitionManager();\n\n  function setState(nextState) {\n    _extends(history, nextState);\n\n    history.length = globalHistory.length;\n    transitionManager.notifyListeners(history.location, history.action);\n  }\n\n  var forceNextPop = false;\n  var ignorePath = null;\n\n  function locationsAreEqual$$1(a, b) {\n    return a.pathname === b.pathname && a.search === b.search && a.hash === b.hash;\n  }\n\n  function handleHashChange() {\n    var path = getHashPath();\n    var encodedPath = encodePath(path);\n\n    if (path !== encodedPath) {\n      // Ensure we always have a properly-encoded hash.\n      replaceHashPath(encodedPath);\n    } else {\n      var location = getDOMLocation();\n      var prevLocation = history.location;\n      if (!forceNextPop && locationsAreEqual$$1(prevLocation, location)) return; // A hashchange doesn't always == location change.\n\n      if (ignorePath === createPath(location)) return; // Ignore this change; we already setState in push/replace.\n\n      ignorePath = null;\n      handlePop(location);\n    }\n  }\n\n  function handlePop(location) {\n    if (forceNextPop) {\n      forceNextPop = false;\n      setState();\n    } else {\n      var action = 'POP';\n      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n        if (ok) {\n          setState({\n            action: action,\n            location: location\n          });\n        } else {\n          revertPop(location);\n        }\n      });\n    }\n  }\n\n  function revertPop(fromLocation) {\n    var toLocation = history.location; // TODO: We could probably make this more reliable by\n    // keeping a list of paths we've seen in sessionStorage.\n    // Instead, we just default to 0 for paths we don't know.\n\n    var toIndex = allPaths.lastIndexOf(createPath(toLocation));\n    if (toIndex === -1) toIndex = 0;\n    var fromIndex = allPaths.lastIndexOf(createPath(fromLocation));\n    if (fromIndex === -1) fromIndex = 0;\n    var delta = toIndex - fromIndex;\n\n    if (delta) {\n      forceNextPop = true;\n      go(delta);\n    }\n  } // Ensure the hash is encoded properly before doing anything else.\n\n\n  var path = getHashPath();\n  var encodedPath = encodePath(path);\n  if (path !== encodedPath) replaceHashPath(encodedPath);\n  var initialLocation = getDOMLocation();\n  var allPaths = [createPath(initialLocation)]; // Public interface\n\n  function createHref(location) {\n    var baseTag = document.querySelector('base');\n    var href = '';\n\n    if (baseTag && baseTag.getAttribute('href')) {\n      href = stripHash(window.location.href);\n    }\n\n    return href + '#' + encodePath(basename + createPath(location));\n  }\n\n  function push(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(state === undefined, 'Hash history cannot push state; it is ignored') : void 0;\n    var action = 'PUSH';\n    var location = createLocation(path, undefined, undefined, history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var path = createPath(location);\n      var encodedPath = encodePath(basename + path);\n      var hashChanged = getHashPath() !== encodedPath;\n\n      if (hashChanged) {\n        // We cannot tell if a hashchange was caused by a PUSH, so we'd\n        // rather setState here and ignore the hashchange. The caveat here\n        // is that other hash histories in the page will consider it a POP.\n        ignorePath = path;\n        pushHashPath(encodedPath);\n        var prevIndex = allPaths.lastIndexOf(createPath(history.location));\n        var nextPaths = allPaths.slice(0, prevIndex + 1);\n        nextPaths.push(path);\n        allPaths = nextPaths;\n        setState({\n          action: action,\n          location: location\n        });\n      } else {\n        process.env.NODE_ENV !== \"production\" ? warning(false, 'Hash history cannot PUSH the same path; a new entry will not be added to the history stack') : void 0;\n        setState();\n      }\n    });\n  }\n\n  function replace(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(state === undefined, 'Hash history cannot replace state; it is ignored') : void 0;\n    var action = 'REPLACE';\n    var location = createLocation(path, undefined, undefined, history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var path = createPath(location);\n      var encodedPath = encodePath(basename + path);\n      var hashChanged = getHashPath() !== encodedPath;\n\n      if (hashChanged) {\n        // We cannot tell if a hashchange was caused by a REPLACE, so we'd\n        // rather setState here and ignore the hashchange. The caveat here\n        // is that other hash histories in the page will consider it a POP.\n        ignorePath = path;\n        replaceHashPath(encodedPath);\n      }\n\n      var prevIndex = allPaths.indexOf(createPath(history.location));\n      if (prevIndex !== -1) allPaths[prevIndex] = path;\n      setState({\n        action: action,\n        location: location\n      });\n    });\n  }\n\n  function go(n) {\n    process.env.NODE_ENV !== \"production\" ? warning(canGoWithoutReload, 'Hash history go(n) causes a full page reload in this browser') : void 0;\n    globalHistory.go(n);\n  }\n\n  function goBack() {\n    go(-1);\n  }\n\n  function goForward() {\n    go(1);\n  }\n\n  var listenerCount = 0;\n\n  function checkDOMListeners(delta) {\n    listenerCount += delta;\n\n    if (listenerCount === 1 && delta === 1) {\n      window.addEventListener(HashChangeEvent$1, handleHashChange);\n    } else if (listenerCount === 0) {\n      window.removeEventListener(HashChangeEvent$1, handleHashChange);\n    }\n  }\n\n  var isBlocked = false;\n\n  function block(prompt) {\n    if (prompt === void 0) {\n      prompt = false;\n    }\n\n    var unblock = transitionManager.setPrompt(prompt);\n\n    if (!isBlocked) {\n      checkDOMListeners(1);\n      isBlocked = true;\n    }\n\n    return function () {\n      if (isBlocked) {\n        isBlocked = false;\n        checkDOMListeners(-1);\n      }\n\n      return unblock();\n    };\n  }\n\n  function listen(listener) {\n    var unlisten = transitionManager.appendListener(listener);\n    checkDOMListeners(1);\n    return function () {\n      checkDOMListeners(-1);\n      unlisten();\n    };\n  }\n\n  var history = {\n    length: globalHistory.length,\n    action: 'POP',\n    location: initialLocation,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    block: block,\n    listen: listen\n  };\n  return history;\n}\n\nfunction clamp(n, lowerBound, upperBound) {\n  return Math.min(Math.max(n, lowerBound), upperBound);\n}\n/**\n * Creates a history object that stores locations in memory.\n */\n\n\nfunction createMemoryHistory(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var _props = props,\n      getUserConfirmation = _props.getUserConfirmation,\n      _props$initialEntries = _props.initialEntries,\n      initialEntries = _props$initialEntries === void 0 ? ['/'] : _props$initialEntries,\n      _props$initialIndex = _props.initialIndex,\n      initialIndex = _props$initialIndex === void 0 ? 0 : _props$initialIndex,\n      _props$keyLength = _props.keyLength,\n      keyLength = _props$keyLength === void 0 ? 6 : _props$keyLength;\n  var transitionManager = createTransitionManager();\n\n  function setState(nextState) {\n    _extends(history, nextState);\n\n    history.length = history.entries.length;\n    transitionManager.notifyListeners(history.location, history.action);\n  }\n\n  function createKey() {\n    return Math.random().toString(36).substr(2, keyLength);\n  }\n\n  var index = clamp(initialIndex, 0, initialEntries.length - 1);\n  var entries = initialEntries.map(function (entry) {\n    return typeof entry === 'string' ? createLocation(entry, undefined, createKey()) : createLocation(entry, undefined, entry.key || createKey());\n  }); // Public interface\n\n  var createHref = createPath;\n\n  function push(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to push when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;\n    var action = 'PUSH';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var prevIndex = history.index;\n      var nextIndex = prevIndex + 1;\n      var nextEntries = history.entries.slice(0);\n\n      if (nextEntries.length > nextIndex) {\n        nextEntries.splice(nextIndex, nextEntries.length - nextIndex, location);\n      } else {\n        nextEntries.push(location);\n      }\n\n      setState({\n        action: action,\n        location: location,\n        index: nextIndex,\n        entries: nextEntries\n      });\n    });\n  }\n\n  function replace(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to replace when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;\n    var action = 'REPLACE';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      history.entries[history.index] = location;\n      setState({\n        action: action,\n        location: location\n      });\n    });\n  }\n\n  function go(n) {\n    var nextIndex = clamp(history.index + n, 0, history.entries.length - 1);\n    var action = 'POP';\n    var location = history.entries[nextIndex];\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (ok) {\n        setState({\n          action: action,\n          location: location,\n          index: nextIndex\n        });\n      } else {\n        // Mimic the behavior of DOM histories by\n        // causing a render after a cancelled POP.\n        setState();\n      }\n    });\n  }\n\n  function goBack() {\n    go(-1);\n  }\n\n  function goForward() {\n    go(1);\n  }\n\n  function canGo(n) {\n    var nextIndex = history.index + n;\n    return nextIndex >= 0 && nextIndex < history.entries.length;\n  }\n\n  function block(prompt) {\n    if (prompt === void 0) {\n      prompt = false;\n    }\n\n    return transitionManager.setPrompt(prompt);\n  }\n\n  function listen(listener) {\n    return transitionManager.appendListener(listener);\n  }\n\n  var history = {\n    length: entries.length,\n    action: 'POP',\n    location: entries[index],\n    index: index,\n    entries: entries,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    canGo: canGo,\n    block: block,\n    listen: listen\n  };\n  return history;\n}\n\nexport { createBrowserHistory, createHashHistory, createMemoryHistory, createLocation, locationsAreEqual, parsePath, createPath };\n","import { isValidElement } from 'react';\n\nimport { Id } from '../types';\n\nexport function isNum(v: any): v is Number {\n  return typeof v === 'number' && !isNaN(v);\n}\n\nexport function isBool(v: any): v is Boolean {\n  return typeof v === 'boolean';\n}\n\nexport function isStr(v: any): v is String {\n  return typeof v === 'string';\n}\n\nexport function isFn(v: any): v is Function {\n  return typeof v === 'function';\n}\n\nexport function parseClassName(v: any) {\n  return isStr(v) || isFn(v) ? v : null;\n}\n\nexport function isToastIdValid(toastId?: Id) {\n  return toastId === 0 || toastId;\n}\n\nexport function getAutoCloseDelay(\n  toastAutoClose?: false | number,\n  containerAutoClose?: false | number\n) {\n  return toastAutoClose === false ||\n    (isNum(toastAutoClose) && toastAutoClose > 0)\n    ? toastAutoClose\n    : containerAutoClose;\n}\n\nexport const canUseDom = !!(\n  typeof window !== 'undefined' &&\n  window.document &&\n  window.document.createElement\n);\n\nexport function canBeRendered<T>(content: T): boolean {\n  return (\n    isValidElement(content) || isStr(content) || isFn(content) || isNum(content)\n  );\n}\n","import { ToastPosition, TypeOptions } from '../types';\n\ntype KeyOfPosition =\n  | 'TOP_LEFT'\n  | 'TOP_RIGHT'\n  | 'TOP_CENTER'\n  | 'BOTTOM_LEFT'\n  | 'BOTTOM_RIGHT'\n  | 'BOTTOM_CENTER';\n\ntype KeyOfType = 'INFO' | 'SUCCESS' | 'WARNING' | 'ERROR' | 'DEFAULT';\n\nexport const POSITION: { [key in KeyOfPosition]: ToastPosition } = {\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n  TOP_CENTER: 'top-center',\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  BOTTOM_CENTER: 'bottom-center'\n};\n\nexport const TYPE: { [key in KeyOfType]: TypeOptions } = {\n  INFO: 'info',\n  SUCCESS: 'success',\n  WARNING: 'warning',\n  ERROR: 'error',\n  DEFAULT: 'default'\n};\n\nexport const enum Default {\n  COLLAPSE_DURATION = 300,\n  DEBOUNCE_DURATION = 50,\n  CSS_NAMESPACE = 'Toastify',\n  DRAGGABLE_PERCENT = 80\n}\n\nexport const enum Direction {\n  X = 'x',\n  Y = 'y'\n}\n","import React, { useEffect, useLayoutEffect, useRef } from 'react';\nimport { ToastTransitionProps } from '../types';\n\nimport { collapseToast } from './collapseToast';\nimport { Default } from './constant';\n\nexport interface CSSTransitionProps {\n  /**\n   * Css class to apply when toast enter\n   */\n  enter: string;\n\n  /**\n   * Css class to apply when toast leave\n   */\n  exit: string;\n\n  /**\n   * Append current toast position to the classname.\n   * If multiple classes are provided, only the last one will get the position\n   * For instance `myclass--top-center`...\n   * `Default: false`\n   */\n  appendPosition?: boolean;\n\n  /**\n   * Collapse toast smoothly when exit animation end\n   * `Default: true`\n   */\n  collapse?: boolean;\n\n  /**\n   * Collapse transition duration\n   * `Default: 300`\n   */\n  collapseDuration?: number;\n}\n\nconst enum AnimationStep {\n  Enter,\n  Exit\n}\n\n/**\n * Css animation that just work.\n * You could use animate.css for instance\n *\n *\n * ```\n * cssTransition({\n *   enter: \"animate__animated animate__bounceIn\",\n *   exit: \"animate__animated animate__bounceOut\"\n * })\n * ```\n *\n */\nexport function cssTransition({\n  enter,\n  exit,\n  appendPosition = false,\n  collapse = true,\n  collapseDuration = Default.COLLAPSE_DURATION\n}: CSSTransitionProps) {\n  return function ToastTransition({\n    children,\n    position,\n    preventExitTransition,\n    done,\n    nodeRef,\n    isIn\n  }: ToastTransitionProps) {\n    const enterClassName = appendPosition ? `${enter}--${position}` : enter;\n    const exitClassName = appendPosition ? `${exit}--${position}` : exit;\n    const baseClassName = useRef<string>();\n    const animationStep = useRef(AnimationStep.Enter);\n\n    useLayoutEffect(() => {\n      onEnter();\n    }, []);\n\n    useEffect(() => {\n      if (!isIn) preventExitTransition ? onExited() : onExit();\n    }, [isIn]);\n\n    function onEnter() {\n      const node = nodeRef.current!;\n      baseClassName.current = node.className;\n      node.className += ` ${enterClassName}`;\n      node.addEventListener('animationend', onEntered);\n    }\n\n    function onEntered(e: AnimationEvent) {\n      if (e.target !== nodeRef.current) return;\n\n      const node = nodeRef.current!;\n      node.removeEventListener('animationend', onEntered);\n      if (animationStep.current === AnimationStep.Enter) {\n        node.className = baseClassName.current!;\n      }\n    }\n\n    function onExit() {\n      animationStep.current = AnimationStep.Exit;\n      const node = nodeRef.current!;\n\n      node.className += ` ${exitClassName}`;\n      node.addEventListener('animationend', onExited);\n    }\n\n    function onExited() {\n      const node = nodeRef.current!;\n\n      node.removeEventListener('animationend', onExited);\n      collapse ? collapseToast(node, done, collapseDuration) : done();\n    }\n\n    return <>{children}</>;\n  };\n}\n","import { Default } from './constant';\n\n/**\n * Used to collapse toast after exit animation\n */\nexport function collapseToast(\n  node: HTMLElement,\n  done: () => void,\n  duration = Default.COLLAPSE_DURATION\n) {\n  const { scrollHeight, style } = node;\n\n  requestAnimationFrame(() => {\n    style.minHeight = 'initial';\n    style.height = scrollHeight + 'px';\n    style.transition = `all ${duration}ms`;\n\n    requestAnimationFrame(() => {\n      style.height = '0';\n      style.padding = '0';\n      style.margin = '0';\n      setTimeout(done, duration as number);\n    });\n  });\n}\n","import {\n  Id,\n  ToastContent,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps\n} from '../types';\nimport { ContainerInstance } from '../hooks';\n\nexport const enum Event {\n  Show,\n  Clear,\n  DidMount,\n  WillUnmount,\n  Change,\n  ClearWaitingQueue\n}\n\ntype OnShowCallback = (\n  content: ToastContent,\n  options: NotValidatedToastProps\n) => void;\ntype OnClearCallback = (id?: Id) => void;\ntype OnClearWaitingQueue = (params: ClearWaitingQueueParams) => void;\ntype OnDidMountCallback = (containerInstance: ContainerInstance) => void;\ntype OnWillUnmountCallback = OnDidMountCallback;\nexport type OnChangeCallback = (\n  toast: number,\n  containerId?: number | string\n) => void;\ntype Callback =\n  | OnShowCallback\n  | OnClearCallback\n  | OnClearWaitingQueue\n  | OnDidMountCallback\n  | OnWillUnmountCallback\n  | OnChangeCallback;\ntype TimeoutId = ReturnType<typeof setTimeout>;\n\nexport interface EventManager {\n  list: Map<Event, Callback[]>;\n  emitQueue: Map<Event, TimeoutId[]>;\n  on(event: Event.Show, callback: OnShowCallback): EventManager;\n  on(event: Event.Clear, callback: OnClearCallback): EventManager;\n  on(\n    event: Event.ClearWaitingQueue,\n    callback: OnClearWaitingQueue\n  ): EventManager;\n  on(event: Event.DidMount, callback: OnDidMountCallback): EventManager;\n  on(event: Event.WillUnmount, callback: OnWillUnmountCallback): EventManager;\n  on(event: Event.Change, callback: OnChangeCallback): EventManager;\n  off(event: Event, callback?: Callback): EventManager;\n  cancelEmit(event: Event): EventManager;\n  emit(\n    event: Event.Show,\n    content: React.ReactNode,\n    options: NotValidatedToastProps\n  ): void;\n  emit(event: Event.Clear, id?: string | number): void;\n  emit(event: Event.ClearWaitingQueue, params: ClearWaitingQueueParams): void;\n  emit(event: Event.DidMount, containerInstance: ContainerInstance): void;\n  emit(event: Event.WillUnmount, containerInstance: ContainerInstance): void;\n  emit(event: Event.Change, toast: number, containerId?: number | string): void;\n}\n\nexport const eventManager: EventManager = {\n  list: new Map(),\n  emitQueue: new Map(),\n\n  on(event: Event, callback: Callback) {\n    this.list.has(event) || this.list.set(event, []);\n    this.list.get(event)!.push(callback);\n    return this;\n  },\n\n  off(event, callback) {\n    if (callback) {\n      const cb = this.list.get(event)!.filter(cb => cb !== callback);\n      this.list.set(event, cb);\n      return this;\n    }\n    this.list.delete(event);\n    return this;\n  },\n\n  cancelEmit(event) {\n    const timers = this.emitQueue.get(event);\n    if (timers) {\n      timers.forEach(clearTimeout);\n      this.emitQueue.delete(event);\n    }\n\n    return this;\n  },\n\n  /**\n   * Enqueue the event at the end of the call stack\n   * Doing so let the user call toast as follow:\n   * toast('1')\n   * toast('2')\n   * toast('3')\n   * Without setTimemout the code above will not work\n   */\n  emit(event: Event, ...args: any[]) {\n    this.list.has(event) &&\n      this.list.get(event)!.forEach((callback: Callback) => {\n        const timer: TimeoutId = setTimeout(() => {\n          // @ts-ignore\n          callback(...args);\n        }, 0);\n\n        this.emitQueue.has(event) || this.emitQueue.set(event, []);\n        this.emitQueue.get(event)!.push(timer);\n      });\n  }\n};\n","import { useRef, useEffect } from 'react';\n\n/**\n * `useKeeper` is a helper around `useRef`.\n *\n * You don't need to access the `.current`property to get the value\n * If refresh is set to true. The ref will be updated every render\n */\nexport function useKeeper<T>(arg: T, refresh = false) {\n  const ref = useRef<T>(arg);\n\n  useEffect(() => {\n    if (refresh) ref.current = arg;\n  });\n\n  return ref.current;\n}\n","import { Id } from '../types';\n\nimport { isToastIdValid } from '../utils';\n\nexport const enum ActionType {\n  ADD,\n  REMOVE\n}\nexport type State = Array<Id>;\nexport type Action =\n  | { type: ActionType.ADD; toastId: Id; staleId?: Id }\n  | { type: ActionType.REMOVE; toastId?: Id };\n\nexport function reducer(state: State, action: Action) {\n  switch (action.type) {\n    case ActionType.ADD:\n      return [...state, action.toastId].filter(id => id !== action.staleId);\n    case ActionType.REMOVE:\n      return isToastIdValid(action.toastId)\n        ? state.filter(id => id !== action.toastId)\n        : [];\n  }\n}\n","import {\n  useEffect,\n  useRef,\n  useReducer,\n  cloneElement,\n  isValidElement\n} from 'react';\nimport {\n  parseClassName,\n  canBeRendered,\n  isBool,\n  isFn,\n  isNum,\n  isStr,\n  isToastIdValid,\n  getAutoCloseDelay,\n  Direction,\n  Default\n} from '../utils';\nimport { eventManager, Event } from '../core/eventManager';\n\nimport {\n  Id,\n  ToastContainerProps,\n  ToastProps,\n  ToastContent,\n  Toast,\n  ToastPosition,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps,\n  ToastTransition\n} from '../types';\nimport { useKeeper } from './useKeeper';\nimport { ActionType, reducer } from './toastContainerReducer';\n\ntype CollectionItem = Record<Id, Toast>;\ntype ToastToRender = Partial<Record<ToastPosition, Toast[]>>;\n\ninterface QueuedToast {\n  toastContent: ToastContent;\n  toastProps: ToastProps;\n  staleId?: Id;\n}\n\nexport interface ContainerInstance {\n  toastKey: number;\n  displayedToast: number;\n  props: ToastContainerProps;\n  containerId?: Id | null;\n  isToastActive: (toastId: Id) => boolean;\n  getToast: (id: Id) => Toast | null;\n}\n\nexport function useToastContainer(props: ToastContainerProps) {\n  const [, forceUpdate] = useReducer(x => x + 1, 0);\n  const [toast, dispatch] = useReducer(reducer, []);\n  const containerRef = useRef(null);\n  let toastCount = useKeeper(0);\n  let queue = useKeeper<QueuedToast[]>([]);\n  const collection = useKeeper<CollectionItem>({});\n  const instance = useKeeper<ContainerInstance>({\n    toastKey: 1,\n    displayedToast: 0,\n    props,\n    containerId: null,\n    isToastActive: isToastActive,\n    getToast: id => collection[id] || null\n  });\n\n  useEffect(() => {\n    instance.containerId = props.containerId;\n    eventManager\n      .cancelEmit(Event.WillUnmount)\n      .on(Event.Show, buildToast)\n      .on(Event.Clear, toastId => containerRef.current && removeToast(toastId))\n      .on(Event.ClearWaitingQueue, clearWaitingQueue)\n      .emit(Event.DidMount, instance);\n\n    return () => eventManager.emit(Event.WillUnmount, instance);\n  }, []);\n\n  useEffect(() => {\n    instance.isToastActive = isToastActive;\n    instance.displayedToast = toast.length;\n    eventManager.emit(Event.Change, toast.length, props.containerId);\n  }, [toast]);\n\n  useEffect(() => {\n    instance.props = props;\n  });\n\n  function isToastActive(id: Id) {\n    return toast.indexOf(id) !== -1;\n  }\n\n  function clearWaitingQueue({ containerId }: ClearWaitingQueueParams) {\n    const { limit } = instance.props;\n    if (limit && (!containerId || instance.containerId === containerId)) {\n      toastCount -= queue.length;\n      queue = [];\n    }\n  }\n\n  function removeToast(toastId?: Id) {\n    dispatch({ type: ActionType.REMOVE, toastId });\n  }\n\n  function dequeueToast() {\n    const { toastContent, toastProps, staleId } = queue.shift() as QueuedToast;\n    appendToast(toastContent, toastProps, staleId);\n  }\n\n  /**\n   * check if a container is attached to the dom\n   * check for multi-container, build only if associated\n   * check for duplicate toastId if no update\n   */\n  function isNotValid({\n    containerId,\n    toastId,\n    updateId\n  }: NotValidatedToastProps) {\n    return !containerRef.current ||\n      (instance.props.enableMultiContainer &&\n        containerId !== instance.props.containerId) ||\n      (collection[toastId] && updateId == null)\n      ? true\n      : false;\n  }\n\n  // this function and all the function called inside needs to rely on ref(`useKeeper`)\n  function buildToast(\n    content: ToastContent,\n    { delay, staleId, ...options }: NotValidatedToastProps\n  ) {\n    if (!canBeRendered(content) || isNotValid(options)) return;\n\n    const { toastId, updateId, data } = options;\n    const { props } = instance;\n    const closeToast = () => removeToast(toastId);\n    const isNotAnUpdate = options.updateId == null;\n\n    if (isNotAnUpdate) toastCount++;\n\n    const toastProps: ToastProps = {\n      toastId,\n      updateId,\n      isLoading: options.isLoading,\n      theme: options.theme || props.theme!,\n      icon: options.icon ?? props.icon,\n      isIn: false,\n      key: options.key || instance.toastKey++,\n      type: options.type!,\n      closeToast: closeToast,\n      closeButton: options.closeButton,\n      rtl: props.rtl,\n      position: options.position || (props.position as ToastPosition),\n      transition: options.transition || (props.transition as ToastTransition),\n      className: parseClassName(options.className || props.toastClassName),\n      bodyClassName: parseClassName(\n        options.bodyClassName || props.bodyClassName\n      ),\n      style: options.style || props.toastStyle,\n      bodyStyle: options.bodyStyle || props.bodyStyle,\n      onClick: options.onClick || props.onClick,\n      pauseOnHover: isBool(options.pauseOnHover)\n        ? options.pauseOnHover\n        : props.pauseOnHover,\n      pauseOnFocusLoss: isBool(options.pauseOnFocusLoss)\n        ? options.pauseOnFocusLoss\n        : props.pauseOnFocusLoss,\n      draggable: isBool(options.draggable)\n        ? options.draggable\n        : props.draggable,\n      draggablePercent: isNum(options.draggablePercent)\n        ? options.draggablePercent\n        : (props.draggablePercent as number),\n      draggableDirection:\n        options.draggableDirection || props.draggableDirection,\n      closeOnClick: isBool(options.closeOnClick)\n        ? options.closeOnClick\n        : props.closeOnClick,\n      progressClassName: parseClassName(\n        options.progressClassName || props.progressClassName\n      ),\n      progressStyle: options.progressStyle || props.progressStyle,\n      autoClose: options.isLoading\n        ? false\n        : getAutoCloseDelay(options.autoClose, props.autoClose),\n      hideProgressBar: isBool(options.hideProgressBar)\n        ? options.hideProgressBar\n        : props.hideProgressBar,\n      progress: options.progress,\n      role: isStr(options.role) ? options.role : props.role,\n      deleteToast() {\n        removeFromCollection(toastId);\n      }\n    };\n\n    if (isFn(options.onOpen)) toastProps.onOpen = options.onOpen;\n    if (isFn(options.onClose)) toastProps.onClose = options.onClose;\n\n    //  tweak for vertical dragging\n    if (\n      toastProps.draggableDirection === Direction.Y &&\n      toastProps.draggablePercent === Default.DRAGGABLE_PERCENT\n    ) {\n      (toastProps.draggablePercent as number) *= 1.5;\n    }\n\n    let closeButton = props.closeButton;\n\n    if (options.closeButton === false || canBeRendered(options.closeButton)) {\n      closeButton = options.closeButton;\n    } else if (options.closeButton === true) {\n      closeButton = canBeRendered(props.closeButton) ? props.closeButton : true;\n    }\n\n    toastProps.closeButton = closeButton;\n\n    let toastContent = content;\n\n    if (isValidElement(content) && !isStr(content.type)) {\n      toastContent = cloneElement(content, {\n        closeToast,\n        toastProps,\n        data\n      });\n    } else if (isFn(content)) {\n      toastContent = content({ closeToast, toastProps, data });\n    }\n\n    // not handling limit + delay by design. Waiting for user feedback first\n    if (\n      props.limit &&\n      props.limit > 0 &&\n      toastCount > props.limit &&\n      isNotAnUpdate\n    ) {\n      queue.push({ toastContent, toastProps, staleId });\n    } else if (isNum(delay) && (delay as number) > 0) {\n      setTimeout(() => {\n        appendToast(toastContent, toastProps, staleId);\n      }, delay);\n    } else {\n      appendToast(toastContent, toastProps, staleId);\n    }\n  }\n\n  function appendToast(\n    content: ToastContent,\n    toastProps: ToastProps,\n    staleId?: Id\n  ) {\n    const { toastId } = toastProps;\n\n    if (staleId) delete collection[staleId];\n\n    collection[toastId] = {\n      content,\n      props: toastProps\n    };\n    dispatch({\n      type: ActionType.ADD,\n      toastId,\n      staleId\n    });\n  }\n\n  function removeFromCollection(toastId: Id) {\n    delete collection[toastId];\n    const queueLen = queue.length;\n    toastCount = isToastIdValid(toastId)\n      ? toastCount - 1\n      : toastCount - instance.displayedToast;\n\n    if (toastCount < 0) toastCount = 0;\n\n    if (queueLen > 0) {\n      const freeSlot = isToastIdValid(toastId) ? 1 : instance.props.limit!;\n\n      if (queueLen === 1 || freeSlot === 1) {\n        instance.displayedToast++;\n        dequeueToast();\n      } else {\n        const toDequeue = freeSlot > queueLen ? queueLen : freeSlot;\n        instance.displayedToast = toDequeue;\n\n        for (let i = 0; i < toDequeue; i++) dequeueToast();\n      }\n    } else {\n      forceUpdate();\n    }\n  }\n\n  function getToastToRender<T>(\n    cb: (position: ToastPosition, toastList: Toast[]) => T\n  ) {\n    const toastToRender: ToastToRender = {};\n    const toastList = props.newestOnTop\n      ? Object.keys(collection).reverse()\n      : Object.keys(collection);\n\n    for (let i = 0; i < toastList.length; i++) {\n      const toast = collection[toastList[i]];\n      const { position } = toast.props;\n      toastToRender[position] || (toastToRender[position] = []);\n\n      toastToRender[position]!.push(toast);\n    }\n\n    return (Object.keys(toastToRender) as Array<ToastPosition>).map(p =>\n      cb(p, toastToRender[p]!)\n    );\n  }\n\n  return {\n    getToastToRender,\n    collection,\n    containerRef,\n    isToastActive\n  };\n}\n","import {\n  useState,\n  useRef,\n  useEffect,\n  isValidElement,\n  DOMAttributes\n} from 'react';\n\nimport { isFn } from '../utils';\nimport { ToastProps } from '../types';\nimport { useKeeper } from './useKeeper';\nimport { Direction } from '../utils/constant';\n\ninterface Draggable {\n  start: number;\n  x: number;\n  y: number;\n  delta: number;\n  removalDistance: number;\n  canCloseOnClick: boolean;\n  canDrag: boolean;\n  boundingRect: DOMRect | null;\n}\n\ntype DragEvent = MouseEvent & TouchEvent;\n\nfunction getX(e: DragEvent) {\n  return e.targetTouches && e.targetTouches.length >= 1\n    ? e.targetTouches[0].clientX\n    : e.clientX;\n}\n\nfunction getY(e: DragEvent) {\n  return e.targetTouches && e.targetTouches.length >= 1\n    ? e.targetTouches[0].clientY\n    : e.clientY;\n}\n\nexport function useToast(props: ToastProps) {\n  const [isRunning, setIsRunning] = useState(true);\n  const [preventExitTransition, setPreventExitTransition] = useState(false);\n  const toastRef = useRef<HTMLDivElement>(null);\n  const drag = useKeeper<Draggable>({\n    start: 0,\n    x: 0,\n    y: 0,\n    delta: 0,\n    removalDistance: 0,\n    canCloseOnClick: true,\n    canDrag: false,\n    boundingRect: null\n  });\n  const syncProps = useKeeper(props, true);\n  const { autoClose, pauseOnHover, closeToast, onClick, closeOnClick } = props;\n\n  useEffect(() => {\n    if (isFn(props.onOpen))\n      props.onOpen(isValidElement(props.children) && props.children.props);\n\n    return () => {\n      if (isFn(syncProps.onClose))\n        syncProps.onClose(\n          isValidElement(syncProps.children) && syncProps.children.props\n        );\n    };\n  }, []);\n\n  useEffect(() => {\n    props.draggable && bindDragEvents();\n    return () => {\n      props.draggable && unbindDragEvents();\n    };\n  }, [props.draggable]);\n\n  useEffect(() => {\n    props.pauseOnFocusLoss && bindFocusEvents();\n    return () => {\n      props.pauseOnFocusLoss && unbindFocusEvents();\n    };\n  }, [props.pauseOnFocusLoss]);\n\n  function onDragStart(\n    e: React.MouseEvent<HTMLElement, MouseEvent> | React.TouchEvent<HTMLElement>\n  ) {\n    if (props.draggable) {\n      const toast = toastRef.current!;\n      drag.canCloseOnClick = true;\n      drag.canDrag = true;\n      drag.boundingRect = toast.getBoundingClientRect();\n      toast.style.transition = '';\n      drag.x = getX(e.nativeEvent as DragEvent);\n      drag.y = getY(e.nativeEvent as DragEvent);\n\n      if (props.draggableDirection === Direction.X) {\n        drag.start = drag.x;\n        drag.removalDistance =\n          toast.offsetWidth * (props.draggablePercent / 100);\n      } else {\n        drag.start = drag.y;\n        drag.removalDistance =\n          toast.offsetHeight * (props.draggablePercent / 100);\n      }\n    }\n  }\n\n  function onDragTransitionEnd() {\n    if (drag.boundingRect) {\n      const { top, bottom, left, right } = drag.boundingRect;\n\n      if (\n        props.pauseOnHover &&\n        drag.x >= left &&\n        drag.x <= right &&\n        drag.y >= top &&\n        drag.y <= bottom\n      ) {\n        pauseToast();\n      } else {\n        playToast();\n      }\n    }\n  }\n\n  function playToast() {\n    setIsRunning(true);\n  }\n\n  function pauseToast() {\n    setIsRunning(false);\n  }\n\n  function bindFocusEvents() {\n    if (!document.hasFocus()) pauseToast();\n\n    window.addEventListener('focus', playToast);\n    window.addEventListener('blur', pauseToast);\n  }\n\n  function unbindFocusEvents() {\n    window.removeEventListener('focus', playToast);\n    window.removeEventListener('blur', pauseToast);\n  }\n\n  function bindDragEvents() {\n    document.addEventListener('mousemove', onDragMove);\n    document.addEventListener('mouseup', onDragEnd);\n\n    document.addEventListener('touchmove', onDragMove);\n    document.addEventListener('touchend', onDragEnd);\n  }\n\n  function unbindDragEvents() {\n    document.removeEventListener('mousemove', onDragMove);\n    document.removeEventListener('mouseup', onDragEnd);\n\n    document.removeEventListener('touchmove', onDragMove);\n    document.removeEventListener('touchend', onDragEnd);\n  }\n\n  function onDragMove(e: MouseEvent | TouchEvent) {\n    if (drag.canDrag) {\n      e.preventDefault();\n\n      const toast = toastRef.current!;\n      if (isRunning) pauseToast();\n\n      drag.x = getX(e as DragEvent);\n      drag.y = getY(e as DragEvent);\n\n      if (props.draggableDirection === Direction.X) {\n        drag.delta = drag.x - drag.start;\n      } else {\n        drag.delta = drag.y - drag.start;\n      }\n\n      // prevent false positif during a toast click\n      if (drag.start !== drag.x) drag.canCloseOnClick = false;\n\n      toast.style.transform = `translate${props.draggableDirection}(${drag.delta}px)`;\n      toast.style.opacity = `${1 -\n        Math.abs(drag.delta / drag.removalDistance)}`;\n    }\n  }\n\n  function onDragEnd() {\n    const toast = toastRef.current!;\n    if (drag.canDrag) {\n      drag.canDrag = false;\n\n      if (Math.abs(drag.delta) > drag.removalDistance) {\n        setPreventExitTransition(true);\n        props.closeToast();\n        return;\n      }\n\n      toast.style.transition = 'transform 0.2s, opacity 0.2s';\n      toast.style.transform = `translate${props.draggableDirection}(0)`;\n      toast.style.opacity = '1';\n    }\n  }\n\n  const eventHandlers: DOMAttributes<HTMLElement> = {\n    onMouseDown: onDragStart,\n    onTouchStart: onDragStart,\n    onMouseUp: onDragTransitionEnd,\n    onTouchEnd: onDragTransitionEnd\n  };\n\n  if (autoClose && pauseOnHover) {\n    eventHandlers.onMouseEnter = pauseToast;\n    eventHandlers.onMouseLeave = playToast;\n  }\n\n  // prevent toast from closing when user drags the toast\n  if (closeOnClick) {\n    eventHandlers.onClick = (e: React.MouseEvent) => {\n      onClick && onClick(e);\n      drag.canCloseOnClick && closeToast();\n    };\n  }\n\n  return {\n    playToast,\n    pauseToast,\n    isRunning,\n    preventExitTransition,\n    toastRef,\n    eventHandlers\n  };\n}\n","import * as React from 'react';\nimport { Default } from '../utils';\nimport { Theme, TypeOptions } from '../types';\n\nexport interface CloseButtonProps {\n  closeToast: (e: React.MouseEvent<HTMLElement>) => void;\n  type: TypeOptions;\n  ariaLabel?: string;\n  theme: Theme;\n}\n\nexport function CloseButton({\n  closeToast,\n  theme,\n  ariaLabel = 'close'\n}: CloseButtonProps) {\n  return (\n    <button\n      className={`${Default.CSS_NAMESPACE}__close-button ${Default.CSS_NAMESPACE}__close-button--${theme}`}\n      type=\"button\"\n      onClick={e => {\n        e.stopPropagation();\n        closeToast(e);\n      }}\n      aria-label={ariaLabel}\n    >\n      <svg aria-hidden=\"true\" viewBox=\"0 0 14 16\">\n        <path\n          fillRule=\"evenodd\"\n          d=\"M7.71 8.23l3.75 3.75-1.48 1.48-3.75-3.75-3.75 3.75L1 11.98l3.75-3.75L1 4.48 2.48 3l3.75 3.75L9.98 3l1.48 1.48-3.75 3.75z\"\n        />\n      </svg>\n    </button>\n  );\n}\n","import * as React from 'react';\nimport cx from 'clsx';\n\nimport { TYPE, Default, isFn } from './../utils';\nimport { TypeOptions, ToastClassName, Theme } from '../types';\n\nexport interface ProgressBarProps {\n  /**\n   * The animation delay which determine when to close the toast\n   */\n  delay: number;\n\n  /**\n   * Whether or not the animation is running or paused\n   */\n  isRunning: boolean;\n\n  /**\n   * Func to close the current toast\n   */\n  closeToast: () => void;\n\n  /**\n   * Optional type : info, success ...\n   */\n  type: TypeOptions;\n\n  /**\n   * The theme that is currently used\n   */\n  theme: Theme;\n\n  /**\n   * Hide or not the progress bar\n   */\n  hide?: boolean;\n\n  /**\n   * Optionnal className\n   */\n  className?: ToastClassName;\n\n  /**\n   * Optionnal inline style\n   */\n  style?: React.CSSProperties;\n\n  /**\n   * Tell wether or not controlled progress bar is used\n   */\n  controlledProgress?: boolean;\n\n  /**\n   * Controlled progress value\n   */\n  progress?: number | string;\n\n  /**\n   * Support rtl content\n   */\n  rtl?: boolean;\n\n  /**\n   * Tell if the component is visible on screen or not\n   */\n  isIn?: boolean;\n}\n\nexport function ProgressBar({\n  delay,\n  isRunning,\n  closeToast,\n  type,\n  hide,\n  className,\n  style: userStyle,\n  controlledProgress,\n  progress,\n  rtl,\n  isIn,\n  theme\n}: ProgressBarProps) {\n  const style: React.CSSProperties = {\n    ...userStyle,\n    animationDuration: `${delay}ms`,\n    animationPlayState: isRunning ? 'running' : 'paused',\n    opacity: hide ? 0 : 1\n  };\n\n  if (controlledProgress) style.transform = `scaleX(${progress})`;\n  const defaultClassName = cx(\n    `${Default.CSS_NAMESPACE}__progress-bar`,\n    controlledProgress\n      ? `${Default.CSS_NAMESPACE}__progress-bar--controlled`\n      : `${Default.CSS_NAMESPACE}__progress-bar--animated`,\n    `${Default.CSS_NAMESPACE}__progress-bar-theme--${theme}`,\n    `${Default.CSS_NAMESPACE}__progress-bar--${type}`,\n    {\n      [`${Default.CSS_NAMESPACE}__progress-bar--rtl`]: rtl\n    }\n  );\n  const classNames = isFn(className)\n    ? className({\n        rtl,\n        type,\n        defaultClassName\n      })\n    : cx(defaultClassName, className);\n\n  // 🧐 controlledProgress is derived from progress\n  // so if controlledProgress is set\n  // it means that this is also the case for progress\n  const animationEvent = {\n    [controlledProgress && progress! >= 1\n      ? 'onTransitionEnd'\n      : 'onAnimationEnd']:\n      controlledProgress && progress! < 1\n        ? null\n        : () => {\n            isIn && closeToast();\n          }\n  };\n\n  // TODO: add aria-valuenow, aria-valuemax, aria-valuemin\n\n  return (\n    <div\n      role=\"progressbar\"\n      aria-hidden={hide ? 'true' : 'false'}\n      aria-label=\"notification timer\"\n      className={classNames}\n      style={style}\n      {...animationEvent}\n    />\n  );\n}\n\nProgressBar.defaultProps = {\n  type: TYPE.DEFAULT,\n  hide: false\n};\n","import React from 'react';\n\nimport { Theme, TypeOptions } from '../types';\nimport { Default } from '../utils';\n\n/**\n * Used when providing custom icon\n */\nexport interface IconProps {\n  theme: Theme;\n  type: TypeOptions;\n}\n\nexport type BuiltInIconProps = React.SVGProps<SVGSVGElement> & IconProps;\n\nconst Svg: React.FC<BuiltInIconProps> = ({ theme, type, ...rest }) => (\n  <svg\n    viewBox=\"0 0 24 24\"\n    width=\"100%\"\n    height=\"100%\"\n    fill={\n      theme === 'colored'\n        ? 'currentColor'\n        : `var(--toastify-icon-color-${type})`\n    }\n    {...rest}\n  />\n);\n\nfunction Warning(props: BuiltInIconProps) {\n  return (\n    <Svg {...props}>\n      <path d=\"M23.32 17.191L15.438 2.184C14.728.833 13.416 0 11.996 0c-1.42 0-2.733.833-3.443 2.184L.533 17.448a4.744 4.744 0 000 4.368C1.243 23.167 2.555 24 3.975 24h16.05C22.22 24 24 22.044 24 19.632c0-.904-.251-1.746-.68-2.44zm-9.622 1.46c0 1.033-.724 1.823-1.698 1.823s-1.698-.79-1.698-1.822v-.043c0-1.028.724-1.822 1.698-1.822s1.698.79 1.698 1.822v.043zm.039-12.285l-.84 8.06c-.057.581-.408.943-.897.943-.49 0-.84-.367-.896-.942l-.84-8.065c-.057-.624.25-1.095.779-1.095h1.91c.528.005.84.476.784 1.1z\" />\n    </Svg>\n  );\n}\n\nfunction Info(props: BuiltInIconProps) {\n  return (\n    <Svg {...props}>\n      <path d=\"M12 0a12 12 0 1012 12A12.013 12.013 0 0012 0zm.25 5a1.5 1.5 0 11-1.5 1.5 1.5 1.5 0 011.5-1.5zm2.25 13.5h-4a1 1 0 010-2h.75a.25.25 0 00.25-.25v-4.5a.25.25 0 00-.25-.25h-.75a1 1 0 010-2h1a2 2 0 012 2v4.75a.25.25 0 00.25.25h.75a1 1 0 110 2z\" />\n    </Svg>\n  );\n}\n\nfunction Success(props: BuiltInIconProps) {\n  return (\n    <Svg {...props}>\n      <path d=\"M12 0a12 12 0 1012 12A12.014 12.014 0 0012 0zm6.927 8.2l-6.845 9.289a1.011 1.011 0 01-1.43.188l-4.888-3.908a1 1 0 111.25-1.562l4.076 3.261 6.227-8.451a1 1 0 111.61 1.183z\" />\n    </Svg>\n  );\n}\n\nfunction Error(props: BuiltInIconProps) {\n  return (\n    <Svg {...props}>\n      <path d=\"M11.983 0a12.206 12.206 0 00-8.51 3.653A11.8 11.8 0 000 12.207 11.779 11.779 0 0011.8 24h.214A12.111 12.111 0 0024 11.791 11.766 11.766 0 0011.983 0zM10.5 16.542a1.476 1.476 0 011.449-1.53h.027a1.527 1.527 0 011.523 1.47 1.475 1.475 0 01-1.449 1.53h-.027a1.529 1.529 0 01-1.523-1.47zM11 12.5v-6a1 1 0 012 0v6a1 1 0 11-2 0z\" />\n    </Svg>\n  );\n}\n\nfunction Spinner() {\n  return <div className={`${Default.CSS_NAMESPACE}__spinner`} />;\n}\n\nexport const Icons = {\n  info: Info,\n  warning: Warning,\n  success: Success,\n  error: Error,\n  spinner: Spinner\n};\n","import * as React from 'react';\nimport cx from 'clsx';\n\nimport { ProgressBar } from './ProgressBar';\nimport { Icons } from './Icons';\nimport { ToastProps } from '../types';\nimport { Default, isFn, isStr } from '../utils';\nimport { useToast } from '../hooks';\n\nexport const Toast: React.FC<ToastProps> = props => {\n  const {\n    isRunning,\n    preventExitTransition,\n    toastRef,\n    eventHandlers\n  } = useToast(props);\n  const {\n    closeButton,\n    children,\n    autoClose,\n    onClick,\n    type,\n    hideProgressBar,\n    closeToast,\n    transition: Transition,\n    position,\n    className,\n    style,\n    bodyClassName,\n    bodyStyle,\n    progressClassName,\n    progressStyle,\n    updateId,\n    role,\n    progress,\n    rtl,\n    toastId,\n    deleteToast,\n    isIn,\n    isLoading,\n    icon,\n    theme\n  } = props;\n  const defaultClassName = cx(\n    `${Default.CSS_NAMESPACE}__toast`,\n    `${Default.CSS_NAMESPACE}__toast-theme--${theme}`,\n    `${Default.CSS_NAMESPACE}__toast--${type}`,\n    {\n      [`${Default.CSS_NAMESPACE}__toast--rtl`]: rtl\n    }\n  );\n  const cssClasses = isFn(className)\n    ? className({\n        rtl,\n        position,\n        type,\n        defaultClassName\n      })\n    : cx(defaultClassName, className);\n  const isProgressControlled = !!progress;\n  const maybeIcon = Icons[type as keyof typeof Icons];\n  const iconProps = { theme, type };\n  let Icon: React.ReactNode = maybeIcon && maybeIcon(iconProps);\n\n  if (icon === false) {\n    Icon = void 0;\n  } else if (isFn(icon)) {\n    Icon = icon(iconProps);\n  } else if (React.isValidElement(icon)) {\n    Icon = React.cloneElement(icon, iconProps);\n  } else if (isStr(icon)) {\n    Icon = icon;\n  } else if (isLoading) {\n    Icon = Icons.spinner();\n  }\n\n  function renderCloseButton(closeButton: any) {\n    if (!closeButton) return;\n\n    const props = { closeToast, type, theme };\n\n    if (isFn(closeButton)) return closeButton(props);\n\n    if (React.isValidElement(closeButton))\n      return React.cloneElement(closeButton, props);\n  }\n\n  return (\n    <Transition\n      isIn={isIn}\n      done={deleteToast}\n      position={position}\n      preventExitTransition={preventExitTransition}\n      nodeRef={toastRef}\n    >\n      <div\n        id={toastId as string}\n        onClick={onClick}\n        className={cssClasses}\n        {...eventHandlers}\n        style={style}\n        ref={toastRef}\n      >\n        <div\n          {...(isIn && { role: role })}\n          className={\n            isFn(bodyClassName)\n              ? bodyClassName({ type })\n              : cx(`${Default.CSS_NAMESPACE}__toast-body`, bodyClassName)\n          }\n          style={bodyStyle}\n        >\n          {Icon && (\n            <div\n              className={cx(`${Default.CSS_NAMESPACE}__toast-icon`, {\n                [`${Default.CSS_NAMESPACE}--animate-icon ${Default.CSS_NAMESPACE}__zoom-enter`]: !isLoading\n              })}\n            >\n              {Icon}\n            </div>\n          )}\n          <div>{children}</div>\n        </div>\n        {renderCloseButton(closeButton)}\n        {(autoClose || isProgressControlled) && (\n          <ProgressBar\n            {...(updateId && !isProgressControlled\n              ? { key: `pb-${updateId}` }\n              : {})}\n            rtl={rtl}\n            theme={theme}\n            delay={autoClose as number}\n            isRunning={isRunning}\n            isIn={isIn}\n            closeToast={closeToast}\n            hide={hideProgressBar}\n            type={type}\n            style={progressStyle}\n            className={progressClassName}\n            controlledProgress={isProgressControlled}\n            progress={progress}\n          />\n        )}\n      </div>\n    </Transition>\n  );\n};\n","import { Default, cssTransition } from '../utils';\n\nconst Bounce = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__bounce-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__bounce-exit`,\n  appendPosition: true\n});\n\nconst Slide = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__slide-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__slide-exit`,\n  appendPosition: true\n});\n\nconst Zoom = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__zoom-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__zoom-exit`\n});\n\nconst Flip = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__flip-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__flip-exit`\n});\n\nexport { Bounce, Slide, Zoom, Flip };\n","import * as React from 'react';\nimport cx from 'clsx';\n\nimport { Toast } from './Toast';\nimport { CloseButton } from './CloseButton';\nimport { Bounce } from './Transitions';\nimport { POSITION, Direction, Default, parseClassName, isFn } from '../utils';\nimport { useToastContainer } from '../hooks';\nimport { ToastContainerProps, ToastPosition } from '../types';\n\nexport const ToastContainer: React.FC<ToastContainerProps> = props => {\n  const { getToastToRender, containerRef, isToastActive } = useToastContainer(\n    props\n  );\n  const { className, style, rtl, containerId } = props;\n\n  function getClassName(position: ToastPosition) {\n    const defaultClassName = cx(\n      `${Default.CSS_NAMESPACE}__toast-container`,\n      `${Default.CSS_NAMESPACE}__toast-container--${position}`,\n      { [`${Default.CSS_NAMESPACE}__toast-container--rtl`]: rtl }\n    );\n    return isFn(className)\n      ? className({\n          position,\n          rtl,\n          defaultClassName\n        })\n      : cx(defaultClassName, parseClassName(className));\n  }\n\n  return (\n    <div\n      ref={containerRef}\n      className={Default.CSS_NAMESPACE as string}\n      id={containerId as string}\n    >\n      {getToastToRender((position, toastList) => {\n        const containerStyle: React.CSSProperties =\n          toastList.length === 0\n            ? { ...style, pointerEvents: 'none' }\n            : { ...style };\n\n        return (\n          <div\n            className={getClassName(position)}\n            style={containerStyle}\n            key={`container-${position}`}\n          >\n            {toastList.map(({ content, props: toastProps }) => {\n              return (\n                <Toast\n                  {...toastProps}\n                  isIn={isToastActive(toastProps.toastId)}\n                  key={`toast-${toastProps.key}`}\n                  closeButton={\n                    toastProps.closeButton === true\n                      ? CloseButton\n                      : toastProps.closeButton\n                  }\n                >\n                  {content}\n                </Toast>\n              );\n            })}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nToastContainer.defaultProps = {\n  position: POSITION.TOP_RIGHT as ToastPosition,\n  transition: Bounce,\n  rtl: false,\n  autoClose: 5000,\n  hideProgressBar: false,\n  closeButton: CloseButton,\n  pauseOnHover: true,\n  pauseOnFocusLoss: true,\n  closeOnClick: true,\n  newestOnTop: false,\n  draggable: true,\n  draggablePercent: Default.DRAGGABLE_PERCENT as number,\n  draggableDirection: Direction.X,\n  role: 'alert',\n  theme: 'light'\n};\n","import * as React from 'react';\nimport { render } from 'react-dom';\n\nimport { POSITION, TYPE, canUseDom, isStr, isNum, isFn } from '../utils';\nimport { eventManager, OnChangeCallback, Event } from './eventManager';\nimport {\n  ToastContent,\n  ToastOptions,\n  ToastProps,\n  Id,\n  ToastContainerProps,\n  UpdateOptions,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps,\n  TypeOptions\n} from '../types';\nimport { ContainerInstance } from '../hooks';\nimport { ToastContainer } from '../components';\n\ninterface EnqueuedToast {\n  content: ToastContent;\n  options: NotValidatedToastProps;\n}\n\nlet containers = new Map<ContainerInstance | Id, ContainerInstance>();\nlet latestInstance: ContainerInstance | Id;\nlet containerDomNode: HTMLElement;\nlet containerConfig: ToastContainerProps;\nlet queue: EnqueuedToast[] = [];\nlet lazy = false;\n\n/**\n * Check whether any container is currently mounted in the DOM\n */\nfunction isAnyContainerMounted() {\n  return containers.size > 0;\n}\n\n/**\n * Get the toast by id, given it's in the DOM, otherwise returns null\n */\nfunction getToast(toastId: Id, { containerId }: ToastOptions) {\n  const container = containers.get(containerId || latestInstance);\n  if (!container) return null;\n\n  return container.getToast(toastId);\n}\n\n/**\n * Generate a random toastId\n */\nfunction generateToastId() {\n  return Math.random()\n    .toString(36)\n    .substr(2, 9);\n}\n\n/**\n * Generate a toastId or use the one provided\n */\nfunction getToastId(options?: ToastOptions) {\n  if (options && (isStr(options.toastId) || isNum(options.toastId))) {\n    return options.toastId;\n  }\n\n  return generateToastId();\n}\n\n/**\n * If the container is not mounted, the toast is enqueued and\n * the container lazy mounted\n */\nfunction dispatchToast(\n  content: ToastContent,\n  options: NotValidatedToastProps\n): Id {\n  if (isAnyContainerMounted()) {\n    eventManager.emit(Event.Show, content, options);\n  } else {\n    queue.push({ content, options });\n    if (lazy && canUseDom) {\n      lazy = false;\n      containerDomNode = document.createElement('div');\n      document.body.appendChild(containerDomNode);\n      render(<ToastContainer {...containerConfig} />, containerDomNode);\n    }\n  }\n\n  return options.toastId;\n}\n\n/**\n * Merge provided options with the defaults settings and generate the toastId\n */\nfunction mergeOptions(type: string, options?: ToastOptions) {\n  return {\n    ...options,\n    type: (options && options.type) || type,\n    toastId: getToastId(options)\n  } as NotValidatedToastProps;\n}\n\nconst createToastByType = (type: string) => (\n  content: ToastContent,\n  options?: ToastOptions\n) => dispatchToast(content, mergeOptions(type, options));\n\nconst toast = (content: ToastContent, options?: ToastOptions) =>\n  dispatchToast(content, mergeOptions(TYPE.DEFAULT, options));\n\ntoast.loading = (content: ToastContent, options?: ToastOptions) =>\n  dispatchToast(\n    content,\n    mergeOptions(TYPE.DEFAULT, {\n      isLoading: true,\n      autoClose: false,\n      closeOnClick: false,\n      closeButton: false,\n      draggable: false,\n      ...options\n    })\n  );\n\ninterface ToastPromiseParams {\n  pending?: string | UpdateOptions;\n  success?: string | UpdateOptions;\n  error?: string | UpdateOptions;\n}\n\nfunction handlePromise<T>(\n  promise: Promise<T> | (() => Promise<T>),\n  { pending, error, success }: ToastPromiseParams,\n  options?: ToastOptions\n) {\n  let id: Id;\n\n  if (pending) {\n    id = isStr(pending)\n      ? toast.loading(pending, options)\n      : toast.loading(pending.render, {\n          ...options,\n          ...(pending as ToastOptions)\n        });\n  }\n\n  const resetParams = {\n    isLoading: null,\n    autoClose: null,\n    closeOnClick: null,\n    closeButton: null,\n    draggable: null\n  };\n\n  const resolver = (\n    type: TypeOptions,\n    input: string | UpdateOptions,\n    result: T\n  ) => {\n    const baseParams = {\n      type,\n      ...resetParams,\n      ...options,\n      data: result\n    };\n    const params = isStr(input) ? { render: input } : input;\n\n    // if the id is set we know that it's an update\n    if (id) {\n      toast.update(id, {\n        ...baseParams,\n        ...params\n      });\n    } else {\n      // using toast.promise without loading\n      toast(params.render, {\n        ...baseParams,\n        ...params\n      } as ToastOptions);\n    }\n\n    return result;\n  };\n\n  const p = isFn(promise) ? promise() : promise;\n\n  //call the resolvers only when needed\n  p.then(result => success && resolver('success', success, result)).catch(\n    err => error && resolver('error', error, err)\n  );\n\n  return p;\n}\n\ntoast.promise = handlePromise;\ntoast.success = createToastByType(TYPE.SUCCESS);\ntoast.info = createToastByType(TYPE.INFO);\ntoast.error = createToastByType(TYPE.ERROR);\ntoast.warning = createToastByType(TYPE.WARNING);\ntoast.warn = toast.warning;\ntoast.dark = (content: ToastContent, options?: ToastOptions) =>\n  dispatchToast(\n    content,\n    mergeOptions(TYPE.DEFAULT, {\n      theme: 'dark',\n      ...options\n    })\n  );\n\n/**\n * Remove toast programmaticaly\n */\ntoast.dismiss = (id?: Id) => eventManager.emit(Event.Clear, id);\n\n/**\n * Clear waiting queue when limit is used\n */\ntoast.clearWaitingQueue = (params: ClearWaitingQueueParams = {}) =>\n  eventManager.emit(Event.ClearWaitingQueue, params);\n\n/**\n * return true if one container is displaying the toast\n */\ntoast.isActive = (id: Id) => {\n  let isToastActive = false;\n\n  containers.forEach(container => {\n    if (container.isToastActive && container.isToastActive(id)) {\n      isToastActive = true;\n    }\n  });\n\n  return isToastActive;\n};\n\ntoast.update = (toastId: Id, options: UpdateOptions = {}) => {\n  // if you call toast and toast.update directly nothing will be displayed\n  // this is why I defered the update\n  setTimeout(() => {\n    const toast = getToast(toastId, options as ToastOptions);\n    if (toast) {\n      const { props: oldOptions, content: oldContent } = toast;\n\n      const nextOptions = {\n        ...oldOptions,\n        ...options,\n        toastId: options.toastId || toastId,\n        updateId: generateToastId()\n      } as ToastProps & UpdateOptions;\n\n      if (nextOptions.toastId !== toastId) nextOptions.staleId = toastId;\n\n      const content = nextOptions.render || oldContent;\n      delete nextOptions.render;\n\n      dispatchToast(content, nextOptions);\n    }\n  }, 0);\n};\n\n/**\n * Used for controlled progress bar.\n */\ntoast.done = (id: Id) => {\n  toast.update(id, {\n    progress: 1\n  });\n};\n\n/**\n * Track changes. The callback get the number of toast displayed\n *\n */\ntoast.onChange = (callback: OnChangeCallback) => {\n  if (isFn(callback)) {\n    eventManager.on(Event.Change, callback);\n  }\n  return () => {\n    isFn(callback) && eventManager.off(Event.Change, callback);\n  };\n};\n\n/**\n * Configure the ToastContainer when lazy mounted\n */\ntoast.configure = (config: ToastContainerProps = {}) => {\n  lazy = true;\n  containerConfig = config;\n};\n\ntoast.POSITION = POSITION;\ntoast.TYPE = TYPE;\n\n/**\n * Wait until the ToastContainer is mounted to dispatch the toast\n * and attach isActive method\n */\neventManager\n  .on(Event.DidMount, (containerInstance: ContainerInstance) => {\n    latestInstance = containerInstance.containerId || containerInstance;\n    containers.set(latestInstance, containerInstance);\n\n    queue.forEach(item => {\n      eventManager.emit(Event.Show, item.content, item.options);\n    });\n\n    queue = [];\n  })\n  .on(Event.WillUnmount, (containerInstance: ContainerInstance) => {\n    containers.delete(containerInstance.containerId || containerInstance);\n\n    if (containers.size === 0) {\n      eventManager\n        .off(Event.Show)\n        .off(Event.Clear)\n        .off(Event.ClearWaitingQueue);\n    }\n\n    if (canUseDom && containerDomNode) {\n      document.body.removeChild(containerDomNode);\n    }\n  });\n\nexport { toast };\n"],"sourceRoot":""}